com.speedlogicapp.speedlogiclite.settings.Views:  void  setCustomRaceLabels(int)	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.feedback.Feedback:  com.speedlogicapp.speedlogiclite.main.Main  access$100(com.speedlogicapp.speedlogiclite.feedback.Feedback)
com.speedlogicapp.speedlogiclite.topspeed.TopSpeed:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.history.Menu:  android.widget.ImageView  access$100(com.speedlogicapp.speedlogiclite.history.Menu)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  onSensorChanged(android.hardware.SensorEvent)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  float[]  access$500(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)
com.speedlogicapp.speedlogiclite.feedback.Feedback:  void  onStart()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.race.Sensors:  void  onStopRace()	com.speedlogicapp.speedlogiclite.race.Logic:  void  stopRace(boolean)
com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.settings.Views:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)
com.speedlogicapp.speedlogiclite.settings.Settings:  void  onResume()	com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  onTick(long)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.main.App:  float  getAccSensitivity()	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.settings.Views:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.settings.Views:  void  setValuesToViews()
com.speedlogicapp.speedlogiclite.feedback.Feedback:  void  onStart()	com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.feedback.Feedback,com.speedlogicapp.speedlogiclite.feedback.Feedback$1)
com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  com.speedlogicapp.speedlogiclite.speedometer.Dashboard  access$400(com.speedlogicapp.speedlogiclite.speedometer.Sensors)
com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard,com.speedlogicapp.speedlogiclite.settings.Dashboard$1)	com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard)
com.speedlogicapp.speedlogiclite.db.DBHelper:  void  <init>(android.content.Context)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  getAppString(int)
com.speedlogicapp.speedlogiclite.night.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.main.App:  boolean  getBool(java.lang.String,boolean)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$SatellitesListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$SatellitesListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setSensor(int)	com.speedlogicapp.speedlogiclite.main.App:  android.content.SharedPreferences  getPreferences()
com.speedlogicapp.speedlogiclite.lap.Lap:  void  onPause()	com.speedlogicapp.speedlogiclite.main.Lite:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.feedback.Feedback:  com.google.android.gms.analytics.Tracker  access$200(com.speedlogicapp.speedlogiclite.feedback.Feedback)
com.speedlogicapp.speedlogiclite.race.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Labels,com.speedlogicapp.speedlogiclite.race.Logic,android.view.View,boolean)	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setLabels()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$BatteryTimeReceiver:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$BatteryTimeReceiver:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors)
com.speedlogicapp.speedlogiclite.race.Logic:  void  showCheckpointsInLog()	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  getAppString(int)
com.speedlogicapp.speedlogiclite.main.App:  android.database.sqlite.SQLiteDatabase  getSQLiteDatabase()	com.speedlogicapp.speedlogiclite.db.DBHelper:  void  <init>(android.content.Context)
com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  onClick(android.content.DialogInterface,int)	com.speedlogicapp.speedlogiclite.speedometer.Dialogs:  com.speedlogicapp.speedlogiclite.speedometer.Sensors  access$100(com.speedlogicapp.speedlogiclite.speedometer.Dialogs)
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  <init>(com.speedlogicapp.speedlogiclite.race.Logic)
com.speedlogicapp.speedlogiclite.race.Logic:  void  setSpeed(double,double,double,float)	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setSpeed()
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.night.Night:  void  <init>()
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setSensor(int)	com.speedlogicapp.speedlogiclite.main.App:  android.hardware.SensorManager  getSensorManager()
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.main.Main:  void  addShortcutToDesktop(android.content.Context)
com.speedlogicapp.speedlogiclite.main.Main:  void  addShortcutToDesktop(android.content.Context)	com.speedlogicapp.speedlogiclite.main.App:  boolean  getBool(java.lang.String,boolean)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.speedometer.Dashboard,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,int)
com.speedlogicapp.speedlogiclite.race.Labels:  void  <init>()	com.speedlogicapp.speedlogiclite.main.App:  int  getSpeedUnit()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors)
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.main.App:  int  getSpeedUnit()
com.speedlogicapp.speedlogiclite.night.Night:  void  onResume()	com.speedlogicapp.speedlogiclite.night.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)
com.speedlogicapp.speedlogiclite.about.About:  void  onStart()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.race.Labels:  void  <init>()	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  getAppString(int)
com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  onTick(long)	com.speedlogicapp.speedlogiclite.race.Logic:  com.speedlogicapp.speedlogiclite.race.Dashboard  access$000(com.speedlogicapp.speedlogiclite.race.Logic)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.settings.Settings:  void  <init>()
com.speedlogicapp.speedlogiclite.race.Sensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.race.Logic:  void  setSpeed(double,double,double,float)
com.speedlogicapp.speedlogiclite.settings.Views:  void  setCheckboxLabels()	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.main.Fragments:  void  <init>(android.app.Fragment,int,java.lang.Integer)
com.speedlogicapp.speedlogiclite.settings.Settings:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  access$700(com.speedlogicapp.speedlogiclite.speedometer.Sensors,int)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setSensor(int)
com.speedlogicapp.speedlogiclite.topspeed.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,android.view.View)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,int)
com.speedlogicapp.speedlogiclite.settings.Views:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  getAppString(int)
com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  setSpeed(float)
com.speedlogicapp.speedlogiclite.welcome.Welcome:  void  runApplication(android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  android.content.SharedPreferences  getPreferences()
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  double  getSpeedConverter()
com.speedlogicapp.speedlogiclite.night.Night:  void  onResume()	com.speedlogicapp.speedlogiclite.night.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.topspeed.TopSpeed:  void  onResume()	com.speedlogicapp.speedlogiclite.topspeed.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,android.view.View)
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.main.App:  android.content.SharedPreferences  getPreferences()
com.speedlogicapp.speedlogiclite.topspeed.TopSpeed:  void  onPause()	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.race.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Logic,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,int)
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  setTime()
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.main.App:  double  getSpeedConverter()
com.speedlogicapp.speedlogiclite.main.App:  int  getSpeedUnit()	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.topspeed.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  double  getSpeedConverter()
com.speedlogicapp.speedlogiclite.topspeed.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.night.Sensors:  void  setListeners(boolean)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)	com.speedlogicapp.speedlogiclite.main.App:  android.content.SharedPreferences  getPreferences()
com.speedlogicapp.speedlogiclite.speedometer.Dialogs:  android.app.Dialog  onCreateDialog(android.os.Bundle)	com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Dialogs,com.speedlogicapp.speedlogiclite.speedometer.Dialogs$1)
com.speedlogicapp.speedlogiclite.race.Sensors:  void  onSatChanged(int)	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setSatellites()
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  clearMileage()	com.speedlogicapp.speedlogiclite.main.App:  android.content.SharedPreferences  getPreferences()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  onSensorChanged(android.hardware.SensorEvent)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  int  access$300(com.speedlogicapp.speedlogiclite.speedometer.Sensors)
com.speedlogicapp.speedlogiclite.settings.Dashboard$SeekBarListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard,com.speedlogicapp.speedlogiclite.settings.Dashboard$1)	com.speedlogicapp.speedlogiclite.settings.Dashboard$SeekBarListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard)
com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onResume()	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.speedometer.Dashboard,android.app.FragmentManager)
com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  <init>(com.speedlogicapp.speedlogiclite.history.Menu,com.speedlogicapp.speedlogiclite.history.Menu$1)	com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  <init>(com.speedlogicapp.speedlogiclite.history.Menu)
com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onPause()	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.history.History:  void  onPause()	com.speedlogicapp.speedlogiclite.history.Menu:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.settings.Views:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.settings.Views:  android.view.View  v(int)
com.speedlogicapp.speedlogiclite.about.About:  void  onStart()	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  getTime(long,int)
com.speedlogicapp.speedlogiclite.topspeed.TopSpeed:  void  onResume()	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.night.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.main.App:  double  getSpeedConverter()
com.speedlogicapp.speedlogiclite.settings.Views:  void  setCustomRaceLabels(int)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.night.Night:  void  onPause()	com.speedlogicapp.speedlogiclite.night.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  setMileage(float)
com.speedlogicapp.speedlogiclite.main.App:  void  access$000(java.lang.String)	com.speedlogicapp.speedlogiclite.main.App:  void  sendReportToServer(java.lang.String)
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  setMileage(float)	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setDefaultSensor()	com.speedlogicapp.speedlogiclite.main.App:  android.hardware.SensorManager  getSensorManager()
com.speedlogicapp.speedlogiclite.lap.Lap:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  onSensorChanged(android.hardware.SensorEvent)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  com.speedlogicapp.speedlogiclite.speedometer.Dashboard  access$400(com.speedlogicapp.speedlogiclite.speedometer.Sensors)
com.speedlogicapp.speedlogiclite.race.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Logic,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.main.App:  float  getAccSensitivity()
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$GnssCallback:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$GnssCallback:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)
com.speedlogicapp.speedlogiclite.lap.Lap:  void  onResume()	com.speedlogicapp.speedlogiclite.main.Lite:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.view.View)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.history.History:  void  <init>()
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)
com.speedlogicapp.speedlogiclite.night.Night:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setListeners(boolean)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  onClick(android.content.DialogInterface,int)	com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs:  com.speedlogicapp.speedlogiclite.main.Main  access$100(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  clearMileage()	com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  setMileage(float)
com.speedlogicapp.speedlogiclite.night.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,int)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.lap.Lap:  void  <init>()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.race.Race:  void  <init>()
com.speedlogicapp.speedlogiclite.settings.Settings:  void  onPause()	com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.Main:  void  showWelcomeScreen()	com.speedlogicapp.speedlogiclite.main.App:  boolean  getBool(java.lang.String,boolean)
com.speedlogicapp.speedlogiclite.about.About:  void  onStart()	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Dialogs,com.speedlogicapp.speedlogiclite.speedometer.Dialogs$1)	com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Dialogs)
com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs,com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs)
com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getDefaultTracker()
com.speedlogicapp.speedlogiclite.main.Main:  void  deleteHistoryItem(android.view.View)	com.speedlogicapp.speedlogiclite.history.History:  void  deleteHistoryItem(android.view.View)
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  int  getSpeedUnit()
com.speedlogicapp.speedlogiclite.history.History:  void  onResume()	com.speedlogicapp.speedlogiclite.history.Menu:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  <init>()
com.speedlogicapp.speedlogiclite.race.Logic:  void  getCheckpoints()	com.speedlogicapp.speedlogiclite.race.Point:  void  <init>(java.lang.String)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.feedback.Feedback:  void  <init>()
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.about.About:  void  <init>()
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  boolean  getBool(java.lang.String,boolean)
com.speedlogicapp.speedlogiclite.main.Main:  boolean  onNavigationItemSelected(android.view.MenuItem)	com.speedlogicapp.speedlogiclite.main.Main:  void  selectFragment(int)
com.speedlogicapp.speedlogiclite.settings.Views:  void  setCheckboxLabels()	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  <init>(com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Dashboard$1)	com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  <init>(com.speedlogicapp.speedlogiclite.race.Dashboard)
com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onResume()	com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)
com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setDefaultSensor()	com.speedlogicapp.speedlogiclite.main.App:  int  getInt(java.lang.String,int)
com.speedlogicapp.speedlogiclite.history.Menu:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.history.Menu:  void  removeAllViews()
com.speedlogicapp.speedlogiclite.race.Logic:  void  startRace()	com.speedlogicapp.speedlogiclite.race.Logic:  void  showNotification(java.lang.String,int)
com.speedlogicapp.speedlogiclite.history.History:  void  onResume()	com.speedlogicapp.speedlogiclite.history.Show:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  setSpeed(float)
com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  onFinish()	com.speedlogicapp.speedlogiclite.race.Logic:  void  stopRace(boolean)
com.speedlogicapp.speedlogiclite.main.App:  double  getSpeedConverter()	com.speedlogicapp.speedlogiclite.main.App:  int  getSpeedUnit()
com.speedlogicapp.speedlogiclite.history.Menu:  void  access$600(com.speedlogicapp.speedlogiclite.history.Menu)	com.speedlogicapp.speedlogiclite.history.Menu:  void  removeAllViews()
com.speedlogicapp.speedlogiclite.race.Logic:  void  startRace()	com.speedlogicapp.speedlogiclite.main.App:  long  now()
com.speedlogicapp.speedlogiclite.history.History:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.race.Logic:  void  getCheckpoints()
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.race.Logic:  void  showCheckpointsInLog()
com.speedlogicapp.speedlogiclite.history.Menu:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.history.Menu:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.main.Main:  void  showWelcomeScreen()
com.speedlogicapp.speedlogiclite.race.Race:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  onTick(long)	com.speedlogicapp.speedlogiclite.main.App:  long  now()
com.speedlogicapp.speedlogiclite.race.Point:  void  <init>(java.lang.String)	com.speedlogicapp.speedlogiclite.main.App:  int  getSpeedUnit()
com.speedlogicapp.speedlogiclite.main.App:  boolean  getBool(java.lang.String,boolean)	com.speedlogicapp.speedlogiclite.main.App:  android.content.SharedPreferences  getPreferences()
com.speedlogicapp.speedlogiclite.race.Logic:  void  showCheckpointsInLog()	com.speedlogicapp.speedlogiclite.race.Logic:  void  showNotification(java.lang.String,int)
com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onResume()	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.Lite:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.main.Lite:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Labels,com.speedlogicapp.speedlogiclite.race.Logic,android.view.View,boolean)	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setSpeed()
com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.feedback.Feedback,com.speedlogicapp.speedlogiclite.feedback.Feedback$1)	com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.feedback.Feedback)
com.speedlogicapp.speedlogiclite.settings.Settings:  void  onResume()	com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)
com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.main.Lite,com.speedlogicapp.speedlogiclite.main.Lite$1)	com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.main.Lite)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$SatellitesListener:  void  onGpsStatusChanged(int)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  com.speedlogicapp.speedlogiclite.main.Main  access$400(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)
com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onResume()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  onClick(android.view.View)	com.speedlogicapp.speedlogiclite.main.Lite:  com.speedlogicapp.speedlogiclite.main.Main  access$100(com.speedlogicapp.speedlogiclite.main.Lite)
com.speedlogicapp.speedlogiclite.settings.Views:  void  setCheckboxLabels()	com.speedlogicapp.speedlogiclite.settings.Views:  android.view.View  v(int)
com.speedlogicapp.speedlogiclite.main.App:  void  onCreate()	com.speedlogicapp.speedlogiclite.main.App$ExceptionTracker:  void  <init>(com.speedlogicapp.speedlogiclite.main.App)
com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)	com.speedlogicapp.speedlogiclite.topspeed.TopSpeed:  void  <init>()
com.speedlogicapp.speedlogiclite.race.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Labels,com.speedlogicapp.speedlogiclite.race.Logic,android.view.View,boolean)	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setMileage()
com.speedlogicapp.speedlogiclite.race.Logic:  void  startRace()	com.speedlogicapp.speedlogiclite.main.App:  java.lang.String  f(java.lang.String,java.lang.Object[])
com.speedlogicapp.speedlogiclite.feedback.Feedback:  com.speedlogicapp.speedlogiclite.main.Main  access$100(com.speedlogicapp.speedlogiclite.feedback.Feedback)	com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.history.Menu:  android.widget.ImageView  access$100(com.speedlogicapp.speedlogiclite.history.Menu)	com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.settings.Views:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)
com.speedlogicapp.speedlogiclite.race.Sensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  onLocationChanged(android.location.Location)
com.speedlogicapp.speedlogiclite.settings.Views:  void  setValuesToViews()	com.speedlogicapp.speedlogiclite.settings.Views:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)
com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.feedback.Feedback,com.speedlogicapp.speedlogiclite.feedback.Feedback$1)	com.speedlogicapp.speedlogiclite.feedback.Feedback:  void  onStart()
com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard)	com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard,com.speedlogicapp.speedlogiclite.settings.Dashboard$1)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$SatellitesListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$SatellitesListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  android.app.FragmentManager  access$600(com.speedlogicapp.speedlogiclite.speedometer.Sensors)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.feedback.Feedback:  com.google.android.gms.analytics.Tracker  access$200(com.speedlogicapp.speedlogiclite.feedback.Feedback)	com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setLabels()	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Labels,com.speedlogicapp.speedlogiclite.race.Logic,android.view.View,boolean)
com.speedlogicapp.speedlogiclite.speedometer.Sensors$BatteryTimeReceiver:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$BatteryTimeReceiver:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)
com.speedlogicapp.speedlogiclite.db.DBHelper:  void  <init>(android.content.Context)	com.speedlogicapp.speedlogiclite.main.App:  android.database.sqlite.SQLiteDatabase  getSQLiteDatabase()
com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  <init>(com.speedlogicapp.speedlogiclite.race.Logic)	com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)
com.speedlogicapp.speedlogiclite.main.Main:  void  addShortcutToDesktop(android.content.Context)	com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)
com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  <init>(com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Dashboard$1)	com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Logic,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.race.Race:  void  onResume()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)
com.speedlogicapp.speedlogiclite.night.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.night.Night:  void  onResume()
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Logic:  com.speedlogicapp.speedlogiclite.race.Dashboard  access$000(com.speedlogicapp.speedlogiclite.race.Logic)	com.speedlogicapp.speedlogiclite.race.Logic$RaceTimer:  void  onTick(long)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setDefaultSensor()	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Logic:  void  setSpeed(double,double,double,float)	com.speedlogicapp.speedlogiclite.race.Sensors:  void  onLocChanged(int,double,double,float)
com.speedlogicapp.speedlogiclite.race.Logic:  void  onStartButtonClick()	com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.main.App:  void  access$000(java.lang.String)	com.speedlogicapp.speedlogiclite.main.App$ExceptionTracker:  void  uncaughtException(java.lang.Thread,java.lang.Throwable)
com.speedlogicapp.speedlogiclite.history.Menu:  android.widget.ImageView  access$300(com.speedlogicapp.speedlogiclite.history.Menu)	com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.topspeed.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager,android.view.View)	com.speedlogicapp.speedlogiclite.topspeed.TopSpeed:  void  onResume()
com.speedlogicapp.speedlogiclite.settings.Dashboard$SeekBarListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard,com.speedlogicapp.speedlogiclite.settings.Dashboard$1)	com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.speedometer.Dialogs:  void  setSensors(com.speedlogicapp.speedlogiclite.speedometer.Sensors)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs:  void  setValues(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  onAccChanged(float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  onSensorChanged(android.hardware.SensorEvent)
com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.settings.Dashboard:  android.app.FragmentManager  access$300(com.speedlogicapp.speedlogiclite.settings.Dashboard)	com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.speedometer.Sensors$BatteryTimeReceiver:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.App:  int  time()	com.speedlogicapp.speedlogiclite.race.Logic:  void  saveRace(int,int,int,long,int,int,double,double)
com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Dialogs,com.speedlogicapp.speedlogiclite.speedometer.Dialogs$1)	com.speedlogicapp.speedlogiclite.speedometer.Dialogs:  android.app.Dialog  onCreateDialog(android.os.Bundle)
com.speedlogicapp.speedlogiclite.race.Dashboard:  void  setSatellites()	com.speedlogicapp.speedlogiclite.race.Sensors:  void  onSatChanged(int)
com.speedlogicapp.speedlogiclite.settings.Dashboard$SeekBarListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard)	com.speedlogicapp.speedlogiclite.settings.Dashboard$SeekBarListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard,com.speedlogicapp.speedlogiclite.settings.Dashboard$1)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.speedometer.Dashboard,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onResume()
com.speedlogicapp.speedlogiclite.night.Sensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  onLocationChanged(android.location.Location)
com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  <init>(com.speedlogicapp.speedlogiclite.history.Menu)	com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  <init>(com.speedlogicapp.speedlogiclite.history.Menu,com.speedlogicapp.speedlogiclite.history.Menu$1)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  onLocationChanged(android.location.Location)
com.speedlogicapp.speedlogiclite.main.App:  void  sendReportToServer(java.lang.String)	com.speedlogicapp.speedlogiclite.main.App:  void  access$000(java.lang.String)
com.speedlogicapp.speedlogiclite.main.App:  float  getAccSensitivity()	com.speedlogicapp.speedlogiclite.race.Sensors:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Logic,android.app.FragmentManager)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$GnssCallback:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$GnssCallback:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)
com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  <init>(com.speedlogicapp.speedlogiclite.settings.Dashboard,com.speedlogicapp.speedlogiclite.settings.Dashboard$1)	com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  clearMileage()	com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  onClick(android.content.DialogInterface,int)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)
com.speedlogicapp.speedlogiclite.race.Sensors:  void  onAccChanged(float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  onSensorChanged(android.hardware.SensorEvent)
com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs:  com.speedlogicapp.speedlogiclite.main.Main  access$100(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs)	com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  onClick(android.content.DialogInterface,int)
com.speedlogicapp.speedlogiclite.history.Menu:  void  access$600(com.speedlogicapp.speedlogiclite.history.Menu)	com.speedlogicapp.speedlogiclite.history.Menu$DialogListener:  void  onClick(android.content.DialogInterface,int)
com.speedlogicapp.speedlogiclite.topspeed.Sensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  onLocationChanged(android.location.Location)
com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)
com.speedlogicapp.speedlogiclite.race.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,com.speedlogicapp.speedlogiclite.race.Labels,com.speedlogicapp.speedlogiclite.race.Logic,android.view.View,boolean)	com.speedlogicapp.speedlogiclite.race.Race:  void  onResume()
com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Dialogs)	com.speedlogicapp.speedlogiclite.speedometer.Dialogs$DialogListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Dialogs,com.speedlogicapp.speedlogiclite.speedometer.Dialogs$1)
com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs)	com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs,com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$1)
com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  <init>(com.speedlogicapp.speedlogiclite.history.Menu,com.speedlogicapp.speedlogiclite.history.Menu$1)	com.speedlogicapp.speedlogiclite.history.Menu:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getDefaultTracker()	com.speedlogicapp.speedlogiclite.main.App:  com.google.android.gms.analytics.Tracker  getTracker()
com.speedlogicapp.speedlogiclite.history.History:  void  deleteHistoryItem(android.view.View)	com.speedlogicapp.speedlogiclite.main.Main:  void  deleteHistoryItem(android.view.View)
com.speedlogicapp.speedlogiclite.history.Menu:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.history.History:  void  onResume()
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  com.speedlogicapp.speedlogiclite.speedometer.Sensors  access$500(com.speedlogicapp.speedlogiclite.speedometer.Sensors)	com.speedlogicapp.speedlogiclite.speedometer.Sensors$LayoutListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.race.Sensors:  void  onStopRace()	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)	com.speedlogicapp.speedlogiclite.race.Race:  void  onResume()
com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  <init>(com.speedlogicapp.speedlogiclite.race.Dashboard)	com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  <init>(com.speedlogicapp.speedlogiclite.race.Dashboard,com.speedlogicapp.speedlogiclite.race.Dashboard$1)
com.speedlogicapp.speedlogiclite.speedometer.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main)	com.speedlogicapp.speedlogiclite.speedometer.Speedometer:  void  onResume()
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$GnssCallback:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  onStopRace()	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$EnableSatellites:  void  <init>(com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs,com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs$1)	com.speedlogicapp.speedlogiclite.connections.ConnectionDialogs:  android.app.Dialog  onCreateDialog(android.os.Bundle)
com.speedlogicapp.speedlogiclite.settings.Dialogs:  void  setValues(int,com.speedlogicapp.speedlogiclite.settings.Views)	com.speedlogicapp.speedlogiclite.settings.Dashboard$OnClickListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.race.Dashboard:  android.widget.Button  access$200(com.speedlogicapp.speedlogiclite.race.Dashboard)	com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.history.Menu:  android.widget.ImageView  access$500(com.speedlogicapp.speedlogiclite.history.Menu)	com.speedlogicapp.speedlogiclite.history.Menu$ImageListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.race.Logic:  void  showCheckpointsInLog()	com.speedlogicapp.speedlogiclite.race.Logic:  void  <init>(com.speedlogicapp.speedlogiclite.race.Labels,android.app.FragmentManager,com.speedlogicapp.speedlogiclite.main.Main,android.view.View)
com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  onLocChanged(int,double,double,float)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$PositionListener:  void  onLocationChanged(android.location.Location)
com.speedlogicapp.speedlogiclite.main.Main:  void  showWelcomeScreen()	com.speedlogicapp.speedlogiclite.main.Main:  void  onCreate(android.os.Bundle)
com.speedlogicapp.speedlogiclite.race.Dashboard:  com.speedlogicapp.speedlogiclite.main.Main  access$300(com.speedlogicapp.speedlogiclite.race.Dashboard)	com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.race.Dashboard:  com.speedlogicapp.speedlogiclite.race.Logic  access$100(com.speedlogicapp.speedlogiclite.race.Dashboard)	com.speedlogicapp.speedlogiclite.race.Dashboard$MenuListener:  void  onClick(android.view.View)
com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.main.Lite,com.speedlogicapp.speedlogiclite.main.Lite$1)	com.speedlogicapp.speedlogiclite.main.Lite:  void  setListeners(boolean)
com.speedlogicapp.speedlogiclite.race.Logic:  void  setDashboard(com.speedlogicapp.speedlogiclite.race.Dashboard)	com.speedlogicapp.speedlogiclite.race.Race:  void  onResume()
com.speedlogicapp.speedlogiclite.speedometer.Sensors$SensorListener:  void  <init>(com.speedlogicapp.speedlogiclite.speedometer.Sensors,com.speedlogicapp.speedlogiclite.speedometer.Sensors$1)	com.speedlogicapp.speedlogiclite.speedometer.Sensors:  void  setDefaultSensor()
com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.feedback.Feedback)	com.speedlogicapp.speedlogiclite.feedback.Feedback$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.feedback.Feedback,com.speedlogicapp.speedlogiclite.feedback.Feedback$1)
com.speedlogicapp.speedlogiclite.settings.Dashboard:  void  <init>(com.speedlogicapp.speedlogiclite.main.Main,android.app.FragmentManager)	com.speedlogicapp.speedlogiclite.settings.Settings:  void  onResume()
com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.main.Lite)	com.speedlogicapp.speedlogiclite.main.Lite$ButtonListener:  void  <init>(com.speedlogicapp.speedlogiclite.main.Lite,com.speedlogicapp.speedlogiclite.main.Lite$1)
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  com.speedlogicapp.speedlogiclite.main.Main  access$400(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors)	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$SatellitesListener:  void  onGpsStatusChanged(int)
com.speedlogicapp.speedlogiclite.main.App$ExceptionTracker:  void  <init>(com.speedlogicapp.speedlogiclite.main.App)	com.speedlogicapp.speedlogiclite.main.App:  void  onCreate()
com.speedlogicapp.speedlogiclite.connections.ConnectionSensors:  float[]  access$502(com.speedlogicapp.speedlogiclite.connections.ConnectionSensors,float[])	com.speedlogicapp.speedlogiclite.connections.ConnectionSensors$AccelerationListener:  void  onSensorChanged(android.hardware.SensorEvent)
