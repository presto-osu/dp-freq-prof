com.mobileforming.android.te2.maps.sdk.model.Fence$Type:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.Fence$Type:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  java.util.List  access$202(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,java.util.List)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchHomePageEvents(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAndShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.android.te2.messages.MessagesDetailFragment$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version  getActiveVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.te2.core.view.MenuTileView:  void  selectItem(int)	com.mobileforming.te2.core.view.MenuTileView:  void  setSelectedUi()
com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$102(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  int  compare(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Poi)
com.mobileforming.te2.core.view.MenuTileView:  int  getMenuTileItemLayoutId(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  boolean  access$900(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  action(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1800(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectViewtoShow()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$31:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Event:  java.lang.String  getDescription()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  void  insertLocation(com.mobileforming.te2.core.entity.LocationHistoryEntity)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  linkId()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  float  getDestinationX()
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  setTabTitles(java.lang.String[])
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  decodeTypeOf(java.lang.Class)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  setShowTimes(java.util.TimeZone,java.util.List,android.view.LayoutInflater)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$13:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onPreExecute()	com.mobileforming.android.te2.messages.view.BarcodeView:  int  dpToPx(int)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  int  getStepsPerMin()
com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  com.mobileforming.android.te2.maps.sdk.model.MapGrid[]  findPath(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  int  getX()
com.mobileforming.te2.core.auth.Te2Authenticator:  okhttp3.Request  authenticate(okhttp3.Route,okhttp3.Response)	com.mobileforming.te2.core.auth.AuthManager:  void  fetchAccessToken(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$4:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDecision:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapIdentifier,com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  java.lang.String  getLocationPermission()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadCategoriesByModuleId(com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.EventFilter$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventFilter$1:  com.mobileforming.te2.core.model.EventFilter  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,double,double)
com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupChildTabLayout()	com.mobileforming.android.te2.maps.MapsModuleFragment$14:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  long  getEventId()
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  sendLogEntryCallback(com.mobileforming.android.te2.maps.sdk.model.LogEntry)
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.PointF  calculateDrawingPosition(com.mobileforming.te2.core.model.Position,android.graphics.Bitmap)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.te2.core.model.TestModeDevice:  void  addLibraryInfo(java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.TestModeDevice$libraryInfo:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getDefaultNormalModeConfig()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  forceLocationUpdate()	com.mobileforming.android.te2.tracker.location.PositionTracker:  float  getLastAccuracy()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.te2.core.view.MenuTileView:  android.view.View  inflateAndBindMenuItemView(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  java.lang.String  getLabel()
com.mobileforming.android.te2.maps.sdk.RxUtil$1:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RxUtil$1:  void  call(rx.Subscriber)
com.mobileforming.android.te2.venue.VenueModule:  void  start(com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.te2.core.model.EventActionType$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventActionType$1:  com.mobileforming.te2.core.model.EventActionType  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stop()	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  boolean  isStarted()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  boolean  isConnected(android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkUtils:  boolean  isConnected(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  requestUrl(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.messages.MessagesModule$1:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingStopped()
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  findLatLonUsingMarkers(com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.LatLon:  void  <init>(double,double)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData  build()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.android.te2.maps.dataprovider.MapsModuleInteractor  getMapsModuleInteractor()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1100(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.grupo.NavigationActivity:  com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider  getMapsDataProvider()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider  getMapsDataProvider()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setEventId(long)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(android.widget.ImageView,java.lang.String,android.graphics.drawable.Drawable,int)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  com.mobileforming.te2.core.model.VenueLocation  getLocation()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageActionClick(com.mobileforming.te2.core.model.MessageTriggeredAction)	com.mobileforming.android.te2.grupo.RefApplication:  void  requestHandleMessageAction(com.mobileforming.te2.core.model.MessageTriggeredAction,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.android.te2.tracker.dataprovider.TrackerModuleInteractor  getTrackerModuleInteractor()
com.mobileforming.android.te2.grupo.NavigationActivity:  android.content.Intent  startMessageIntent(android.content.Context,java.lang.String,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getId()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.te2.core.model.InfoDetailItem:  void  setSections(java.util.List)
com.mobileforming.android.te2.tracker.system.SystemTracker$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.system.SystemTracker$2:  void  onChanged(com.mobileforming.android.te2.tracker.system.location.LocationState)
com.mobileforming.te2.core.auth.AuthManager:  void  fetchAccessToken(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager$1:  void  <init>(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback,java.lang.String)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setHasNetworkStatePermission(boolean)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  access$100(java.util.List,java.util.Date)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  java.lang.String  getLocationPermission()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  call(java.lang.Throwable)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getEventsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.android.te2.messages.util.ResUtils:  java.lang.String  getStringUri(int,android.content.res.Resources)
com.mobileforming.te2.core.model.RegionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float)	com.mobileforming.te2.core.model.RegionEvent$LocationInfo:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendGeofenceExit(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.te2.core.auth.Te2Authenticator:  okhttp3.Request  authenticate(okhttp3.Route,okhttp3.Response)	com.mobileforming.te2.core.auth.Te2Authenticator$1:  void  <init>(com.mobileforming.te2.core.auth.Te2Authenticator,java.util.concurrent.BlockingQueue,okhttp3.Response)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()	com.mobileforming.android.te2.maps.sdk.BeaconConfig:  java.lang.String  toString()
com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.NavigationActivity:  android.os.Handler  access$002(com.mobileforming.android.te2.grupo.NavigationActivity,android.os.Handler)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction  access$102(com.mobileforming.android.te2.tracker.location.GeofenceTracker,com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl,int,float)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  postCallback(int,float)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  stop()	com.mobileforming.android.te2.maps.sdk.LocationDataSchedulerService:  void  cancelAll(android.content.Context)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onResume()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setLongitude(double)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  responseType(java.lang.reflect.Type)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$LocalLinearTransformStrategy:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$Param  getParams()
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$9:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$900(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerGeofences()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$1300(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  decode(java.lang.Class)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  decode(java.lang.Class)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.te2.core.model.InfoDetailItem:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.te2.core.model.Venue:  java.lang.String  getId()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.model.Link:  java.lang.String  getId()
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  access$200(com.mobileforming.android.te2.tracker.location.LocationTracker,java.lang.String)	com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  isValidUUID(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.BeaconConfig  getDefaultBeaconConfig()
com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  <init>(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  android.arch.lifecycle.MutableLiveData  getGeofenceEventLiveData()
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout$1:  void  <init>(com.mobileforming.android.te2.maps.view.SubCategoryTabLayout)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  com.mobileforming.te2.core.model.MessageType  getMessageType()
com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  <clinit>()	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData$1:  void  <init>()
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  long  getUid()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getDefaultMapData(boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  setWaitTimeData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  boolean  isWaitTimesEnabled()
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version:  int  getVersion()
com.mobileforming.te2.core.model.Poi$1:  com.mobileforming.te2.core.model.Poi  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Poi:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  boolean  isWalkingPathGenerated()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)	com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onNewIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider  getMapsDataProvider()
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment$1:  boolean  shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  access$000(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheModules(java.lang.String,java.util.List,long)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.lang.String  getModulesKey()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  access$000(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  call(java.lang.Long)
com.mobileforming.te2.core.model.InfoCategory:  void  <clinit>()	com.mobileforming.te2.core.model.InfoCategory$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$33:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.te2.core.auth.model.CredentialType:  void  <clinit>()	com.mobileforming.te2.core.auth.model.CredentialType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$2:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.events.fragment.EventsListFragment$4:  boolean  onClose()	com.mobileforming.android.te2.events.filters.EventFilterManager:  void  setSearchText(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  rx.Observable  call(java.lang.String)
com.mobileforming.te2.core.model.LocationLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LocationLink$1:  com.mobileforming.te2.core.model.LocationLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setCompassBearingUpdateFrequency(int)	com.mobileforming.android.te2.tracker.TrackerConfig:  int  access$1302(com.mobileforming.android.te2.tracker.TrackerConfig,int)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onLocationTurnedOff()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  displayWaitTimes()
com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isNetworkOn()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isNetworkOn()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.EventVenue:  void  setId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayload(java.lang.String,java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  <init>(java.lang.String)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.auth.AuthInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.te2.core.auth.AuthManager:  java.lang.String  fetchAccessToken()
com.mobileforming.android.te2.maps.view.MapView:  com.mobileforming.android.te2.maps.poi.MapPoiWrapper  access$000(com.mobileforming.android.te2.maps.view.MapView,float,float)	com.mobileforming.android.te2.maps.view.MapView:  com.mobileforming.android.te2.maps.poi.MapPoiWrapper  getClickedPoi(float,float)
com.mobileforming.te2.core.model.Schedule$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Schedule$1:  com.mobileforming.te2.core.model.Schedule  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  int  compare(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Poi)	com.mobileforming.te2.core.model.Poi:  java.lang.String  getName()
com.mobileforming.te2.core.model.ExternalLink:  void  <clinit>()	com.mobileforming.te2.core.model.ExternalLink$1:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication$5:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.te2.core.model.EventCategory$1:  com.mobileforming.te2.core.model.EventCategory  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventCategory:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageListItemSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationAccess(boolean,boolean,boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onResume()	com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.app.Activity,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$700(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.exception.DataException)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPositionFailure(com.mobileforming.android.te2.maps.sdk.exception.DataException)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$11:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$11:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onPostResume()	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  <init>(com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity)
com.mobileforming.te2.core.form.FormEditText:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomEditText:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$6:  void  <init>(com.google.android.gms.tasks.TaskCompletionSource)
com.mobileforming.te2.core.model.InfoEmailDetailItem:  void  <init>()	com.mobileforming.te2.core.model.InfoDetailItem:  void  <init>()
com.mobileforming.te2.core.form.FormTextInputLayout:  java.lang.String  getValue()	com.mobileforming.te2.core.form.FormTextInputLayout:  com.mobileforming.te2.core.form.FormEditText  getEditText()
com.mobileforming.android.te2.grupo.RefApplication:  io.te2.defaults.DefaultInteractor  getAppDefaultsInteractor()	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl  getInstance()
com.mobileforming.te2.core.model.Map$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Map$1:  com.mobileforming.te2.core.model.Map[]  newArray(int)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupMainTabLayout()	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupPoiPeek(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker,com.mobileforming.android.te2.tracker.location.GeofenceTracker$1)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)	com.mobileforming.android.te2.tracker.TrackerModule$1:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMapLocationClick(com.mobileforming.te2.core.model.EventVenue)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleUri(android.net.Uri,android.os.Bundle)
com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.String)	com.mobileforming.te2.core.auth.AuthManager:  void  access$500(com.mobileforming.te2.core.auth.AuthManager,java.lang.Runnable)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppId(java.lang.String)
com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.form.FormCheckBox$1:  void  <init>(com.mobileforming.te2.core.form.FormCheckBox)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$700(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  getPoiInstance()
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.te2.core.model.LocationTechnology:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.LocationTechnologyType:  com.mobileforming.te2.core.model.LocationTechnologyType  valueOf(java.lang.String)
com.mobileforming.android.te2.events.util.EventsUtility:  void  loadEventImageThumbnail(android.content.Context,com.mobileforming.te2.core.model.Event,com.mobileforming.android.te2.events.filters.EventsCategoriesConfig,android.widget.ImageView)	com.mobileforming.te2.core.model.Event:  java.lang.String  getThumbnailImageUrl()
com.mobileforming.te2.core.auth.AuthManager:  void  accountCreated(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  storeUserUUId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.SystemModule:  com.mobileforming.android.te2.maps.sdk.SystemEventManager  provideSystemEventManager()	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueDataReady()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.PayloadCachedRequestExecutor:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.grupo.SplashActivity:  void  transition()	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl  getInstance()
com.mobileforming.android.te2.tracker.TrackerModule:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)
com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.messages.offers.OfferListView$DividerDecoration:  void  <init>(com.mobileforming.android.te2.messages.offers.OfferListView,android.graphics.drawable.Drawable,int)	com.mobileforming.android.te2.messages.offers.OfferListView:  android.content.Context  access$000(com.mobileforming.android.te2.messages.offers.OfferListView)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  disallowHardwareConfig()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  disallowHardwareConfig()
com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  access$000(com.mobileforming.android.te2.infos.InfoModuleFragment)
com.mobileforming.te2.core.form.FormSubmitButton:  void  <init>(android.content.Context)	com.mobileforming.te2.core.form.FormSubmitButton:  void  init()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventSelected(com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$OnFragmentInteractionListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)
com.mobileforming.te2.core.model.Tax:  void  <clinit>()	com.mobileforming.te2.core.model.Tax$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem  build()	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  android.net.Uri  buildPhoneUri(java.lang.String)
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asGif()	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asGif()
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  scheduleCachePurge()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.TE2SDKInternal)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  responseClass(java.lang.Class)
com.mobileforming.android.te2.venue.VenueModule:  void  start(com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.te2.core.model.Poi$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Poi$1:  com.mobileforming.te2.core.model.Poi[]  newArray(int)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  overrideOf(int)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  selectPoi(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.view.MapView:  void  setSelectedPoi(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)
com.mobileforming.android.te2.messages.OffersListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  showFooter(int)
com.mobileforming.android.te2.grupo.DiningFragment:  void  access$000(com.mobileforming.android.te2.grupo.DiningFragment,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingStopped()	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isUiVisible()
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.location.PositionTracker$CompassBearingListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  access$200(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  registerNetworkUpdates()	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  updateNetworkAvailable()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheModules(java.lang.String,java.util.List,long)
com.mobileforming.android.te2.events.EventsModuleFragment:  com.mobileforming.android.te2.events.EventsModuleFragment  newInstance(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.TE2ModuleManager,com.mobileforming.android.te2.maps.sdk.LocationConfigManager,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.LocationServerAPI,com.mobileforming.android.te2.maps.sdk.LocationRepository,com.mobileforming.android.te2.maps.sdk.LocationEventManager,com.mobileforming.android.te2.maps.sdk.PreferencesRepository)	com.mobileforming.android.te2.maps.sdk.GeofenceHelper:  void  <init>(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setMultiVenueUrl(java.lang.String)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  com.mobileforming.te2.core.model.BeaconEvent  createBeaconEvent(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.te2.core.model.VenueDetail:  java.lang.String  getLabel()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.te2.core.model.Event  access$100(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabUnselected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventFilterSelected(com.mobileforming.te2.core.model.EventFilter)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  java.util.List  getPoiStatus(java.lang.String,java.util.Map)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)	com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.android.te2.messages.MessagesDetailActivity$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.MessagesDetailActivity$1:  void  onData(android.content.Intent)
com.mobileforming.te2.core.model.Map$1:  com.mobileforming.te2.core.model.Map  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Map:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  onActive()	com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  updateLocation(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$22:  com.mobileforming.android.te2.maps.sdk.model.MapData  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.te2.core.model.ModifierSelection:  void  <clinit>()	com.mobileforming.te2.core.model.ModifierSelection$1:  void  <init>()
com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()	com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.te2.core.DataCallback  createDataCallback()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.te2.core.model.Location$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Location$1:  com.mobileforming.te2.core.model.Location[]  newArray(int)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.sdk.DataItemImpl:  com.mobileforming.android.te2.maps.sdk.DataItem  newFrom(com.mobileforming.android.te2.maps.sdk.DataItem,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  void  <init>(java.lang.Object,boolean,boolean)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.venue.VenueModule:  void  restart(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule:  void  initVenue(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1$1:  void  <init>(com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1)
com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.TileView:  void  init()
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)
com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileView$MenuTileItem  createItem(java.lang.String,java.lang.String)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupChildTabLayout()
com.mobileforming.te2.core.api.BaseWebService:  java.lang.Throwable  onFailedToParseResponseError(java.lang.Exception)	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.String,java.lang.Throwable)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.model.EmailLink:  void  <init>()	com.mobileforming.te2.core.model.Link:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendPOIEntry(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationEvent(android.location.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)	com.mobileforming.android.te2.venue.VenueModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.grupo.DiningFragment:  void  diningFilterApplied(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder  mode(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  <init>(android.content.Context,android.view.View,com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$WalkingDirectionsPopupWindowListener,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  void  <init>()
com.mobileforming.te2.core.model.Tag$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Tag$1:  com.mobileforming.te2.core.model.Tag[]  newArray(int)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setPassword(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$702(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.infos.InfoModule:  void  startModule(android.content.Context)	com.mobileforming.android.te2.infos.InfoModuleActivity:  android.content.Intent  createIntent(android.content.Context)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  sortMessages(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.te2.core.model.PhoneLink$1:  com.mobileforming.te2.core.model.PhoneLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PhoneLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  <init>()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder:  void  <init>(android.view.View)
com.mobileforming.android.te2.events.view.CustomGridView:  void  <init>(android.content.Context)	com.mobileforming.android.te2.events.view.CustomGridView:  void  init()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  onDialogDateSet(int,int,int)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])	com.mobileforming.te2.core.model.Barcode:  com.mobileforming.te2.core.model.Barcode$Type  type()
com.mobileforming.android.te2.tracker.dataprovider.BasicAuthenticationInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.android.te2.tracker.dataprovider.BasicAuthenticationInterceptor:  java.lang.String  getEncodedCredentials()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.te2.core.model.DeviceInfo:  java.lang.String  model()
com.mobileforming.te2.core.auth.AuthManager:  void  logout()	com.mobileforming.te2.core.auth.cache.AuthTokenCache:  void  clear()
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getHeadingText()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onSuccess(java.lang.Object,java.util.Map)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onSuccess(com.mobileforming.te2.core.model.UserInterfaceDisplayCategorization,java.util.Map)
com.mobileforming.te2.core.model.GetWalkingPathEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,float,float,float,float,float,boolean)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showWebView(java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupInfoModule()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  radius(float)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapInfoAndData(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getContentVersion()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheLink(com.mobileforming.te2.core.model.Link,long)	com.mobileforming.te2.core.caching.CacheManager:  void  store(java.lang.String,java.lang.Object)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  priorityOf(com.bumptech.glide.Priority)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  priority(com.bumptech.glide.Priority)
com.mobileforming.te2.core.model.WebLink:  void  <clinit>()	com.mobileforming.te2.core.model.WebLink$1:  void  <init>()
com.mobileforming.te2.core.ModuleConfig:  void  <init>(com.mobileforming.te2.core.ModuleConfig)	com.mobileforming.te2.core.ModuleConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImageUri()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiWithDayRange()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  cacheEvents(java.util.List,long)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  run()	com.mobileforming.te2.core.model.Poi:  java.util.List  getTags()
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  long  access$100(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.tracker.location.PositionTracker$CompassBearingListener:  void  onSensorChanged(android.hardware.SensorEvent)	com.mobileforming.android.te2.tracker.location.PositionTracker:  com.mobileforming.android.te2.tracker.location.PositionEventListener  access$600(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.messages.OffersListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupListView()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  boolean  isInVenue()
com.mobileforming.te2.core.model.CommerceSchedule$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.CommerceSchedule$1:  com.mobileforming.te2.core.model.CommerceSchedule  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.RefApplication:  void  createModules()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.PointF  calculateDrawingPosition(com.mobileforming.te2.core.model.Position,android.graphics.Bitmap)	com.mobileforming.android.te2.maps.view.MapView:  android.graphics.PointF  translateCoordinates(float,float)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$700(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hideSoftKeyboard()
com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.form.FormEditText:  void  onAttachedToWindow()	com.mobileforming.te2.core.form.FormUtils:  com.mobileforming.te2.core.form.FormViewParent  getFormViewParent(android.view.View)
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupPoiPeek(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$11:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  waitTimesLastUpdated()
com.mobileforming.te2.core.api.BaseWebService:  java.lang.Throwable  onParsedResponseErrorSuccess(com.mobileforming.te2.core.api.ApiError)	com.mobileforming.te2.core.api.ApiError:  java.lang.String  getMessage()
com.mobileforming.te2.core.form.FormEditTextInputManager:  void  onFocusChange(android.view.View,boolean)	com.mobileforming.te2.core.form.FormEditText:  boolean  showErrorOnFocusLost()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheLink(com.mobileforming.te2.core.model.Link,long)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.lang.String  getLinksKey()
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getShowsByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  isBluetoothOn()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.ViewGroup  createSubInfoView(com.mobileforming.te2.core.model.Info,android.view.ViewGroup)	com.mobileforming.te2.core.model.Info:  java.lang.String  getBody()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$4:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.view.MapView:  void  drawCircle(android.graphics.Canvas,float,float,android.graphics.Paint,int)	com.mobileforming.android.te2.maps.view.MapView:  float  convertDpToPixel(float,android.content.Context)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onNetworkAvailabilityUpdated(boolean,boolean)	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  hasNetworkStatePermission()
com.mobileforming.te2.core.model.TransactionResponse:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.TransactionResponse$Permission:  com.mobileforming.te2.core.model.TransactionResponse$Permission  valueOf(java.lang.String)
com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(android.support.v4.app.Fragment,android.widget.ImageView,java.lang.String,android.graphics.drawable.Drawable,int)	com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getLocationText()
com.mobileforming.te2.core.model.Time:  void  <clinit>()	com.mobileforming.te2.core.model.Time$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$32:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$1:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$1:  void  call(java.lang.Long)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$4:  void  onFailure(java.lang.Exception)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.firebase.jobdispatcher.JobParameters  access$200(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)
com.mobileforming.te2.core.model.MessageActionEvent$Action:  void  <clinit>()	com.mobileforming.te2.core.model.MessageActionEvent$Action:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.LatLon:  double  getLon()
com.mobileforming.te2.core.model.ProductSelection$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.ProductSelection$1:  com.mobileforming.te2.core.model.ProductSelection[]  newArray(int)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyTime(long)	com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$102(com.mobileforming.android.te2.tracker.TrackerConfig,long)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeQualityOf(int)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$2:  void  onFailure(java.lang.Exception)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceEventListener  access$400(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.android.te2.maps.MapsModuleFragment$12:  void  onPopupWindowClosed()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  hideWalkingDirections()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.Message:  java.util.List  getMessageActions()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.LocationTracker,java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  handleGeofenceDataCallback(java.util.List)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  access$200(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  updateUI(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication$2:  void  onStop()	com.mobileforming.android.te2.grupo.RefApplication:  boolean  access$102(com.mobileforming.android.te2.grupo.RefApplication,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  skipMemoryCacheOf(boolean)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  skipMemoryCache(boolean)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  fetchEventsModuleConfig()
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  boolean  isFromCache()
com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationChanged(java.lang.String,double,double,float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,int)	com.mobileforming.android.te2.maps.util.ImageUtils$2:  void  <init>(android.widget.ImageView)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  callToActionClicked(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Tag:  com.mobileforming.te2.core.model.Action  getAction()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$11:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  boolean  isCurrent()
com.mobileforming.android.te2.maps.sdk.NetworkType:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.NetworkType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  com.mobileforming.android.te2.infos.fragment.LoggerFragment  newInstance(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  com.mobileforming.te2.core.db.AppDatabase  getAppDb()
com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  int  compare(com.mobileforming.te2.core.model.Tag,com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Tag:  java.lang.String  getDisplayOrder()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$4:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.EmailLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Link:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getBodyText()	com.mobileforming.te2.core.model.Message:  java.lang.String  getDescription()
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.NetworkManager)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  getHttpClient()
com.mobileforming.te2.core.view.PaymentImageView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.PaymentImageView:  void  init()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onFailure(okhttp3.Call,java.io.IOException)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6$2:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6,java.io.IOException)
com.mobileforming.android.te2.events.filters.FilterConfig$1:  com.mobileforming.android.te2.events.filters.FilterConfig  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.FilterConfig:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  postNotifyLocationListeners(android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  extractAndDisplayLandmarkPoi(java.util.List)	com.mobileforming.android.te2.maps.view.MapView:  void  setLandmarkPoi(java.util.ArrayList)
com.mobileforming.te2.core.model.Map$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Map$1:  com.mobileforming.te2.core.model.Map  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.DataItemImpl:  com.mobileforming.android.te2.maps.sdk.DataItem  newFrom(com.mobileforming.android.te2.maps.sdk.DataItem,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  boolean  isFromCache()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  populateUI(android.view.LayoutInflater)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  putDeviceInformation(com.mobileforming.te2.core.api.device.DeviceInformation,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  listener(com.bumptech.glide.request.RequestListener)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  listener(com.bumptech.glide.request.RequestListener)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  registerTestDevice(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchPushToken(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  saveLog()	com.mobileforming.android.te2.infos.logger.LoggerActivity$4:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  onData(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  boolean  checkIsThemePark()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchCurrentVenueMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenueTimeZone(java.util.TimeZone)
com.mobileforming.te2.core.model.Value$1:  com.mobileforming.te2.core.model.Value  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Value:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerModule$5:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$5:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  as(java.lang.Class)	com.mobileforming.te2.core.util.GlideRequest:  void  <init>(com.bumptech.glide.Glide,com.bumptech.glide.RequestManager,java.lang.Class)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.fragment.PoiListFragment$DiningListener)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setAdditionalArguments(java.util.List,boolean)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  setOpeningHours(java.lang.String,com.mobileforming.android.te2.grupo.NavigationActivity,io.te2.defaults.takeover.TakeoverListener)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity,io.te2.defaults.takeover.TakeoverListener)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  cache(com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache$2:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache)
com.mobileforming.te2.core.model.LocationTechnology$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.LocationTechnology$1:  com.mobileforming.te2.core.model.LocationTechnology[]  newArray(int)
com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  onData(java.lang.Object)	com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  onData(java.util.List)
com.mobileforming.te2.core.model.User$1:  com.mobileforming.te2.core.model.User  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.User:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setBaseUrl(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$502(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createGetRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)	com.mobileforming.android.te2.maps.sdk.RequestFactory:  java.lang.String  buildUrl(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.PositionTracker:  double  getLastLongitude()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  onResume()	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setEventDetailsPageViewed()
com.mobileforming.android.te2.tracker.location.LocationTracker$5:  void  onData(java.lang.Object)	com.mobileforming.android.te2.tracker.location.LocationTracker$5:  void  onData(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  access$000(com.mobileforming.android.te2.messages.MessagesDetailActivity)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  <init>(android.content.Context,com.mobileforming.te2.core.network.BaseModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.GeofenceEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$200(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$2:  void  onData(java.util.List)
com.mobileforming.te2.core.view.MenuTileView:  android.view.View  inflateAndBindMenuItemView(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  boolean  access$900(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.events.EventsModule:  void  registerEventsDataProvider(android.app.Application,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  insertLoggerHasPermissions(com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppUserId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$5:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.sdk.DataRequest:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataRequest$Method,java.lang.String,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.DataRequest$1)	com.mobileforming.android.te2.maps.sdk.DataRequest:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataRequest$Method,java.lang.String,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createSubInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.model.Info:  java.lang.String  getTitle()
com.mobileforming.te2.core.model.DistanceUnits:  void  <clinit>()	com.mobileforming.te2.core.model.DistanceUnits:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.MapsModuleFragment$17$1:  void  run()	com.mobileforming.android.te2.maps.util.TimeFormatUtils:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  java.util.List  setFiltersData()	com.mobileforming.android.te2.infos.logger.models.FilterModel:  void  setKey(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getAllMapsUrl(java.lang.String)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])
com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$1:  void  <init>(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter,com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder)
com.mobileforming.te2.core.form.FormLinearLayout:  void  onFormViewValidityChanged(com.mobileforming.te2.core.form.FormView)	com.mobileforming.te2.core.form.FormViewParentHolder:  com.mobileforming.te2.core.form.FormSubmitButton  getFormSubmitButton()
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onProgressUpdate(java.lang.Object[])	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onProgressUpdate(java.lang.Integer[])
com.mobileforming.android.te2.maps.view.CustomTagView:  void  setIcon(java.lang.String)	com.mobileforming.android.te2.maps.view.CustomTagView$1:  void  <init>(com.mobileforming.android.te2.maps.view.CustomTagView)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  boolean  onQueryTextChange(java.lang.String)	com.mobileforming.android.te2.events.fragment.EventsListFragment$3$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment$3,java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheModules(java.lang.String,java.util.List,long)	com.mobileforming.te2.core.caching.CacheManager:  void  store(java.lang.String,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getLabel()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)	com.mobileforming.te2.core.util.WebArrayList:  void  <init>()
com.mobileforming.te2.core.model.Option:  com.mobileforming.te2.core.model.Option  fromOption(java.lang.String)	com.mobileforming.te2.core.model.Option:  com.mobileforming.te2.core.model.Option[]  values()
com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getDataProvider()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder)	com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder:  com.mobileforming.android.te2.maps.sdk.model.LocationWrapper  build()
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsRead(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getReadMessageIds(android.content.Context)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10$1:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onHandleResponseFailure(java.lang.String,okhttp3.Response)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  removeFromCache(java.lang.String)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(java.lang.Object)	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1400(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()	com.mobileforming.android.te2.maps.sdk.LocationDataSchedulerService:  void  cancelAll(android.content.Context)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onStart()	com.mobileforming.android.te2.messages.MessagesModule:  void  setUiVisible(boolean)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.lifecycle.LiveData  getUnfilteredEvents()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.venue.VenueModule:  void  <init>(com.mobileforming.android.te2.venue.VenueModuleConfig,android.content.Context)	com.mobileforming.android.te2.venue.VenueCache:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig)
com.mobileforming.android.te2.grupo.defaults.InstanceIdService:  void  onTokenRefresh()	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  tryImmediateOrDispatchJob(android.content.Context)
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  access$600(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig  build()	com.mobileforming.te2.core.ModuleConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.mobileforming.te2.core.ModuleConfig$1)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiWithDayRange()	com.mobileforming.te2.core.util.WebArrayList:  void  <init>()
com.mobileforming.te2.core.model.EventDetail$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventDetail$1:  com.mobileforming.te2.core.model.EventDetail[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$1:  void  onHeadingChanged(int,float)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl,int,float)
com.mobileforming.android.te2.maps.MapsModuleFragment$9:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  searchPois(java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$5:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback,java.util.List)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  <init>(android.content.Context,android.view.View,com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$WalkingDirectionsPopupWindowListener,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.maps.util.DateStringUtil$Mode:  void  <clinit>()	com.mobileforming.android.te2.maps.util.DateStringUtil$Mode:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.messages.MessagesDetailFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getLabel()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$6:  void  <clinit>()	com.mobileforming.te2.core.model.MessageType:  com.mobileforming.te2.core.model.MessageType[]  values()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.EventVenue:  void  setPosition(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.infos.InfoModule:  void  setModuleListener(com.mobileforming.android.te2.infos.InfoModuleListener)
com.mobileforming.te2.core.model.Currency:  void  <clinit>()	com.mobileforming.te2.core.model.Currency:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.model.LocationLink:  void  <clinit>()	com.mobileforming.te2.core.model.LocationLink$1:  void  <init>()
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.view.CategoryTabLayout$1:  void  <init>(com.mobileforming.android.te2.maps.view.CategoryTabLayout)
com.mobileforming.te2.core.model.CommerceSchedule:  void  <clinit>()	com.mobileforming.te2.core.model.CommerceSchedule$1:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  callToActionClicked(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Option:  java.lang.String  getValue()
com.mobileforming.android.te2.infos.InfoModule:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.android.te2.infos.InfoModuleListener  getInfoModuleListener()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context)
com.mobileforming.android.te2.maps.MapsModuleFragment$3$1:  void  run()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$600(com.mobileforming.android.te2.maps.MapsModuleFragment,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy  build()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueLocation:  com.mobileforming.android.te2.maps.sdk.model.Unit  getUnit()
com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  java.lang.String  getEncodedCredentials(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.lang.String  selectImageUrl(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.lang.String  getDensity()
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener:  void  onLocationChanged(double,double)	com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider  access$400(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.android.te2.venue.VenueModule$2:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule:  void  access$000(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.model.Barcode$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Barcode$1:  com.mobileforming.te2.core.model.Barcode  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataInfo(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$28:  void  run()	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  java.util.Set  access$800(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)	com.mobileforming.android.te2.tracker.dataprovider.QueuedEvent:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerLocationEventListener(com.mobileforming.android.te2.maps.sdk.LocationEventListener)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  addLocationEventListener(com.mobileforming.android.te2.maps.sdk.LocationEventListener)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleIfPushMessage()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  int[][]  getMapGrid()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapIdentifier:  void  <init>(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  com.mobileforming.te2.core.model.BeaconEvent  createBeaconEvent(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.te2.core.model.BeaconEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float,java.util.List)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setMultipleTimesText(android.widget.TextView)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchVenueInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$2:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.model.Product$1:  com.mobileforming.te2.core.model.Product  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Product:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  access$1002(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,boolean)
com.mobileforming.android.te2.messages.MessagesDetailFragment$4:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  com.mobileforming.android.te2.messages.MessagesModule  access$200(com.mobileforming.android.te2.messages.MessagesDetailFragment)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setPendingIntent(android.app.PendingIntent)
com.mobileforming.te2.core.auth.AuthManager:  void  authenticate(com.mobileforming.te2.core.auth.model.AuthRequest,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager$5:  void  <init>(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.auth.model.AuthRequest,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onNewIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.events.dataprovider.EventsDataProvider  getEventsDataProvider()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getVenueDetails(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$11:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.EventTime  getEventTime()
com.mobileforming.android.te2.messages.OffersListFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder,int)	com.mobileforming.te2.core.model.Info:  java.lang.String  getTitle()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventSelected(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.EventWrapper:  void  <init>(com.mobileforming.te2.core.model.Event,com.mobileforming.te2.core.model.EventTime)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  float  access$300(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  submitGeofenceRequest(java.util.List,boolean)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processNextTransaction()
com.mobileforming.te2.core.model.PaymentType:  void  <clinit>()	com.mobileforming.te2.core.model.PaymentType$1:  void  <init>()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$12:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPosition(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$28:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  findLatLonUsingMarkers(com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)
com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  showOfferDetail(com.mobileforming.android.te2.messages.offers.detail.BaseOfferDetailViewModel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.util.TagUtil:  java.util.List  buildCompactTagViews(android.content.Context,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.util.List)	com.mobileforming.android.te2.maps.util.TagUtil:  java.util.List  buildTagViews(android.content.Context,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.util.List)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.List,java.util.Date)	com.mobileforming.te2.core.model.openinghours.InfoOpeningHoursItem:  java.util.List  getVenueSchedule()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter$1:  void  <init>(com.mobileforming.android.te2.infos.adapter.InfoListAdapter,com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  com.mobileforming.android.te2.infos.fragment.InfoDetailFragment  newInstance(com.mobileforming.te2.core.model.InfoLink,com.mobileforming.android.te2.infos.InfoModuleListener,com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  <init>()
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueDataManager:  void  access$100(com.mobileforming.android.te2.venue.VenueDataManager,java.lang.String,boolean)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  float  getRadius()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  access$700(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.te2.core.model.Location:  float  getLat()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.TrackerConfig:  int  getUploadDelay()
com.mobileforming.android.te2.maps.sdk.DataItemImpl:  com.mobileforming.android.te2.maps.sdk.DataItem  newFrom(com.mobileforming.android.te2.maps.sdk.DataItem,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  boolean  isStale()
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  java.lang.Object  getItem(int)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  com.mobileforming.te2.core.model.EventFilter  getItem(int)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder:  com.mobileforming.android.te2.maps.sdk.model.LocationWrapper  build()	com.mobileforming.android.te2.maps.sdk.model.LocationWrapper:  void  <init>(android.location.Location,java.lang.String,java.lang.String,boolean,com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$1)
com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$30:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)
com.mobileforming.te2.core.model.InfoLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.InfoLink$1:  com.mobileforming.te2.core.model.InfoLink[]  newArray(int)
com.mobileforming.te2.core.model.EventTime:  void  <clinit>()	com.mobileforming.te2.core.model.EventTime$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  com.mobileforming.android.te2.maps.sdk.model.Image  getImage()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.te2.core.auth.model.error.UnverifiedAccountException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  notifyConnectivityChangeAsync()	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  updateNetworkAvailable()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadDefaultCategories(com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDefaultVenueModules(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  java.util.Date  getDateOfLog()
com.mobileforming.te2.core.model.Alarm$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Alarm$1:  com.mobileforming.te2.core.model.Alarm  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  void  monitorNewVenue(com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.android.te2.maps.dataprovider.MapsModuleInteractor  getMapsModuleInteractor()
com.mobileforming.te2.core.model.LocationTechnologyThreshold:  void  <clinit>()	com.mobileforming.te2.core.model.LocationTechnologyThreshold:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayload(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.grupo.RefApplication$5:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.RefApplication$5:  void  onData(java.lang.String)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  access$300(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  void  <init>(int,java.util.List)
com.mobileforming.te2.core.model.Image$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Image$1:  com.mobileforming.te2.core.model.Image  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  getDownloadOnlyRequest()	com.mobileforming.te2.core.util.GlideRequest:  void  <init>(java.lang.Class,com.bumptech.glide.RequestBuilder)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initGeofenceTracker(android.content.Context)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceTracker  getInstance(android.content.Context)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onData(java.lang.Long)
com.mobileforming.te2.core.model.MessageType:  void  <clinit>()	com.mobileforming.te2.core.model.MessageType$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  removeFromCache(java.lang.String)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  remove(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onData(java.lang.Long)	com.mobileforming.android.te2.maps.MapsModuleFragment$17$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$17,java.lang.Long)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.view.MapView:  void  createDrawables(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  android.graphics.drawable.Drawable  getDrawable()
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setPlatform(java.lang.String)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  void  updateView(android.content.Context,com.mobileforming.te2.core.model.EventFilter,android.widget.ImageButton)	com.mobileforming.te2.core.model.EventFilter:  boolean  isSelected()
com.mobileforming.te2.core.util.GlideRequest:  java.lang.Object  clone()	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  clone()
com.mobileforming.te2.core.view.RibbonView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.RibbonView:  void  init(android.content.Context)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$7:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$100(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  com.mobileforming.android.te2.maps.sdk.AppConfig  getAppConfig()
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData  build()	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueData$1)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMajor()
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.messages.MessagesDetailFragment$5:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment,android.view.View)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  responseModel(java.lang.Class)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  saveVenueInfo(java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  launchOfferRedeemedDialog()	com.mobileforming.android.te2.messages.MessagesModule:  void  offerRedeemed()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)	com.mobileforming.android.te2.tracker.system.SystemTracker$2:  void  <init>(com.mobileforming.android.te2.tracker.system.SystemTracker)
com.mobileforming.android.te2.grupo.UserFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  <init>(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  com.mobileforming.te2.core.model.BeaconEvent  createBeaconEvent(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$11:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Message:  java.lang.String  getId()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$InfoListListener  access$000(com.mobileforming.android.te2.infos.adapter.InfoListAdapter)
com.mobileforming.te2.core.view.CustomTextView:  void  init(android.content.Context)	com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getNormalTypeFace(android.content.Context)
com.mobileforming.te2.core.view.CustomCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onPause()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  stopRefreshingWaitTimes()
com.mobileforming.te2.core.model.Time:  int  compareTo(com.mobileforming.te2.core.model.Time)	com.mobileforming.te2.core.model.Time:  void  setTimeOnCalendar(java.util.Calendar,com.mobileforming.te2.core.model.Time)
com.mobileforming.android.te2.grupo.UserFragment:  void  access$700(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment:  void  displayUserPreferences()
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Sticker  getSticker()
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.lifecycle.LiveData  getLastPermissionRecorded()
com.mobileforming.android.te2.grupo.RefApplication$2:  void  onStart()	com.mobileforming.android.te2.grupo.RefApplication:  boolean  access$102(com.mobileforming.android.te2.grupo.RefApplication,boolean)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  didEnterRegion(org.altbeacon.beacon.Region)	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  logMonitoredRegions()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$9:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.android.te2.maps.dataprovider.MapUpdateListener  access$1100(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.view.RibbonView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.RibbonView:  void  init(android.content.Context)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAndShows(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  signatureOf(com.bumptech.glide.load.Key)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  signature(com.bumptech.glide.load.Key)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  computeIfAbsent(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.tracker.TrackerModule:  void  postCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.venue.VenueWebService:  void  access$000(com.mobileforming.android.te2.venue.VenueWebService,okhttp3.Headers,java.util.Map)	com.mobileforming.android.te2.venue.VenueWebService:  void  extractHeader(okhttp3.Headers,java.util.Map)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onGeofenceExited(java.lang.String,double,double,float)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getVenueId()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$4:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$4:  void  onSuccess(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.te2.core.model.MessageTriggeredAction:  void  <init>(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  <init>()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.BeaconConfig  getDefaultBeaconConfig()	com.mobileforming.android.te2.maps.sdk.BeaconConfig:  void  <init>()
com.mobileforming.te2.core.auth.AuthManager:  void  accountCreated(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.cache.AuthTokenCache:  void  storeAccessToken(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  updateWaitTimesLastUpdatedText()
com.mobileforming.te2.core.model.EventTime$1:  com.mobileforming.te2.core.model.EventTime  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventTime:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  startTracker(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerModule:  com.mobileforming.android.te2.tracker.TrackerConfig  getTrackerConfig()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getReadMessageIds(android.content.Context)
com.mobileforming.android.te2.events.view.FilterTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.events.view.FilterTabLayout$1:  void  <init>(com.mobileforming.android.te2.events.view.FilterTabLayout)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchMenus(java.lang.String,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$5:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.Icon$1:  com.mobileforming.te2.core.model.Icon  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Icon:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.te2.core.model.Position  access$1202(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.view.PaymentImageView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.PaymentImageView:  void  init()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  infoDetailsPageViewed(com.mobileforming.te2.core.model.Link)	com.mobileforming.te2.core.model.Link:  java.lang.String  getId()
com.mobileforming.te2.core.auth.AuthManager$5:  void  run()	com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getCredential()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.te2.core.model.Location:  float  getLon()
com.mobileforming.te2.core.model.Icon:  void  <clinit>()	com.mobileforming.te2.core.model.Icon$1:  void  <init>()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  call(rx.Subscriber)
com.mobileforming.te2.core.model.EventTime$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventTime$1:  com.mobileforming.te2.core.model.EventTime[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.infos.InfoModule:  com.mobileforming.android.te2.infos.InfoModuleFragment  getInfoModuleFragment()	com.mobileforming.android.te2.infos.InfoModuleFragment:  com.mobileforming.android.te2.infos.InfoModuleFragment  newInstance()
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getDataProvider()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$700(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.exception.DataException)
com.mobileforming.te2.core.model.Tax$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Tax$1:  com.mobileforming.te2.core.model.Tax[]  newArray(int)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  displayWaitTimeMessage(boolean)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  double  access$500(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  boolean  isNetworkAvailable(android.content.Context)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  com.mobileforming.android.te2.infos.fragment.LoggerFragment  newInstance(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  <init>()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  java.util.Date  getDateOfLog()
com.mobileforming.android.te2.events.fragment.EventsListFragment$5:  android.support.v7.widget.RecyclerView$ViewHolder  getHeader(android.support.v7.widget.RecyclerView,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  long  getHeaderId(int)
com.mobileforming.te2.core.model.HoursLink:  void  writeToParcel(android.os.Parcel,int)	com.mobileforming.te2.core.model.Link:  void  writeToParcel(android.os.Parcel,int)
com.mobileforming.android.te2.maps.MapsModuleFragment$11:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1000(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getVenueModules(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.model.openinghours.Day$Builder:  com.mobileforming.te2.core.model.openinghours.Day  build()	com.mobileforming.te2.core.model.openinghours.Day:  void  <init>()
com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  accept(java.lang.Object)	com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  accept(com.mobileforming.te2.core.AnalyticsEvent)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Event:  java.util.List  getEventTimes()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.RefApplication:  void  addVenueEventListener(com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getClosestPOI(java.lang.String,float,float,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$10:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideOfflineCacheInterceptor(int)
com.mobileforming.android.te2.grupo.RefApplication:  void  venueEntered(java.lang.String)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getDataProvider()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyDistanceLow(float)	com.mobileforming.android.te2.tracker.TrackerConfig:  float  access$402(com.mobileforming.android.te2.tracker.TrackerConfig,float)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  convertPositionToLatLon(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  findLatLonUsingMarkers(com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)
com.mobileforming.android.te2.events.EventsActivity:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.filters.FilterConfig:  void  <init>()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  access$300(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  updateVenueIds(java.util.List)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  void  setVenueIds(java.util.List)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  updateNetworkAvailable()	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  notifyNetworkStateChangeEvent(boolean,android.net.NetworkInfo)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationAccess(boolean,boolean,boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.entity.VenueMonitorEntity:  java.lang.String  getBoundaryTransition()
com.mobileforming.te2.core.model.Location$1:  com.mobileforming.te2.core.model.Location  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Location:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileListener  access$300(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setAppId(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$802(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isDistanceGreater(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence,float)	com.mobileforming.android.te2.maps.sdk.model.Fence:  double  getLon()
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(android.net.Uri)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$3:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$700(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.model.Tax$1:  com.mobileforming.te2.core.model.Tax  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Tax:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$1:  void  onSuccess(java.lang.Void)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchPoiAllBeacons(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$2:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  onAppStateEvent(com.mobileforming.android.te2.maps.sdk.model.AppStateEvent)	com.mobileforming.android.te2.maps.sdk.model.AppStateEvent:  java.lang.String  getAppState()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$2:  void  onData(java.util.List)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  parseCategories(java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.te2.core.auth.AuthManager$4$2:  void  run()	com.mobileforming.te2.core.auth.AuthManager:  java.util.List  access$100(com.mobileforming.te2.core.auth.AuthManager)
com.mobileforming.te2.core.db.AppDatabase_Impl:  void  <init>()	com.mobileforming.te2.core.db.AppDatabase:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getAppUserId(android.content.Context)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setAppDatabase(com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  setTagContent(com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Tag:  com.mobileforming.te2.core.model.Icon  getIcon()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.PositionMarker:  com.mobileforming.android.te2.maps.sdk.model.LatLon  getLatLon()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoList(java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition)	com.mobileforming.android.te2.maps.util.ImageUtils:  float  access$000(float,android.content.Context)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getDescriptionText()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onResume()	com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()
com.mobileforming.android.te2.events.fragment.EventsListFragment$3$1:  void  run()	com.mobileforming.android.te2.events.filters.EventFilterManager:  void  setSearchText(java.lang.String)
com.mobileforming.te2.core.util.CropTransformation$CropType:  void  <clinit>()	com.mobileforming.te2.core.util.CropTransformation$CropType:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  optionalCenterCrop()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  optionalCenterCrop()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$400(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadCategoriesAndPois(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.te2.core.model.Message:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.util.List)
com.mobileforming.te2.core.model.Entry$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Entry$1:  com.mobileforming.te2.core.model.Entry  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  notifyConnectivityChangeAsync()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$1:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  <init>(android.app.Activity,com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,int)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  java.lang.Object  build(java.lang.String,java.lang.Class)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  retrofit2.Retrofit$Builder  build(java.lang.String)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.lang.String  getType()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.te2.core.model.EventVenue  access$400(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  sendWalkingPathEvent(java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  lock()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  lock()
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  com.mobileforming.android.te2.maps.sdk.model.ModelCache  buildModelCache(com.mobileforming.android.te2.maps.sdk.CacheRepository)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.CacheRepository)
com.mobileforming.te2.core.auth.AuthManager:  void  persistResponse(com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  storeUserUUId(java.lang.String)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.MenuTileView:  android.widget.LinearLayout  access$100(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  android.arch.lifecycle.LiveData  apply(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  <init>(com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1,android.arch.lifecycle.MediatorLiveData)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter$HeaderViewHolder:  void  <init>(android.view.View)
com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(char)	com.mobileforming.te2.core.view.AnalyticsEditable:  void  appendDelimiter()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.te2.core.model.Position  convertMapGridToPosition(com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.te2.core.model.Position:  void  <init>(double,double)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectOutSidePoi()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hidePoiPeek()
com.mobileforming.te2.core.model.Order$1:  com.mobileforming.te2.core.model.Order  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Order:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  <init>()
com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToPositionZoom(com.mobileforming.te2.core.model.Position,boolean,float)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  onMapMoved(boolean,float,android.graphics.PointF)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder,int)	com.mobileforming.te2.core.model.EventTime:  boolean  isAllDay()
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  int  access$100(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  isNotFirst()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setMapIsReady(boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiPeek()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  hideRecenterFab()
com.mobileforming.te2.core.model.Alarm:  void  <clinit>()	com.mobileforming.te2.core.model.Alarm$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  int  getMinor()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$200(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.view.CustomButton:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onPoiNoHitButMap()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectOutSidePoi()
com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository:  void  logBeaconExit(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.model.BeaconInfo,boolean)	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getCurrentLocationsPermissions()	com.mobileforming.android.te2.tracker.TrackerModule:  android.arch.lifecycle.LiveData  getCurrentLocationPermissionsLiveData()
com.mobileforming.android.te2.grupo.RefApplication:  void  pushTokenGenerated()	com.mobileforming.android.te2.grupo.RefApplication$3:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.view.TileView:  android.widget.ImageView  access$200(com.mobileforming.te2.core.view.TileView)
com.mobileforming.android.te2.tracker.TrackerModule:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()	com.mobileforming.android.te2.tracker.system.SystemTracker:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.messages.OffersListFragment:  void  access$100(com.mobileforming.android.te2.messages.OffersListFragment,java.util.List)	com.mobileforming.android.te2.messages.OffersListFragment:  void  handleSuccessfulMessagesResponse(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  java.lang.Boolean  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  boolean  isCurrent()
com.mobileforming.te2.core.model.InfoLink:  void  writeToParcel(android.os.Parcel,int)	com.mobileforming.te2.core.model.Link:  void  writeToParcel(android.os.Parcel,int)
com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  void  <init>(java.lang.String,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsPayload)	com.mobileforming.te2.core.AnalyticsEvent:  void  <init>()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setMapZoomConfigurations(float,float,float)	com.mobileforming.android.te2.maps.view.MapView:  void  setMapZoomConfigurations(float,float,float)
com.mobileforming.te2.core.util.ImageUtils$2:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.te2.core.util.ImageUtils$2:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getCode()	com.mobileforming.te2.core.model.Message:  com.mobileforming.te2.core.model.Barcode  getBarcode()
com.mobileforming.te2.core.auth.AuthManager:  java.lang.String  retrieveUserUUId()	com.mobileforming.te2.core.auth.cache.UserAuthCache:  java.lang.String  fetchUserUUIdToken()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.te2.core.model.DeviceInfo:  int  getDisplayWidth()
com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.LiveData  createBeaconWatcherLiveData(java.util.List)	com.mobileforming.android.te2.tracker.location.BeaconRepository$2:  void  <init>(com.mobileforming.android.te2.tracker.location.BeaconRepository,java.util.List,android.arch.lifecycle.MediatorLiveData)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$1)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.Object)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)
com.mobileforming.te2.core.caching.GsonFileCache:  void  store(java.lang.String,java.lang.Object)	com.mobileforming.te2.core.caching.GsonFileCache:  java.lang.String  convertToFileName(java.lang.String)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asBitmap()	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asBitmap()
com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  boolean  isEndTimeAfterMidnight()	com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  int  getStartValue()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6$1:  void  run()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheLink(com.mobileforming.te2.core.model.Link,long)
com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.te2.core.util.DateStringUtil$Mode)	com.mobileforming.te2.core.util.DateStringUtil:  boolean  isToday(java.util.Calendar,java.util.Date)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setLongitud(double)
com.mobileforming.te2.core.model.DeviceInformationEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setTitle(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1502(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  updateMapImage(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  scheduleVenueDataRetry(long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setBackgroundBetweenScanPeriod(long)	com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$2202(com.mobileforming.android.te2.tracker.TrackerConfig,long)
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueCache:  void  cacheVenue(java.lang.String,com.mobileforming.te2.core.model.Venue,java.util.Map)
com.mobileforming.te2.core.util.CropTransformation:  void  <init>(int,int)	com.mobileforming.te2.core.util.CropTransformation:  void  <init>(int,int,com.mobileforming.te2.core.util.CropTransformation$CropType)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  setUsername(java.lang.String)	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataInfo(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  homePageViewed()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showVenueSwitcher()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$27:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$27:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  name(java.lang.String)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  getFromCache()	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  com.mobileforming.android.te2.maps.sdk.model.CacheItem  retrieve(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  startRefreshingWaitTimes()
com.mobileforming.te2.core.model.PaymentType$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PaymentType$1:  com.mobileforming.te2.core.model.PaymentType  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  rx.Observable  call(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$8:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$800(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()	com.mobileforming.android.te2.grupo.NavigationActivity$5:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setAdditionalArguments(java.util.List,boolean)
com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateBroadcastReceiver:  void  <init>(com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData)
com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessAction:  void  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  boolean  isFromCache()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.grupo.DiningFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.fragment.PoiListFragment$DiningListener)
com.mobileforming.android.te2.venue.VenueModule:  void  getVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.maps.MapsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  initializeFields()
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getDefaultNormalModeConfig()	com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig:  void  <init>(java.lang.String,float,int,int)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.te2.core.model.Section:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataInfo(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  float  getAccuracy()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setTimeText(android.widget.TextView)
com.mobileforming.te2.core.model.InfoLink$1:  com.mobileforming.te2.core.model.InfoLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel[]  newArray(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupDining()
com.mobileforming.android.te2.grupo.RefApplication:  void  venueEntered(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  setInVenue(boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholderOf(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholder(int)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.util.List  access$500(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.te2.core.model.openinghours.Day:  java.lang.String  getClose()
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  onBeaconServiceConnect()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  startMonitoringRegisteredBeacons()
com.mobileforming.te2.core.auth.AuthManager:  java.lang.String  fetchAccessToken()	com.mobileforming.te2.core.auth.cache.AuthTokenCache:  java.lang.String  fetchAccessToken()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  initializeSdk(android.app.Application)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  scheduleCachePurge()
com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version:  boolean  isActive()
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  double  access$300(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder  setCategoriesConfig(com.mobileforming.android.te2.events.filters.EventsCategoriesConfig)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setCategoriesConfig(com.mobileforming.android.te2.events.filters.EventsCategoriesConfig)
com.mobileforming.te2.core.model.EmailLink$1:  com.mobileforming.te2.core.model.EmailLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EmailLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.grupo.UserFragment:  biz.te2.guestsurvey.config.SurveyModuleConfig  access$000(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.te2.core.api.ApiTranslationException:  void  <init>(java.lang.Throwable)	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.Throwable)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  setPassword(java.lang.String)	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()
com.mobileforming.te2.core.model.DisplayType$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.DisplayType$1:  com.mobileforming.te2.core.model.DisplayType[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.infos.InfoModule:  void  changeVenue(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.messages.OffersListFragment$1:  void  onReceive(android.content.Context,android.content.Intent)	com.mobileforming.android.te2.messages.OffersListFragment:  boolean  access$002(com.mobileforming.android.te2.messages.OffersListFragment,boolean)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  com.mobileforming.android.te2.maps.sdk.model.Event  build()	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder,com.mobileforming.android.te2.maps.sdk.model.Event$1)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)
com.mobileforming.android.te2.infos.fragment.LoggerFragment$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.infos.fragment.LoggerFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.InfoLinkData:  void  <clinit>()	com.mobileforming.te2.core.model.InfoLinkData$1:  void  <init>()
com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.util.Preconditions:  java.lang.String  throwIfNullOrEmpty(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showVenueSwitcher()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  <init>()	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  com.mobileforming.android.te2.messages.MessagesModule  access$100(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isLocationOutsideFence(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isDistanceGreater(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence,float)
com.mobileforming.android.te2.grupo.DiningFragment:  com.mobileforming.android.te2.grupo.DiningFragment  newInstance(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.grupo.DiningFragment:  void  <init>()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  override(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  override(int)
com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig  build()	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig  build()
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  content(java.lang.String)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setForegroundBetweenScanPeriod(long)	com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$2002(com.mobileforming.android.te2.tracker.TrackerConfig,long)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Event:  java.lang.String  getThumbnailImageUrl()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  buildOkHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context)
com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  onData(java.util.List)	com.mobileforming.android.te2.events.eventslist.EventsRepository:  boolean  access$002(com.mobileforming.android.te2.events.eventslist.EventsRepository,boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchVenueInfo(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getEventsByVenueIdAndDateStart(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.messages.MessagesModule:  android.content.Intent  createModuleIntent(android.content.Context)	com.mobileforming.android.te2.messages.MessagesModuleActivity:  android.content.Intent  createIntent(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  com.mobileforming.android.te2.maps.sdk.model.MapData  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.messages.view.BarcodeView$2:  void  <clinit>()	com.mobileforming.te2.core.model.Barcode$Type:  com.mobileforming.te2.core.model.Barcode$Type[]  values()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()	com.mobileforming.android.te2.tracker.system.SystemTracker:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  setupInfoModules(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  com.mobileforming.android.te2.infos.fragment.LoggerFragment  newInstance(com.mobileforming.android.te2.infos.logger.LoggerInteractor)
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  int  getDefaultImageResourceForEvent(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.util.List  getCategories()
com.mobileforming.te2.core.auth.AuthManager:  boolean  hasUserAccount()	com.mobileforming.te2.core.auth.cache.UserAuthCache:  boolean  fetchUserSignedIn()
com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context)	com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomCheckBox:  void  setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.mobileforming.te2.core.model.ProductSelection:  void  <clinit>()	com.mobileforming.te2.core.model.ProductSelection$1:  void  <init>()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.GeofenceDAO  geofenceDAO()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.MessageLinkTappedEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$12:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  fetchWalkingTime()	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchWalkingTimeLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment$1:  void  onLoadResource(android.webkit.WebView,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  access$000(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment)
com.mobileforming.te2.core.model.InfoCategory$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoCategory$1:  com.mobileforming.te2.core.model.InfoCategory  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  java.util.List  compute()
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getPoiStatus(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  void  <init>()	com.mobileforming.android.te2.infos.logger.LoggerInteractor:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.te2.core.model.CouponActionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.CouponActionEvent$Action)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.venue.VenueModule:  void  start(java.util.List,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule:  void  getVenues(java.util.List,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.NetworkManager)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  com.google.gson.Gson  getGson()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  onResume()	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.MessagesModuleAnalytics  getMessagesModuleAnalyticsListener()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getAppUserId(android.content.Context)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)	com.mobileforming.te2.core.model.BeaconEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float,java.util.List)
com.mobileforming.android.te2.venue.VenueModule:  void  getVenueDetail(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  java.lang.String  getVenueId()
com.mobileforming.te2.core.model.Poi:  void  <clinit>()	com.mobileforming.te2.core.model.Poi$1:  void  <init>()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  run()	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Image  getImage()
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$2:  void  <init>(com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity)
com.mobileforming.android.te2.grupo.DiningFragment$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.grupo.DiningFragment$1:  void  onChanged(java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getAction()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  java.lang.Object[]  newArray(int)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl[]  newArray(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  restoreActionBar()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogo(boolean)
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  showWalkingPathForPoi(java.util.List)
com.mobileforming.te2.core.model.CommerceSchedule$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.CommerceSchedule$1:  com.mobileforming.te2.core.model.CommerceSchedule[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  void  <init>()
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  bottomButton(int)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  bottomButton(java.lang.String)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  hideLoadingContainer()	com.mobileforming.android.te2.infos.fragment.InfoListFragment$2:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoListFragment)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setTimeText(android.widget.TextView)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchVenueInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$14:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Message:  java.lang.String  getSavingsLabel()
com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.TileView:  void  init()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setPushDeviceToken(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1402(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onFailure(okhttp3.Call,java.io.IOException)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  double  getLongitude()
com.mobileforming.te2.core.form.FormLinearLayout$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.form.FormLinearLayout:  void  access$000(com.mobileforming.te2.core.form.FormLinearLayout)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  centerInside()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  centerInside()
com.mobileforming.te2.core.model.Status$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Status$1:  com.mobileforming.te2.core.model.Status[]  newArray(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setDestinationX(float)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupDining()	com.mobileforming.android.te2.grupo.DiningFragment:  com.mobileforming.android.te2.grupo.DiningFragment  newInstance(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  com.mobileforming.te2.core.model.Schedule  getSchedule()
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  java.util.List  access$700(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  java.lang.String  access$200(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.tracker.location.BeaconRepository$1:  void  onActive()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  boolean  isStarted()
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.lang.String)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.String)
com.mobileforming.android.te2.infos.adapter.FilterAdapter:  android.view.View  getCustomView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.android.te2.infos.logger.models.FilterModel:  java.lang.String  getTextToShow()
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofencesTransactionComplete(java.util.List)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoListString(java.util.List)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$OnClickListener  access$000(com.mobileforming.te2.core.dialog.alert.AlertDialogFragment)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.fragment.Te2MapFragment  newInstance(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$Te2MapFragmentListener,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getPassword()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener:  void  <init>(android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsModuleInteractor)
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  clearMarkedMessages(android.content.Context)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getAppId()
com.mobileforming.te2.core.model.Option:  void  <clinit>()	com.mobileforming.te2.core.model.Option:  void  <init>(java.lang.String,int,java.lang.String)
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.MessagesModule$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesModule)
com.mobileforming.te2.core.form.FormSubmitButton:  void  init()	com.mobileforming.te2.core.view.CustomButton:  void  setOnClickListener(android.view.View$OnClickListener)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment)
com.mobileforming.te2.core.model.Event$1:  com.mobileforming.te2.core.model.Event  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Event:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.view.MenuTileView:  void  addItem(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)	com.mobileforming.te2.core.view.MenuTileView:  android.view.View  inflateAndBindMenuItemView(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  java.lang.String  getHoursOpen(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.te2.core.model.openinghours.Day:  java.lang.String  getOpen()
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry  build()	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder,com.mobileforming.android.te2.maps.sdk.model.LogEntry$1)
com.mobileforming.android.te2.grupo.NavigationActivity:  com.mobileforming.android.te2.messages.MessagesModule  fetchMessagesModule()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.venue.VenueCache:  void  initializeCacheManager()	com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  venueEntered(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.te2.core.db.AppDatabase  getAppDatabase()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  placeholder(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholder(int)
com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context)	com.mobileforming.te2.core.view.CustomCheckBox:  void  initAnalytics(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.messages.MessagesModuleActivity:  void  onMessageListItemSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  android.content.Intent  createIntent(android.content.Context,com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchBeacons(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapData:  void  <init>(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.Image,int,java.lang.String,boolean,boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager$16:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$16:  java.util.List  call(java.util.List)
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.MenuTileView$1:  void  <init>(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.te2.core.model.Order:  void  <clinit>()	com.mobileforming.te2.core.model.Order$1:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  access$102(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService,boolean)
com.mobileforming.te2.core.model.TransactionResponse:  void  <clinit>()	com.mobileforming.te2.core.model.TransactionResponse$1:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setPassword(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  tryImmediateOrDispatchJob(android.content.Context)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$102(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  boolean  areHeadingSensorsAvailable()	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  areHeadingSensorsAvailable()
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  startRefreshingWaitTimes()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  stopRefreshingWaitTimes()
com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.infos.InfoModuleFragment$1$2:  void  <init>(com.mobileforming.android.te2.infos.InfoModuleFragment$1)
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  void  <init>()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  shouldShowWaitTimes()
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getNormalLocationUpdates()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.NetworkManager)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  loadStoredMapId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$1:  void  onLost(android.net.Network)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.te2.core.model.EventDetail$1:  com.mobileforming.te2.core.model.EventDetail  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventDetail:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.model.Event:  java.util.List  getVenues()
com.mobileforming.te2.core.model.PurchaseDetail$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetail$1:  com.mobileforming.te2.core.model.PurchaseDetail  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(android.widget.ImageView,java.lang.String,android.graphics.drawable.Drawable,int)	com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  access$000(com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService,okhttp3.Headers,java.util.Map)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  extractHeader(okhttp3.Headers,java.util.Map)
com.mobileforming.te2.core.form.FormTextInputLayout:  boolean  isValid()	com.mobileforming.te2.core.form.FormTextInputLayout:  com.mobileforming.te2.core.form.FormEditText  getEditText()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setTimestamp(long)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMinor()
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl)
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.OkHttpClient)
com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(android.net.Uri)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyMessagesAvailable(java.util.List)	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isUiVisible()
com.mobileforming.te2.core.util.RoundedCornersTransformation$1:  void  <clinit>()	com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType:  com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType[]  values()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.ArrayList  access$600(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.ArrayList  extractBeaconInfos(com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  void  access$000(com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter,android.content.Context,com.mobileforming.te2.core.model.EventFilter,android.widget.ImageButton)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  void  <init>()
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  shareLoggerEvents(java.util.List)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  saveLog()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUi()	com.mobileforming.te2.core.util.BottomNavigationViewHelper:  void  disableShiftMode(android.support.design.widget.BottomNavigationView)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconTrackerStarted()	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.te2.core.model.Message$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Message$1:  com.mobileforming.te2.core.model.Message  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.venue.VenueWebService:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)	com.mobileforming.android.te2.venue.VenueWebService:  void  init(android.content.Context,java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.PositionTracker:  float  getLastAccuracy()
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  reset()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  <init>()
com.mobileforming.te2.core.view.TileView:  void  setChecked(boolean)	com.mobileforming.te2.core.view.TileView:  int  getBackgroundResource()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showWebView(java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.te2.core.fragment.WebViewFragment:  com.mobileforming.te2.core.fragment.WebViewFragment  newInstance(java.lang.String)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.messages.offers.OfferRedeemedDialogFragment:  void  onResume()	com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.app.Activity,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String,java.lang.Object)
com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationChanged(java.lang.String,double,double,float)	com.mobileforming.te2.core.util.Logger:  void  v(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder,com.mobileforming.android.te2.maps.sdk.model.LogEntry$1)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  start()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startPositionTracker()
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  java.util.concurrent.atomic.AtomicInteger  access$000(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  java.lang.String  access$300(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  com.mobileforming.android.te2.maps.sdk.model.Fence  build()	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder,com.mobileforming.android.te2.maps.sdk.model.Fence$1)
com.mobileforming.te2.core.view.MenuTileView:  void  init()	com.mobileforming.te2.core.view.TileView:  void  setCheckedEnabled(boolean)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupListView()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.model.Poi:  java.lang.String  getId()
com.mobileforming.te2.core.network.RequestInterceptor$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.network.RequestInterceptor:  java.lang.String  access$000()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.android.te2.messages.MessagesModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  refreshPoisLiveData()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPois(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  setConnectionTimeout(long,java.util.concurrent.TimeUnit)	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$400(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.TimeZone,java.util.List,android.view.LayoutInflater)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  setShowTimes(java.util.TimeZone,java.util.List,android.view.LayoutInflater)
com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.content.Context,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String,java.lang.Object)	com.mobileforming.te2.core.analytics.AnalyticsHelper:  com.mobileforming.te2.core.analytics.AnalyticsListener  getAnalyticsListener(android.content.Context)
com.mobileforming.te2.core.model.Time$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Time$1:  com.mobileforming.te2.core.model.Time  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.util.InfoModuleUtils:  com.google.android.gms.tasks.Task  retrieveVenueOpeninghours(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.util.List  getVenueDetails()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setEventId(long)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.LatLon:  double  getLat()
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconServiceConnect()	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofenceError(java.lang.String)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  postBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Action$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Action$1:  com.mobileforming.te2.core.model.Action[]  newArray(int)
com.mobileforming.te2.core.model.TestDevice:  void  addLibraryInfo(java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.TestDevice$libraryInfo:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  void  <init>(com.mobileforming.te2.core.model.Message,android.content.Context)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  void  processMessage(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  showExpirationMessage(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.util.Date  getExpiresTime()
com.mobileforming.te2.core.auth.AuthManager:  void  access$700(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.AuthManager:  void  persistResponse(com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)
com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.TileView:  void  init()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder,int)
com.mobileforming.te2.core.model.MessageAction:  void  <clinit>()	com.mobileforming.te2.core.model.MessageAction$1:  void  <init>()
com.mobileforming.te2.core.auth.AuthManager:  void  logout()	com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  clear()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$15:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$15:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.util.List  access$700(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  access$500(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.GeofencingRequest  createAddGeofenceRequest(java.util.List,int)
com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileView$MenuTileItem  createItem(java.lang.String)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)
com.mobileforming.te2.core.model.TransactionResponse$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.TransactionResponse$1:  com.mobileforming.te2.core.model.TransactionResponse  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  boolean  access$600(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String)
com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  boolean  isEndTimeAfterMidnight()	com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  int  getEndValue()
com.mobileforming.te2.core.model.Action:  void  <clinit>()	com.mobileforming.te2.core.model.Action$1:  void  <init>()
com.mobileforming.te2.core.model.EventFilter:  void  <clinit>()	com.mobileforming.te2.core.model.EventFilter$1:  void  <init>()
com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  access$600(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$12:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()	com.mobileforming.android.te2.messages.offers.OfferListView:  void  setLoading(boolean)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.fragment.Te2MapFragment  newInstance(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$Te2MapFragmentListener,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  <init>()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.InfoLink:  void  setInfos(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setLatitude(double)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onData(java.lang.Long)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8,java.lang.Long)
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig:  void  <clinit>()	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  void  <init>()
com.mobileforming.te2.core.model.Detail$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Detail$1:  com.mobileforming.te2.core.model.Detail  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  setVenueId(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenuePayload:  java.lang.String  getName()
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Image  getImage()
com.mobileforming.te2.core.api.ApiTranslationException:  void  <init>(java.lang.String,java.lang.Throwable)	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.String,java.lang.Throwable)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  int  getExpirationTextColor()
com.mobileforming.te2.core.auth.AuthManager$3:  void  run()	com.mobileforming.te2.core.auth.AuthManager:  boolean  access$002(com.mobileforming.te2.core.auth.AuthManager,boolean)
com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context)	com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getNormalTypeFace(android.content.Context)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  subscribeTo(rx.Observable,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessAction:  void  <init>(com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$600(com.mobileforming.android.te2.tracker.location.LocationTracker)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerActivity$2:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Image:  java.lang.String  getContentDescription()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEnableLocationServicesDialog(android.app.Activity)	com.mobileforming.android.te2.grupo.NavigationActivity$12:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCategoryUnselected()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogo(boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchMapPosition(float,float,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository,com.mobileforming.te2.core.entity.LocationPermissionsEntity,com.mobileforming.te2.core.db.AppDatabase,android.content.Context)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPois(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$2:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$2:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)	com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  <init>(com.mobileforming.android.te2.tracker.system.SystemTracker)
com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  java.lang.Object  getData()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$HiddenListListener)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$12:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  android.content.Intent  createIntent(android.content.Context,com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  <init>()	com.mobileforming.android.te2.maps.MapsModuleFragment$4:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  <init>(com.mobileforming.android.te2.maps.sdk.PathFinderAStar$1)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  <init>()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackGeofenceEnterExit(java.lang.String,boolean,com.mobileforming.te2.core.model.RegionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$6:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  onActive()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  runWaitTimeTimerUpdate()
com.mobileforming.te2.core.model.Message:  void  <clinit>()	com.mobileforming.te2.core.model.Message$1:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getDataProvider()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setBoundaryTransition(java.lang.String)
com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.model.openinghours.Day$Builder:  com.mobileforming.te2.core.model.openinghours.Day  build()	com.mobileforming.te2.core.model.openinghours.Day:  void  setOpen(java.lang.String)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  java.util.Date  getDateOfLog()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMajor()
com.mobileforming.android.te2.maps.MapsModuleViewModel$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleViewModel$1:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.InfoLink:  void  <init>()	com.mobileforming.te2.core.model.Link:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventVenues(com.mobileforming.te2.core.model.Event,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.model.Event:  java.util.List  getVenues()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  onlyRetrieveFromCache(boolean)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  onlyRetrieveFromCache(boolean)
com.mobileforming.te2.core.model.Location$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Location$1:  com.mobileforming.te2.core.model.Location  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$4:  void  onFailure(java.lang.Exception)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceEventListener  access$400(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter$1:  void  <init>(com.mobileforming.android.te2.maps.adapter.PoiListAdapter,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.Object  getModel()	com.mobileforming.android.te2.messages.offers.OfferViewModel:  com.mobileforming.te2.core.model.Message  getModel()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchPoiAllBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$10:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupChildTabLayout()	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  setSimpleTabSelectedListener(com.mobileforming.android.te2.maps.view.SubCategoryTabLayout$SimpleTabSelectedListener)
com.mobileforming.te2.core.model.Map:  void  <clinit>()	com.mobileforming.te2.core.model.Map$1:  void  <init>()
com.mobileforming.te2.core.model.PlatformUrl$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.PlatformUrl$1:  com.mobileforming.te2.core.model.PlatformUrl[]  newArray(int)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.GeofenceEntity:  void  setEventId(long)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  triggerLastLocationEvent()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.Message:  void  setHeaderImageUrl(java.lang.String)
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)	com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  <init>(android.content.Context)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$4:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.maps.view.CategoryTabLayout$1:  void  <init>(com.mobileforming.android.te2.maps.view.CategoryTabLayout)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache  getMapsModuleCache()
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  findPositionUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.te2.core.model.Position:  void  <init>(double,double)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  long  getUid()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$8:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  java.lang.String  getId()
com.mobileforming.te2.core.view.RibbonView:  void  removeTileAtIndex(int)	com.mobileforming.te2.core.view.RibbonView:  int  getTileCount()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  timeoutOf(int)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.model.BeaconInfo:  int  getMinor()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  frameOf(long)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getExpiredMessageIds(android.content.Context)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)
com.mobileforming.android.te2.grupo.DiningFragment:  void  onStart()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setCategory(com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  <init>()
com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  com.mobileforming.te2.core.model.Message  getCachedFeaturedMessage(android.content.Context)
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.android.te2.maps.sdk.model.MapGrid  convertPositionToMapGrid(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  void  <init>(int,int)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()
com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.te2.core.api.ApiTranslationException:  void  <init>()	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  initializeFields()	com.mobileforming.android.te2.maps.util.WaitTimeUtils:  boolean  isLocationTurnedOn(android.content.Context)
com.mobileforming.te2.core.model.Category:  void  <clinit>()	com.mobileforming.te2.core.model.Category$1:  void  <init>()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  access$200(com.mobileforming.android.te2.messages.FeaturedMessageFragment)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  showLoading()
com.mobileforming.te2.core.model.Product$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Product$1:  com.mobileforming.te2.core.model.Product  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getUsername()
com.mobileforming.te2.core.model.LocationLink:  void  writeToParcel(android.os.Parcel,int)	com.mobileforming.te2.core.model.Link:  void  writeToParcel(android.os.Parcel,int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  call(rx.Subscriber)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconMonitoringStarted(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.Payment$Builder$1:  com.mobileforming.te2.core.model.Payment$Builder  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$Builder:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  access$300(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  createDataCallback()
com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition:  java.lang.String  getBoundaryTransitionString()	com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition:  int  getBoundaryTransition()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  frame(long)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  frame(long)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiStatus(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.form.FormViewParentHolder:  void  <init>(android.view.ViewGroup)	com.mobileforming.te2.core.form.FormViewParentHolder:  void  findViews(android.view.ViewGroup)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  sortPoiList(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$OnFragmentInteractionListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  <init>()
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Week  getDayOfWeek()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  accept(com.mobileforming.te2.core.AnalyticsEvent)	com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor:  java.util.List  access$000(com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor)
com.mobileforming.te2.core.model.EventWrapper$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventWrapper$1:  com.mobileforming.te2.core.model.EventWrapper  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.openinghours.Week:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.Day:  int  getLatestHour(int)
com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.HoursLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Link:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  fetchAllUserMessages(com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService$1:  void  <init>(com.mobileforming.te2.core.api.messages.MessagesRetrofitService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$2:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  mergeStatusWithPoiInCache(java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.util.List  getCachedCategories(java.lang.String)
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.auth.api.AuthTokenWebService:  okhttp3.OkHttpClient  createOkHttpClient(okhttp3.Interceptor)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGeoFenceChanged(java.lang.String,double,double,float,boolean)	com.mobileforming.te2.core.model.RegionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float)
com.mobileforming.te2.core.model.MessageAction$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.MessageAction$1:  com.mobileforming.te2.core.model.MessageAction  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  org.altbeacon.beacon.Region  createRegion(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  uniqueId()
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabReselected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  boolean  isStale()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  <init>()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  errorOf(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  error(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onLaunchWebView(com.mobileforming.te2.core.model.Product,boolean)	com.mobileforming.te2.core.model.Product:  java.lang.String  getLabel()
com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(android.content.Context,java.lang.String,android.widget.ImageView)	com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  transition(com.bumptech.glide.TransitionOptions)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  transition(com.bumptech.glide.TransitionOptions)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$100(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  onOptionsItemSelected(android.view.MenuItem)	com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  handleMenuItemClick(android.view.MenuItem)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadCategoriesAndPois(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  com.mobileforming.android.te2.maps.sdk.MapDecision  getCachedMapDecision(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofenceExited(java.lang.String,double,double,float)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.Entry:  void  <clinit>()	com.mobileforming.te2.core.model.Entry$1:  void  <init>()
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  getProducts(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupMainTabLayout()	com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onData(java.lang.Long)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment  build()	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  <init>()
com.mobileforming.te2.core.view.CustomCheckBox:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context)
com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  void  <init>()	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onPoiSelected(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadPoiImageBitmap(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,com.mobileforming.android.te2.maps.poi.MapPoiWrapper)
com.mobileforming.android.te2.maps.sdk.model.TE2Beacon$Builder:  com.mobileforming.android.te2.maps.sdk.model.TE2Beacon  build()	com.mobileforming.android.te2.maps.sdk.model.TE2Beacon:  void  <init>(java.lang.String,int,int,com.mobileforming.android.te2.maps.sdk.model.TE2Beacon$1)
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAndShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Value$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Value$1:  com.mobileforming.te2.core.model.Value[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.te2.core.util.DateStringUtil$Mode)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  <init>()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isLocationOn()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isLocationOn()
com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.grupo.UserFragment:  boolean  access$300(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$8:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.android.te2.maps.dataprovider.MapUpdateListener  access$1100(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$2:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  sortMessages(java.util.List)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$5:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()	com.mobileforming.android.te2.maps.MapsModule:  void  registerMapsDataProvider(android.app.Application,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.venue.VenueCache:  void  initializeCacheManager()	com.mobileforming.android.te2.venue.VenueModuleConfig:  com.mobileforming.te2.core.caching.CacheConfiguration  getCacheConfiguration()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  setUpTestDevice(java.lang.String,java.lang.String,java.util.List,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  access$000(com.mobileforming.android.te2.infos.InfoModuleFragment)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  hideLoadingContainer()
com.mobileforming.android.te2.events.EventsModuleFragment:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setFilterConfig(com.mobileforming.android.te2.events.filters.FilterConfig)
com.mobileforming.te2.core.network.RequestInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.te2.core.network.RequestInterceptor:  void  addHeadersToRequest(okhttp3.Request$Builder,java.util.Map)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onLocationUpdate(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  isInVenue()
com.mobileforming.android.te2.maps.view.MapView:  void  setMapZoomConfigurations(float,float,float)	com.mobileforming.android.te2.maps.view.MapView:  void  updateZoomConfigurations()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onLocationTurnedOn()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  displayWaitTimeMessage(boolean)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  double  getLon()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$9:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  setInVenue(boolean)
com.mobileforming.te2.core.view.RibbonView:  void  addTile(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.RibbonView:  void  addMarginIfNotFirst(com.mobileforming.te2.core.view.TileView)
com.mobileforming.android.te2.grupo.RefApplication:  void  createModules()	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.MapsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$3:  void  run()	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  java.util.concurrent.atomic.AtomicReference  access$100(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendVenueExit(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationEvent(android.location.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mobileforming.android.te2.maps.MapsModuleViewModel$4:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleViewModel$4:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  double  access$300(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.venue.VenueModule:  void  initVenue(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule$1:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  fetchAllUserMessagesByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService$2:  void  <init>(com.mobileforming.te2.core.api.messages.MessagesRetrofitService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  onData(java.lang.Object)	com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  onData(java.util.List)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  float  getAccuracy()
com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  java.lang.Object  call()	com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  java.util.List  call()
com.mobileforming.android.te2.events.filters.EventFilterManager:  java.util.Collection  getFilteredEvents()	com.mobileforming.android.te2.events.filters.EventFilterManager:  java.util.Set  getSelectedFilters()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setDestinationY(float)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$2:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImageUri(java.lang.String)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.te2.core.model.BluetoothAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  java.lang.String  getAppUserId()	com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getAppUserId()
com.mobileforming.te2.core.form.FormCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)	com.mobileforming.te2.core.form.FormCheckBox:  android.widget.CompoundButton$OnCheckedChangeListener  access$200(com.mobileforming.te2.core.form.FormCheckBox)
com.mobileforming.te2.core.view.RibbonView:  void  addMarginToTile(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.RibbonView:  android.widget.LinearLayout$LayoutParams  getLayoutParamsForTile(com.mobileforming.te2.core.view.TileView)
com.mobileforming.te2.core.auth.AuthManager:  boolean  isUserSignedIn(com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.cache.UserAuthCache:  boolean  fetchUserSignedIn()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache)
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.OkHttpClient)	com.mobileforming.te2.core.util.Preconditions:  java.lang.Object  throwIfNull(java.lang.Object,java.lang.String)
com.mobileforming.te2.core.model.EventDetail:  void  <clinit>()	com.mobileforming.te2.core.model.EventDetail$1:  void  <init>()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$4:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$4:  void  onData(java.util.List)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsWithDayRange(java.lang.String,java.util.Date,boolean,boolean,int)	com.mobileforming.te2.core.util.WebArrayList:  void  <init>()
com.mobileforming.te2.core.model.TransactionResponse$1:  com.mobileforming.te2.core.model.TransactionResponse  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.TransactionResponse:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.infos.logger.LoggerViewModel:  void  setInteractor(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  com.mobileforming.te2.core.db.AppDatabase  getAppDb()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  optionalCircleCrop()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  optionalCircleCrop()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  com.mobileforming.android.te2.messages.FeaturedMessageFragment  newInstance()	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  <init>()
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  <init>()
com.mobileforming.te2.core.model.TransactionResponse$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.TransactionResponse$1:  com.mobileforming.te2.core.model.TransactionResponse[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getDefaultMapData(boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.te2.core.model.Category:  java.util.List  getChildren()
com.mobileforming.android.te2.maps.sdk.MapDataManager$15:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$15:  rx.Observable  call(java.util.List)
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  init()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$5:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  setHighlightedPoi(java.util.List)
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.view.TileView:  int  access$100(com.mobileforming.te2.core.view.TileView)
com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  <init>(java.util.ArrayList)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  java.util.List  compute()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl)
com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(android.location.Location)
com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$1:  void  <clinit>()	com.mobileforming.te2.core.model.NetworkStatus:  com.mobileforming.te2.core.model.NetworkStatus[]  values()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig  access$100(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.ViewGroup  createInfoView(com.mobileforming.te2.core.model.Info,android.view.ViewGroup)	com.mobileforming.te2.core.model.Link:  java.lang.String  getId()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.util.List)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Event:  java.lang.String  getName()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(com.mobileforming.android.te2.maps.dataprovider.MapInfo)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  <init>()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,int)	com.mobileforming.te2.core.util.ImageUtils$2:  void  <init>(android.widget.ImageView)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadDefaultCategories(com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  formatOf(com.bumptech.glide.load.DecodeFormat)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  format(com.bumptech.glide.load.DecodeFormat)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  float  getDeviceLongitude()
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.te2.core.model.Position  convertMapGridToPosition(com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  int  getX()
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ListItemWrapper:  java.lang.CharSequence  toSpannableString()	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.util.Date  getDateOfLog()
com.mobileforming.te2.core.network.RequestData:  com.mobileforming.te2.core.network.RequestData  create(java.lang.String,java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setEventId(long)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  access$100(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayload(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  double  access$700(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  void  setEventId(long)
com.mobileforming.te2.core.model.Entry$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Entry$1:  com.mobileforming.te2.core.model.Entry[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)	com.mobileforming.te2.core.model.EventTime:  java.util.Date  getStartTime()
com.mobileforming.te2.core.model.HoursLink:  void  setDescription(java.lang.String)	com.mobileforming.te2.core.model.Link:  void  setDescription(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  com.mobileforming.android.te2.maps.sdk.MapManager  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.maps.MapsModuleFragment$12:  void  onPopupWindowClosed()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiPeek()
com.mobileforming.android.te2.venue.VenueModule$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.venue.VenueModule$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupListView()	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.InfoListAdapter$InfoListListener)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadCategoriesByModuleId(com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getVenueModules(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMapLocationClick(com.mobileforming.te2.core.model.EventVenue)	com.mobileforming.te2.core.model.EventVenue:  java.lang.String  getId()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventSelected(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventSelected(com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  fetchEventsModuleConfig()	com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5:  void  run()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  com.mobileforming.te2.core.model.Link  getCachedLink(java.lang.String)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)	com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.system.SystemTracker)
com.mobileforming.android.te2.maps.sdk.model.PoiPayload:  void  <init>()	com.mobileforming.android.te2.maps.sdk.model.PoiPayload$Location:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.PoiPayload)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  double  getLat()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.te2.core.model.MessageActionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.MessageActionEvent$Action)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendPOIEntry(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.CommerceSchedule$1:  com.mobileforming.te2.core.model.CommerceSchedule  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.CommerceSchedule:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.util.DateStringUtil$Mode:  void  <clinit>()	com.mobileforming.android.te2.events.util.DateStringUtil$Mode:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setEventId(long)
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  com.mobileforming.android.te2.infos.configuration.AboutInfoConfig  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  sortPoiList(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapDataManager,boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyMapDataCallback(boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()
com.mobileforming.te2.core.model.DisplayType:  void  <clinit>()	com.mobileforming.te2.core.model.DisplayType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  com.mobileforming.te2.core.caching.CacheConfiguration  getCacheConfiguration()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setPois(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setPois(java.util.List,boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  java.lang.Boolean  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.te2.core.model.NetworkStatus:  void  <clinit>()	com.mobileforming.te2.core.model.NetworkStatus:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getPOIById(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$9:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)	com.mobileforming.te2.core.model.InfoLinkData:  java.lang.String  getId()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.PreferencesRepository:  long  readDownloadTimestamp()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindHeaderViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$HeaderViewHolder,int)
com.mobileforming.te2.core.model.InfoCategory$1:  com.mobileforming.te2.core.model.InfoCategory  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoCategory:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerModule$6:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$6:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.events.view.CustomGridView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.events.view.CustomGridView:  void  init()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processNextTransaction()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onDetach()	com.mobileforming.android.te2.messages.MessagesModule:  void  removeUiDelegate(com.mobileforming.android.te2.messages.MessagesUiDelegate)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.SDKConfig  access$200(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventFilterSelected(com.mobileforming.te2.core.model.EventFilter)
com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  <init>(android.app.Application)	com.mobileforming.android.te2.maps.MapsModuleRepository:  com.mobileforming.android.te2.maps.MapsModuleRepository  getInstance(android.app.Application)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  <init>(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.grupo.DiningFragment:  void  diningFilterApplied(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.RefApplication:  io.te2.defaults.analytics.DefaultGoogleAnalytics  getGoogleAnalytics()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchPoiAllBeacons(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchPoiAllBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.te2.core.network.RequestData:  com.mobileforming.te2.core.network.RequestData  create(java.lang.String,java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.RequestData:  java.lang.String  encodeCredentials(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppUserId(java.lang.String)
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  <init>(int,int,com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType)
com.mobileforming.te2.core.model.MessageType$1:  com.mobileforming.te2.core.model.MessageType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.MessageType:  com.mobileforming.te2.core.model.MessageType  valueOf(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Location:  float  getLon()
com.mobileforming.android.te2.maps.MapsModuleFragment:  com.mobileforming.android.te2.maps.MapsModuleFragment  newInstance(boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  <init>()
com.mobileforming.android.te2.tracker.TrackerModule:  void  postGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideCacheInterceptor(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showDiningDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.RefApplication:  io.te2.defaults.analytics.DefaultGoogleAnalytics  getGoogleAnalytics()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,java.lang.String,int,int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.dataprovider.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView,int)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,int,int,com.bumptech.glide.request.RequestListener)
com.mobileforming.te2.core.api.BaseWebService:  io.reactivex.SingleTransformer  getSingleErrorTransformer()	com.mobileforming.te2.core.api.BaseWebService$1:  void  <init>(com.mobileforming.te2.core.api.BaseWebService)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.util.CropTransformation:  void  <init>(int,int,com.mobileforming.te2.core.util.CropTransformation$CropType)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$300(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.events.view.FilterTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.events.view.FilterTabLayout:  void  init()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isBluetoothOn()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  isBluetoothOn()
com.mobileforming.te2.core.auth.AuthManager:  void  persistResponse(com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.AuthManager:  boolean  isUserSignedIn(com.mobileforming.te2.core.auth.model.CredentialType)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  getWaitTimes()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  messageId()
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  long  getUid()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  onResume()	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.MessagesModuleAnalytics  getMessagesModuleAnalyticsListener()
com.mobileforming.te2.core.model.openinghours.Day:  boolean  isCloseTimeAfterMidnight()	com.mobileforming.te2.core.model.openinghours.Day:  int  getOpenValue()
com.mobileforming.android.te2.tracker.TrackerModule$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  void  access$400(com.mobileforming.te2.core.db.AppDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.te2.core.model.PurchaseDetailLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetailLink$1:  com.mobileforming.te2.core.model.PurchaseDetailLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.ConfigRepository)	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  initializeAppUserId()
com.mobileforming.te2.core.model.Time:  void  <init>(java.lang.String,java.text.DateFormat)	com.mobileforming.te2.core.model.Time:  void  <init>(java.util.Date)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.VenueMonitorDAO  venueMonitorDAO()
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  double  getLatitude()
com.mobileforming.android.te2.messages.MessagesListFragment$1$2:  void  run()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  access$200(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getTarget()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  int  access$902(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getPushDeviceToken()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  isNetworkAvailable()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  handleGeofenceDataCallback(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  addGeofence(com.mobileforming.te2.core.model.GeofenceInfo)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2$1:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  poiListIsReady()
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$002(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  access$000(com.mobileforming.te2.core.api.app.AppRetrofitWebService,okhttp3.Headers,java.util.Map)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  extractHeader(okhttp3.Headers,java.util.Map)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  initBeaconManager()
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Long)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  hideWaitTimes()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onPause()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.venue.VenueModule:  void  setCurrentVenue(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getId()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  access$300(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)
com.mobileforming.te2.core.model.Payment:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.PaymentType,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Payment$1)	com.mobileforming.te2.core.model.Payment:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.PaymentType,java.lang.String,java.lang.String)
com.mobileforming.android.te2.messages.MessagesModule$1:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingError(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.EventTime  getEventTime()
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.android.te2.infos.dataprovider.InfoModuleInteractor  getInfoModuleInteractor()
com.mobileforming.te2.core.form.FormLinearLayout:  void  access$000(com.mobileforming.te2.core.form.FormLinearLayout)	com.mobileforming.te2.core.form.FormLinearLayout:  void  handleInternalClick()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.Bitmap  getDefaultBitMap(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  android.graphics.drawable.Drawable  getDrawable()
com.mobileforming.android.te2.events.view.FilterTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.events.view.FilterTabLayout:  void  init()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setTrackerModuleInteractor(com.mobileforming.android.te2.tracker.dataprovider.TrackerModuleInteractor)
com.mobileforming.te2.core.analytics.processor.AnalyticsPattern:  boolean  evaluate(com.mobileforming.te2.core.AnalyticsEvent)	com.mobileforming.te2.core.analytics.processor.AnalyticsPattern:  java.util.List  getAnalyticsSteps()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  void  <init>()	com.mobileforming.android.te2.tracker.TrackerConfig:  void  <init>()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  void  insertLogBeacon(com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  priorityOf(com.bumptech.glide.Priority)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setDeviceY(float)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  startRefreshingWaitTimes()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$RefreshRunnable:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.poi.PoiStatusLiveData)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,java.lang.Class,java.lang.reflect.Type)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  okhttp3.OkHttpClient$Builder  newClientBuilder()	com.mobileforming.te2.core.network.RetrofitApiBuilder:  void  initializeClientIfNull()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  access$200(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  areHeadingSensorsAvailable()	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  android.hardware.Sensor  getAccelerometer()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  postGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.maps.view.MapView:  void  scaleMap(boolean,float)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  onMapMoved(boolean,float,android.graphics.PointF)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executeGet()	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  void  checkParameters()
com.mobileforming.te2.core.model.Status$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Status$1:  com.mobileforming.te2.core.model.Status  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder  setDialogStyleTheme(int)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setDialogStyleTheme(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.util.List  getVenues()
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.venue.VenueModule:  void  start(java.util.List,com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  putDeviceInformation(com.mobileforming.te2.core.api.device.DeviceInformation,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.EventTriggeredAction:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  long  access$100(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$8:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getId()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  long  getUid()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.lang.String  selectImageUrl(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.lang.String  getDensity()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerModule:  void  setTrackerEventListener(com.mobileforming.android.te2.tracker.TrackerEventListener)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Message:  java.lang.String  getSavingsLabel()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  java.util.Date  getDateOfLog()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$6:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$6:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  access$100(java.util.List,java.util.Date)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  findNextHours(java.util.List,java.util.Date)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onNewIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.messages.OffersListFragment:  void  <init>()	com.mobileforming.android.te2.messages.OffersListFragment$1:  void  <init>(com.mobileforming.android.te2.messages.OffersListFragment)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkUtils:  boolean  hasWifiStatePermission(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.te2.core.model.HoursLink:  void  <init>()	com.mobileforming.te2.core.model.Link:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getCurrentLocationsPermissions()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOfferForType(com.mobileforming.te2.core.model.MessageType,com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.util.List  getLinks()
com.mobileforming.te2.core.model.Category$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Category$1:  com.mobileforming.te2.core.model.Category[]  newArray(int)
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  init()
com.mobileforming.android.te2.maps.MapsModuleFragment$20:  void  run()	com.mobileforming.android.te2.maps.MapsModuleFragment$20$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$20)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  setTagContent(com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Tag:  java.lang.String  getValueLabel()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.fragment.PoiListFragment$DiningListener)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  <init>()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1$1:  void  onData(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  access$000(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService$1:  void  onFailure(retrofit2.Call,java.lang.Throwable)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService,boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Location  getLocation()
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  access$602(com.mobileforming.android.te2.grupo.RefApplication,biz.te2.guestsurvey.config.SurveyModuleConfig)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig)	com.mobileforming.android.te2.maps.sdk.ServerConfig:  java.lang.String  getUsername()
com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  void  resetClient()	com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  getInstance()
com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModuleFragment  getEventsModuleFragment()	com.mobileforming.android.te2.events.EventsModuleFragment:  com.mobileforming.android.te2.events.EventsModuleFragment  newInstance(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.maps.MapsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)
com.mobileforming.te2.core.form.FormCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)	com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  long  getHeaderId(int)	com.mobileforming.te2.core.model.EventTime:  java.util.Date  getStartTime()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  startTracker(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setPushDeviceToken(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUser()
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)	com.mobileforming.te2.core.auth.cache.AuthTokenCache:  void  <init>(android.content.Context)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.VenueMonitorDAO  venueMonitorDAO()
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconMonitoringError(com.mobileforming.te2.core.model.BeaconInfo,java.lang.Exception)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  onData(java.lang.Void)
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onNewIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.MenuTileView$1:  void  <init>(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setTimestamp(long)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$1:  void  onSuccess(java.util.List)
com.mobileforming.te2.core.model.Location:  void  <clinit>()	com.mobileforming.te2.core.model.Location$1:  void  <init>()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiWithDayRange()	com.mobileforming.te2.core.util.WebArrayList:  long  getTtl()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$2:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener  access$100(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository:  void  logGeofenceExit(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.entity.GeofenceEntity,boolean)	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  itemId(java.lang.String)
com.mobileforming.te2.core.model.ProductStatus:  void  <clinit>()	com.mobileforming.te2.core.model.ProductStatus:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsAfterStartDate(java.lang.String,java.util.Date,boolean,boolean)	com.mobileforming.te2.core.util.WebArrayList:  void  <init>()
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  acquireToken(com.mobileforming.te2.core.auth.model.TE2AuthRequest,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.api.AuthTokenWebService$1:  void  <init>(com.mobileforming.te2.core.auth.api.AuthTokenWebService,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setEventId(long)
com.mobileforming.android.te2.maps.MapsModuleFragment$15$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  java.util.List  access$1600(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$6:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$6:  void  onData(java.lang.Void)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchShows(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  signature(com.bumptech.glide.load.Key)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  signature(com.bumptech.glide.load.Key)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  fetchWalkingTime(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.util.TimeZone)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  java.util.TimeZone  access$202(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.TimeZone)
com.mobileforming.android.te2.events.fragment.EventsListFragment$4:  boolean  onClose()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  offlineCategories()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  boolean  haveNetworkConnection()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onResume()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment  newInstance(com.mobileforming.te2.core.model.InfoLink)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  <init>()
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  java.lang.String  getBoundaryTransition()
com.mobileforming.android.te2.tracker.location.BeaconTracker:  org.altbeacon.beacon.Region  createRegion(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  cacheCategories(java.lang.String,java.util.List,long)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  com.mobileforming.android.te2.maps.fragment.DiningFragment  newInstance(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$1:  void  <init>(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  id(java.lang.String)
com.mobileforming.te2.core.util.WebArrayList:  void  setTtl(java.util.Map)	com.mobileforming.te2.core.util.WebArrayList:  long  extractTtl(java.util.Map)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  lon(double)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])	com.mobileforming.te2.core.model.Barcode:  java.lang.String  data()
com.mobileforming.te2.core.auth.AuthManager$5:  void  run()	com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getName()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.messages.MessagesModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingStarted()	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isUiVisible()
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  com.mobileforming.te2.core.entity.LocationHistoryEntity  compute()	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  userPageViewed()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogo(boolean)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  extractAndDisplayLandmarkPoi(java.util.List)	com.mobileforming.android.te2.maps.poi.MapPoiWrapperList:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  storeMapId(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapIdKey(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hidePoiPeek()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  showRecenterFab()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.fragment.Te2MapFragment  newInstance(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$Te2MapFragmentListener,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.MapsModuleListener,java.util.Map,java.util.Map,boolean)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  <init>()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  initGlideIfNull()
com.mobileforming.te2.core.model.LocationLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.LocationLink$1:  com.mobileforming.te2.core.model.LocationLink[]  newArray(int)
com.mobileforming.te2.core.model.PaymentType$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.PaymentType$1:  com.mobileforming.te2.core.model.PaymentType[]  newArray(int)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationAccuracyThreshold(float)	com.mobileforming.android.te2.tracker.TrackerConfig:  float  access$2302(com.mobileforming.android.te2.tracker.TrackerConfig,float)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  int  getMinor()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.infos.InfoModule:  void  changeVenue(java.lang.String)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  sendUserTag(com.google.gson.JsonObject,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Place$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Place$1:  com.mobileforming.te2.core.model.Place[]  newArray(int)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerViewModel:  android.arch.lifecycle.LiveData  getCurrentLocation()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  displayWaitTimeMessage(boolean)
com.mobileforming.te2.core.model.EmailLink:  void  writeToParcel(android.os.Parcel,int)	com.mobileforming.te2.core.model.Link:  void  writeToParcel(android.os.Parcel,int)
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  java.util.List  getOverrides()
com.mobileforming.android.te2.messages.MessagesModule:  android.support.v4.app.Fragment  fetchFeaturedMessageFragment()	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  com.mobileforming.android.te2.messages.FeaturedMessageFragment  newInstance()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <clinit>()	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  void  <init>()
com.mobileforming.te2.core.network.AutoValue_RequestData:  java.lang.String  toString()	com.mobileforming.te2.core.network.$AutoValue_RequestData:  java.util.Map  headersMap()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  populateScrollView()	com.mobileforming.te2.core.model.Link:  java.lang.String  getDescription()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  linkType()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$8:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.View)
com.mobileforming.android.te2.events.util.EventsUtility$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.events.util.EventsUtility$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.events.view.FilterTabLayout:  void  <init>(android.content.Context)	com.mobileforming.android.te2.events.view.FilterTabLayout:  void  init()
com.mobileforming.android.te2.messages.MessagesDetailFragment$3$1:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  access$100(com.mobileforming.android.te2.messages.MessagesDetailFragment,com.mobileforming.te2.core.model.MessageAction)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendGeofenceEntry(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  java.util.List  call(com.mobileforming.android.te2.maps.sdk.DataItem)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$200(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.MessageType:  com.mobileforming.te2.core.model.MessageType  valueOf(java.lang.String)
com.mobileforming.android.te2.infos.logger.LoggerActivity$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.infos.logger.LoggerActivity$1:  void  onChanged(android.location.Location)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchShows(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$14:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.fragment.WebViewFragment$1:  boolean  shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)	com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  access$000(com.mobileforming.te2.core.fragment.WebViewFragment)
com.mobileforming.android.te2.messages.view.BarcodeView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  com.mobileforming.te2.core.model.Message  getCachedFeaturedMessage(android.content.Context)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  void  <init>()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  start()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startBeaconTracker()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createSubInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.model.Link:  java.lang.String  getId()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$300(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  storePoiInstance(java.lang.String,java.util.List)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.EventVenue:  void  setName(java.lang.String)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository:  void  monitorNewVenue(com.mobileforming.te2.core.db.AppDatabase,java.lang.String)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  long  access$200(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <clinit>()	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  void  <init>()
com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.cache.AuthTokenCache:  java.lang.String  fetchRefreshToken()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  com.mobileforming.android.te2.maps.fragment.PoiDetailFragment  newInstance(com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.android.te2.maps.MapsModuleListener)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppId(java.lang.String)
com.mobileforming.te2.core.auth.AuthTokenServiceInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.te2.core.auth.AuthTokenServiceInterceptor:  java.lang.String  getEncodedCredentials()
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackDeviceInformationEvent(com.mobileforming.te2.core.model.DeviceInformationEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapDataManager,boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$HiddenListListener  access$000(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter)
com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getBoldTypeFace(android.content.Context)	com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getTypeface(android.content.Context,java.lang.String,android.graphics.Typeface)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getNameText()	com.mobileforming.te2.core.model.Message:  java.lang.String  getTitle()
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppVersion()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onAttachedToWindow()	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.fragment.WebViewFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.te2.core.fragment.WebViewFragment$1:  void  <init>(com.mobileforming.te2.core.fragment.WebViewFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$900(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  <clinit>()	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  <init>()
com.mobileforming.android.te2.events.EventsModuleFragment:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.filters.FilterConfig:  void  <init>()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  int  getNextHeaderIndex(int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  int  getItemCount()
com.mobileforming.te2.core.model.WebLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.WebLink$1:  com.mobileforming.te2.core.model.WebLink[]  newArray(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  fetchEventsModuleConfig()	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  java.util.Map  getEventFilters()
com.mobileforming.android.te2.maps.view.MapView$2:  void  <clinit>()	com.mobileforming.android.te2.maps.view.MapView$PoiState:  com.mobileforming.android.te2.maps.view.MapView$PoiState[]  values()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.MenuTileView$1:  void  <init>(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.te2.core.model.openinghours.Day:  boolean  isCloseTimeAfterMidnight()	com.mobileforming.te2.core.model.openinghours.Day:  int  getCloseValue()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker  getMessagesModuleTracker()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  <init>(android.app.Application)	com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.MutableLiveData  getBeaconsInRangeLiveData()
com.mobileforming.te2.core.model.SpecialStatus$1:  com.mobileforming.te2.core.model.SpecialStatus  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.SpecialStatus:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  addGeofences(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  submitGeofenceRequest(java.util.List,boolean)
com.mobileforming.android.te2.maps.MapsModuleViewModel$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.google.android.gms.tasks.Task  access$002(com.mobileforming.android.te2.maps.MapsModuleViewModel,com.google.android.gms.tasks.Task)
com.mobileforming.te2.core.model.Menu$1:  com.mobileforming.te2.core.model.Menu  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Menu:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMessagesModule()	com.mobileforming.android.te2.grupo.NavigationActivity$4:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  access$000(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  deleteMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  findLatLonUsingMarkers(com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.te2.core.model.Time:  void  <init>(long)	com.mobileforming.te2.core.model.Time:  void  <init>(java.util.Date)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  <init>(int,int)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  <init>(int,int,com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1400(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Category,java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)
com.mobileforming.android.te2.maps.fragment.TagActionWebViewFragment:  com.mobileforming.android.te2.maps.fragment.TagActionWebViewFragment  newInstance(java.lang.String)	com.mobileforming.android.te2.maps.fragment.TagActionWebViewFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)
com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.OffersListFragment:  void  access$100(com.mobileforming.android.te2.messages.OffersListFragment,java.util.List)
com.mobileforming.android.te2.venue.VenueModule$4:  void  run()	com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueList(java.util.List,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData  getInstance()
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Void)
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.view.TileView:  int  access$000(com.mobileforming.te2.core.view.TileView)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.android.te2.messages.MessagesModuleConfig:  com.mobileforming.android.te2.messages.dataprovider.MessagesModuleInteractor  getMessagesModuleInteractor()
com.mobileforming.te2.core.form.FormTextInputLayout:  boolean  isRequired()	com.mobileforming.te2.core.form.FormEditText:  boolean  isRequired()
com.mobileforming.android.te2.grupo.RefApplication$3:  void  tokenCreated(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String)	com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.OkHttpClient)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.RefApplication:  void  createModules()
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.util.List  access$600(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getReadMessageIds(android.content.Context)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationRepository:  com.mobileforming.android.te2.tracker.location.LocationRepository  getInstance(android.content.Context)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getAllPoi(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService$5:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getLanguageTag()
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  accuracy(double)
com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()	com.mobileforming.te2.core.form.FormData:  void  <init>(java.util.Map)
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  access$200(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule,boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  setBackgroundMode(boolean)
com.mobileforming.android.te2.grupo.RefApplication:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication,com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.events.eventslist.EventsRepository:  boolean  access$002(com.mobileforming.android.te2.events.eventslist.EventsRepository,boolean)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPosition(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  access$000(com.mobileforming.android.te2.maps.sdk.RequestExecutor,rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  java.util.Date  access$002(com.mobileforming.android.te2.maps.poi.PoiStatusLiveData,java.util.Date)
com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationInsideVenue(java.lang.String,double,double,float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationInsideVenue(double,double,float,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showDiningDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  com.mobileforming.android.te2.maps.fragment.PoiDetailFragment  newInstance(com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.android.te2.maps.MapsModuleListener)
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.model.Image:  java.lang.String  getContentDescription()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.Link:  void  setId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onVenueDataReady()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueDataReady()
com.mobileforming.te2.core.model.BeaconInfo$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.BeaconInfo$1:  com.mobileforming.te2.core.model.BeaconInfo[]  newArray(int)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  run()	com.mobileforming.te2.core.model.Poi:  java.lang.String  getDescription()
com.mobileforming.android.te2.venue.VenueCache:  void  cacheVenue(java.lang.String,com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.te2.core.caching.CacheUtils:  long  extractTtl(java.util.Map)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  void  checkParameters()
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.MapsModuleRepository$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleRepository$1:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchBeacons(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  android.arch.lifecycle.LiveData  apply(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPositionFailure(com.mobileforming.android.te2.maps.sdk.exception.DataException)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$29:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.exception.DataException)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder:  void  <init>(android.view.View)
com.mobileforming.te2.core.model.Alarm:  java.util.Date  getEndTimeAsDate()	com.mobileforming.te2.core.model.Time:  void  setTimeOnCalendar(java.util.Calendar,com.mobileforming.te2.core.model.Time)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMessagesModule()	com.mobileforming.android.te2.messages.MessagesListFragment:  com.mobileforming.android.te2.messages.MessagesListFragment  newInstance()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)
com.mobileforming.te2.core.model.AppNotificationStateEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.view.RibbonView:  void  removeMarginsFromTile(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.RibbonView:  android.widget.LinearLayout$LayoutParams  getLayoutParamsForTile(com.mobileforming.te2.core.view.TileView)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$13:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$13:  void  call(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10,java.lang.StringBuilder)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2$2:  void  run()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  access$200(com.mobileforming.android.te2.maps.fragment.PoiListFragment,boolean,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.te2.core.caching.CacheUtils:  long  extractTtl(java.util.Map)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder,int)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  double  access$600(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  <clinit>()	com.mobileforming.te2.core.util.Logger:  java.lang.String  getTag(java.lang.Class)
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  loadCategories()
com.mobileforming.te2.core.form.FormEditText$1:  void  onFocusChange(android.view.View,boolean)	com.mobileforming.te2.core.form.FormEditText:  android.view.View$OnFocusChangeListener  access$100(com.mobileforming.te2.core.form.FormEditText)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  void  <init>()
com.mobileforming.te2.core.model.Position$1:  com.mobileforming.te2.core.model.Position  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Position:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToPositionZoom(com.mobileforming.te2.core.model.Position,boolean,float)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.android.te2.messages.OffersListFragment:  void  onOfferSelected(com.mobileforming.android.te2.messages.offers.BaseOfferViewModel)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsRead(android.content.Context,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapManager:  com.mobileforming.te2.core.model.Position  getMapPosition(double,double)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendPOIExit(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationEvent(android.location.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.DiningFragment,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.lang.String  access$100(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.messages.MessagesDetailFragment$4:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker  getMessagesModuleTracker()
com.mobileforming.te2.core.model.LocationLink$1:  com.mobileforming.te2.core.model.LocationLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LocationLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.grupo.UserFragment:  biz.te2.guestsurvey.listeners.SurveyModuleListener  access$200(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.LocationConfigManager  access$1000(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  setUpTestDevice(java.lang.String,java.lang.String,java.util.List,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$12:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.fragment.DiningFragment$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.DiningFragment$1:  void  onChanged(java.util.List)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.lang.Object)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.Object)
com.mobileforming.android.te2.grupo.RefApplication:  void  venueExited(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setInVenue(boolean,java.lang.String)
com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModuleFragment  getEventsModuleFragment()	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener  getModuleListener()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  initBarcode(com.mobileforming.te2.core.model.Barcode)
com.mobileforming.te2.core.util.ImageUtils:  void  cleanupLoadImage(android.widget.ImageView)	com.mobileforming.te2.core.util.GlideApp:  com.mobileforming.te2.core.util.GlideRequests  'with'(android.content.Context)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.maps.view.SubCategoryTabView:  void  <init>(android.content.Context,java.lang.CharSequence)	com.mobileforming.android.te2.maps.view.SubCategoryTabView:  void  init(java.lang.CharSequence)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder,int)
com.mobileforming.te2.core.model.EventWrapper$1:  com.mobileforming.te2.core.model.EventWrapper  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventWrapper:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$3:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$3:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onMessageActionClick(com.mobileforming.te2.core.model.MessageTriggeredAction)	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.te2.core.model.PurchaseDetail$1:  com.mobileforming.te2.core.model.PurchaseDetail  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetail:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.form.FormEditText$1:  void  onFocusChange(android.view.View,boolean)	com.mobileforming.te2.core.form.FormEditText:  com.mobileforming.te2.core.form.FormEditTextInputManager  access$000(com.mobileforming.te2.core.form.FormEditText)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupHome()
com.mobileforming.android.te2.tracker.multivenue.observers.BeaconSetObserver:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.multivenue.observers.BeaconSetObserver:  void  onChanged(java.util.Set)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  convertPositionToLatLon(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$PositionMarkerWithDistance[]  findNearestMarkersWithPosition(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.te2.core.model.Barcode$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Barcode$1:  com.mobileforming.te2.core.model.Barcode[]  newArray(int)
com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  boolean  isLandmarkPoi()	com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  com.mobileforming.te2.core.model.Poi  getPoi()
com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onCreate(android.arch.persistence.db.SupportSQLiteDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  java.util.List  access$000(com.mobileforming.te2.core.db.AppDatabase_Impl)
com.mobileforming.te2.core.view.CustomCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  requestUrl(java.lang.String)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.te2.core.fragment.WebViewFragment:  void  access$200(com.mobileforming.te2.core.fragment.WebViewFragment,java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  void  launchIfAR(java.lang.String)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createPutRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.RequestFactory:  java.lang.String  buildUrl(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  isStarted()	com.mobileforming.android.te2.tracker.location.PositionTracker:  boolean  isStarted()
com.mobileforming.android.te2.tracker.location.BeaconRepository$1:  void  onActive()	com.mobileforming.android.te2.tracker.location.BeaconRepository:  com.mobileforming.android.te2.tracker.location.BeaconTracker  access$000(com.mobileforming.android.te2.tracker.location.BeaconRepository)
com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  void  <init>(int[][])
com.mobileforming.android.te2.infos.util.InfoModuleUtils:  com.google.android.gms.tasks.Task  retrieveVenueOpeningHours(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.te2.core.model.VenueDetail:  java.lang.String  getId()
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy  build()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setMajor(int)
com.mobileforming.te2.core.auth.AuthManager:  void  persistResponse(com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  storeUserSignedIn(boolean)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$1:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getLocationLiveData()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsRead(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getId()
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  access$300(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.te2.core.model.MessageType$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.MessageType$1:  com.mobileforming.te2.core.model.MessageType[]  newArray(int)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconTrackerStopped()	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hidePoiPeek()
com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(android.content.Context,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.PointF  calculateDrawingPosition(com.mobileforming.te2.core.model.Position,android.graphics.Bitmap)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.util.List  getEventTimes()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.te2.core.network.BaseTE2WebserviceConfig:  okhttp3.Interceptor  createDefaultInterceptor()	com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  cleanup()
com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  onData(java.lang.Void)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  com.mobileforming.te2.core.caching.CacheConfiguration  getCacheConfiguration()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  tryImmediateOrDispatchJob(android.content.Context)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getAppUserId(android.content.Context)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  unbind(java.lang.Object)	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  unbind(android.view.View)
com.mobileforming.android.te2.venue.VenueCache:  void  cacheVenue(java.lang.String,com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  void  <init>(java.lang.String,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.caching.CacheManager)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  logTag(java.lang.String)
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.android.te2.messages.MessagesModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.Event  getEvent()
com.mobileforming.te2.core.model.MessageType:  void  <clinit>()	com.mobileforming.te2.core.model.MessageType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter:  void  <init>(double,double,double,double,double,double)
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabUnselected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  setupList(android.view.View)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  <init>(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$LoggerListListener,android.util.DisplayMetrics)
com.mobileforming.android.te2.venue.VenueModule:  void  <init>(com.mobileforming.android.te2.venue.VenueModuleConfig,android.content.Context)	com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)
com.mobileforming.android.te2.tracker.location.BeaconRepository:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.BeaconTracker:  com.mobileforming.android.te2.tracker.location.BeaconTracker  getInstance(android.content.Context)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getVenueId()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$700(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.LayoutInflater)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  populateUI(android.view.LayoutInflater)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconMonitoringStopped(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.EventTime$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventTime$1:  com.mobileforming.te2.core.model.EventTime  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)
com.mobileforming.android.te2.tracker.TrackerModule:  void  setupLogger()	com.mobileforming.android.te2.tracker.TrackerModule$8:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  fetchMapImagePreviewUri(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImagePreviewFileName(java.lang.String)
com.mobileforming.te2.core.form.FormSubmitButton$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.form.FormSubmitButton:  android.view.View$OnClickListener  access$000(com.mobileforming.te2.core.form.FormSubmitButton)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  option(com.bumptech.glide.load.Option,java.lang.Object)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  set(com.bumptech.glide.load.Option,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onVenueDataReady()	com.mobileforming.android.te2.maps.sdk.PreferencesRepository:  void  writeDownloadTimestamp(long)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.maps.view.CustomTagView:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  access$100(com.mobileforming.te2.core.fragment.WebViewFragment,java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  launchNativeApp(java.lang.String)
com.mobileforming.te2.core.model.Sticker$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Sticker$1:  com.mobileforming.te2.core.model.Sticker  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.view.CustomButton:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  couponId()
com.mobileforming.android.te2.grupo.RefApplication:  void  venueExited(java.lang.String)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  onData(java.util.List)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  void  access$200(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  void  launchIfAR(java.lang.String)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setEventId(long)
com.mobileforming.te2.core.model.EventAction:  void  <clinit>()	com.mobileforming.te2.core.model.EventAction$1:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$800(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1000(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiDetails(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  addGeofence(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getId()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onStop()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder:  void  <init>(android.view.View)
com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.android.te2.messages.OffersListFragment  newInstance()	com.mobileforming.android.te2.messages.OffersListFragment:  void  <init>()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.ViewGroup  createSubInfoView(com.mobileforming.te2.core.model.Info,android.view.ViewGroup)	com.mobileforming.te2.core.model.Link:  java.lang.String  getId()
com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueDataManager:  com.mobileforming.te2.core.model.Venue  fetchTempVenueInstance(java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  dontTransform()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  dontTransform()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$1:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.android.te2.maps.dataprovider.MapUpdateListener  access$1100(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  java.lang.String  getHoursOpen(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  java.lang.String  parseMidnightMidday(java.lang.String)
com.mobileforming.android.te2.grupo.user.VenueRepository$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.user.VenueRepository$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.auth.AuthManager:  void  access$400(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  setVenueId(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  storeMapId(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUi()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView,int)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener,com.mobileforming.android.te2.infos.InfoModuleListener,com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPois(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Order$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Order$1:  com.mobileforming.te2.core.model.Order  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.te2.core.model.TestDevice:  void  setAppId(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  java.util.List  updatePoiStatus(java.util.List)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  long  fetchMaxDate()
com.mobileforming.android.te2.venue.VenueModule$3:  void  run()	com.mobileforming.android.te2.venue.VenueModule:  com.mobileforming.android.te2.venue.VenueDataManager  access$100(com.mobileforming.android.te2.venue.VenueModule)
com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData  getInstance()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideOfflineCacheInterceptor(int)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl$2:  void  <init>(int)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.te2.core.model.Section:  void  setDescription(java.lang.String)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$4:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$4:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  loadStoredMapId(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapIdKey(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkUtils:  boolean  isConnected(android.content.Context)
com.mobileforming.te2.core.util.JsonUtil:  void  fetchJsonResponseFromUrl(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.util.JsonUtil$1:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setVersion(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1202(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  cache(com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.model.LocationLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Link:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  double  getLongitude()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.MenuTileView$1:  void  <init>(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  refreshWaitTimes()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  <init>(com.mobileforming.android.te2.maps.poi.PoiStatusLiveData)
com.mobileforming.te2.core.model.EventDetail$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventDetail$1:  com.mobileforming.te2.core.model.EventDetail  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  buildOkHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  displayTakeoverHours(java.lang.String,com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$12:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapManager:  com.mobileforming.te2.core.model.Position  getMapPosition(double,double)
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsRead(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$500(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  displayMenu(java.util.List)
com.mobileforming.te2.core.model.WebLink:  void  <init>()	com.mobileforming.te2.core.model.Link:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)
com.mobileforming.te2.core.model.Order$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Order$1:  com.mobileforming.te2.core.model.Order[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenuePayload:  com.mobileforming.android.te2.maps.sdk.model.VenueLocation  getLocation()
com.mobileforming.te2.core.model.User$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.User$1:  com.mobileforming.te2.core.model.User  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchMenus(java.lang.String,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$1300(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  access$000(android.content.Context)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  dispatchJob(android.content.Context)
com.mobileforming.android.te2.messages.OffersListFragment:  void  onOfferSelected(com.mobileforming.android.te2.messages.offers.BaseOfferViewModel)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  com.mobileforming.te2.core.model.Message  getModel()
com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  int  access$502(com.mobileforming.android.te2.maps.MapsModuleFragment,int)
com.mobileforming.te2.core.util.WebArrayList:  void  setTtl(okhttp3.Headers)	com.mobileforming.te2.core.util.WebArrayList:  java.util.Map  extractHeader(okhttp3.Headers)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment  newInstance(java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  void  <init>()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.lang.Object,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.util.List,java.util.Map)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.te2.core.model.Poi:  java.lang.String  getName()
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$1:  void  onData(java.util.List)
com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomButton:  void  initAnalytics(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  access$200(com.mobileforming.android.te2.messages.MessagesListFragment)	com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupListView()
com.mobileforming.android.te2.messages.OffersListFragment:  void  onResume()	com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.app.Activity,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  <init>(com.mobileforming.te2.core.form.FormCheckBox$1)
com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  <init>()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.MapsModuleListener,boolean)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.Unit:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.Unit:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  com.mobileforming.android.te2.maps.sdk.model.Fence$State  access$600(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  void  insertLogBeacon(com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(java.lang.Object,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMessagesModule()
com.mobileforming.te2.core.view.CustomEditText:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomEditText:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.te2.core.view.RibbonView:  void  removeTile(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.RibbonView:  int  getTileCount()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackNetworkState()	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onNetworkAvailabilityUpdated(boolean,boolean)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  parsePoiStatus(java.util.List)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  boolean  onQueryTextSubmit(java.lang.String)	com.mobileforming.android.te2.events.filters.EventFilterManager:  void  setSearchText(java.lang.String)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.Object,long)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)
com.mobileforming.te2.core.model.ModifierSelection$1:  com.mobileforming.te2.core.model.ModifierSelection  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ModifierSelection:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGeoFenceChanged(java.lang.String,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  cacheEvents(java.util.List,long)	com.mobileforming.te2.core.caching.CacheManager:  void  store(java.lang.String,java.lang.Object)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAndShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  void  <init>(java.lang.Object,boolean,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  dontAnimate()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  dontAnimate()
com.mobileforming.android.te2.venue.VenueModule:  void  getVenues(java.util.List,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setPlatform(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  int  loadStoredMapVersion(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapVersionKey(java.lang.String)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Message:  java.lang.String  getHeaderImageUrl()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setCompassBearingUpdateFrequency(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.lang.String  getId()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getLocationLiveData()	com.mobileforming.android.te2.tracker.TrackerModule:  android.arch.lifecycle.LiveData  getLocationLiveData()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.TE2SDKGsonBuilder:  com.google.gson.Gson  buildGsonInstance()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setForegroundBetweenScanPeriod(long)
com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)	com.mobileforming.android.te2.maps.sdk.HeadingProcessor$CachedArrays:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingProcessor$1)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)
com.mobileforming.te2.core.model.Message$1:  com.mobileforming.te2.core.model.Message  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Message:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.EventFilter:  boolean  isSelected()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.entity.LoggerEventsEntity:  long  getUid()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.model.Time$1:  com.mobileforming.te2.core.model.Time  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Time:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppId(java.lang.String)
com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueCache:  com.mobileforming.te2.core.model.Venue  getCachedVenue(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  boolean  onQueryTextChange(java.lang.String)	com.mobileforming.android.te2.events.filters.EventFilterManager:  void  setSearchText(java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  com.mobileforming.te2.core.model.Link  getCachedLink(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.util.List  getCachedLinks()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventActionClick(com.mobileforming.te2.core.model.EventTriggeredAction)	com.mobileforming.te2.core.model.EventTriggeredAction:  java.lang.String  getKey()
com.mobileforming.te2.core.model.openinghours.Override:  com.mobileforming.te2.core.model.openinghours.Day  getDay()	com.mobileforming.te2.core.model.openinghours.Day:  void  setClose(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  fetchWalkingTime(com.mobileforming.te2.core.model.Poi)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Position  getPosition()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl$2:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  boolean  access$000()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)	com.mobileforming.te2.core.model.Position:  void  <init>(double,double)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  boolean  access$600(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  boolean  isWebLink(java.lang.String)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setLatitude(double)
com.mobileforming.android.te2.messages.MessagesDetailFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getAction()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForCurrentVenue()
com.mobileforming.te2.core.model.EventAction$1:  com.mobileforming.te2.core.model.EventAction  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventAction:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppUserId()
com.mobileforming.te2.core.model.ModifierSelection$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ModifierSelection$1:  com.mobileforming.te2.core.model.ModifierSelection  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  buildOkHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpCache(okhttp3.OkHttpClient$Builder,android.content.Context)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  runWaitTimeTimerUpdate()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData$1:  void  <init>(com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData)
com.mobileforming.te2.core.ModuleConfig$Builder:  void  <init>()	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  void  <init>()
com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <init>(android.os.Parcel,com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  onResume()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.te2.core.listeners.LocationUpdateListener)
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  updateMenuItemBadge(android.view.MenuItem)	com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  setBadgeCount(int)
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  isTrackingLocation()	com.mobileforming.android.te2.tracker.location.PositionTracker:  boolean  isStarted()
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$600(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$600(com.mobileforming.android.te2.tracker.location.LocationTracker)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  calculateAndNotifyPosition(double,double)
com.mobileforming.te2.core.model.Poi$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Poi$1:  com.mobileforming.te2.core.model.Poi  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.events.EventsModule:  void  registerModuleListener(android.app.Application,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModule  getInstance(android.app.Application)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  access$000(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,okhttp3.Headers,java.util.Map)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  extractHeader(okhttp3.Headers,java.util.Map)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  long  getEventId()
com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  access$200(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initGeofenceTracker(android.content.Context)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  setGeofenceEventListener(com.mobileforming.android.te2.tracker.location.GeofenceEventListener)
com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.CustomTextView:  void  init(android.content.Context)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.te2.core.api.messages.model.MessageInfo:  int  getType()
com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  access$100(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$2:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$300(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,java.util.List)
com.mobileforming.te2.core.api.ApiTranslationException:  void  <init>(java.lang.String)	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitleWithColor(java.lang.String,boolean,int)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  hideVenueSwitcher()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$6:  void  <clinit>()	com.mobileforming.te2.core.model.MessageType:  com.mobileforming.te2.core.model.MessageType[]  values()
com.mobileforming.te2.core.model.EventVenue$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventVenue$1:  com.mobileforming.te2.core.model.EventVenue  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment$1:  boolean  shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  access$000(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  call(java.util.List)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  double  getLat()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showProductView(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  getProducts(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.Message:  void  setMessageType(com.mobileforming.te2.core.model.MessageType)
com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1100(com.mobileforming.android.te2.maps.MapsModuleFragment,java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.MessageTriggeredAction:  void  <init>(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$5:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$5:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.EventVenue:  java.lang.String  getId()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.te2.core.auth.AuthManager$5:  void  run()	com.mobileforming.te2.core.auth.model.TE2AuthRequest:  void  <init>()
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onPostResume()	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Position  getPosition()
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onPoiSelected(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$GridValue:  void  <init>(com.mobileforming.android.te2.maps.sdk.PathFinderAStar$1)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$GridValue:  void  <init>()
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.entity.VenueMonitorEntity:  java.lang.String  getVenueId()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus  convertStatus(com.mobileforming.te2.core.model.NetworkStatus)
com.mobileforming.android.te2.tracker.TrackerModule:  void  postAppNotificationState()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  initializeCacheManagers()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache$1:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleCache)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.util.Logger:  void  e(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  sizeMultiplierOf(float)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  sizeMultiplier(float)
com.mobileforming.te2.core.view.PaymentImageView:  void  init()	com.mobileforming.te2.core.view.PaymentImageView:  void  setPaymentType(com.mobileforming.te2.core.model.PaymentType)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  <init>()	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  <init>()
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getImageUri()
com.mobileforming.te2.core.model.PurchaseDetailLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.PurchaseDetailLink$1:  com.mobileforming.te2.core.model.PurchaseDetailLink[]  newArray(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  offlinePois()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  boolean  haveNetworkConnection()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  com.mobileforming.android.te2.maps.sdk.MapManager  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.view.MapView:  float  getNormalizedScale()	com.mobileforming.android.te2.maps.view.MapView:  float  getNormalizedScale(float)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  calculateAndNotifyPosition(double,double)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchMapPosition(double,double,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.EventTime  getEventTime()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.util.List  getCachedLinks()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.lang.String  getLinksKey()
com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  access$300(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  java.lang.Object[]  newArray(int)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  void  <init>(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1700(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initGeofenceTracker(android.content.Context)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getHeadingText()	com.mobileforming.te2.core.model.Message:  java.lang.String  getTitle()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$3:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$3:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onLaunchWebView(com.mobileforming.te2.core.model.Product,boolean)	com.mobileforming.te2.core.model.Product:  java.lang.String  getPurchaseLink()
com.mobileforming.te2.core.model.InfoLinkData$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.InfoLinkData$1:  com.mobileforming.te2.core.model.InfoLinkData[]  newArray(int)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.messages.view.BarcodeView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.NavigationActivity$16$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity$16,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)
com.mobileforming.te2.core.view.MenuTileView:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.MenuTileView:  void  openMenu()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  putDeviceInformation(com.mobileforming.te2.core.api.device.DeviceInformation,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  downloadOnly()	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  downloadOnly()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  initCustomSpinner(android.view.View)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  java.util.List  setFiltersData()
com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getNormalTypeFace(android.content.Context)	com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getTypeface(android.content.Context,java.lang.String,android.graphics.Typeface)
com.mobileforming.te2.core.model.Message:  int  compareTo(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.util.Date  getExpiresTime()
com.mobileforming.android.te2.maps.util.TagUtil:  void  checkIfTagFullyDisplayed(com.mobileforming.android.te2.maps.view.CustomTagView)	com.mobileforming.android.te2.maps.util.TagUtil:  void  checkForEllipsis(android.widget.TextView,com.mobileforming.android.te2.maps.view.CustomTagView)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  onActive()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  startRefreshingWaitTimes()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  float  access$800(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  setupInfoModules(com.mobileforming.android.te2.infos.logger.LoggerInteractor)
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImageUri(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getDefaultMapImage(java.lang.String)
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomCheckBox:  void  initAnalytics(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$500(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  java.util.List  setFiltersData()	com.mobileforming.android.te2.infos.logger.models.FilterModel:  void  setTextToShow(java.lang.String)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)	com.mobileforming.android.te2.infos.logger.models.FilterModel:  java.lang.String  getKey()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  access$500(java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getLocalAllMapsUrl(java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  java.util.TimeZone  access$200(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.te2.core.auth.AuthInterceptor$1:  void  onData(java.lang.Object)	com.mobileforming.te2.core.auth.AuthInterceptor$1:  void  onData(java.lang.String)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  onAttach(android.content.Context)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.view.CustomTagView:  boolean  isWaitTimeTag(com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Tag:  java.lang.String  getLabel()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$100(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  getWaitTimes()
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)	com.mobileforming.android.te2.tracker.TrackerConfig:  float  getLocationAccuracyThreshold()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$7:  void  call()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setFilterConfig(com.mobileforming.android.te2.events.filters.FilterConfig)
com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  onActive()	com.mobileforming.android.te2.tracker.system.location.LocationStateReceiver:  void  <init>(com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData)
com.mobileforming.te2.core.model.HoursLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.HoursLink$1:  com.mobileforming.te2.core.model.HoursLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.RxUtil:  void  checkOnUiThread()
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  findPositionUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.LatLon:  double  getLon()
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  as(java.lang.Class)	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  as(java.lang.Class)
com.mobileforming.android.te2.grupo.RefApplication:  void  onActivityCreated(android.app.Activity,android.os.Bundle)	com.mobileforming.te2.core.util.ColorUtil:  int  getStatusBarColor(int)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  postStop()
com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.PreferencesRepository:  long  readDownloadTimestamp()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadAndSaveMap()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String)
com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  void  <init>(com.mobileforming.te2.core.model.Message,android.content.res.Resources)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.Info:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getShowsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$6:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.te2.core.model.MessageLinkTappedEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.EmailLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EmailLink$1:  com.mobileforming.te2.core.model.EmailLink[]  newArray(int)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$1:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  optionalTransform(com.bumptech.glide.load.Transformation)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  optionalTransform(com.bumptech.glide.load.Transformation)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.te2.core.model.PhoneLink:  void  <init>()	com.mobileforming.te2.core.model.Link:  void  <init>()
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  apply(com.bumptech.glide.request.RequestOptions)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  apply(com.bumptech.glide.request.RequestOptions)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  deleteVenueData()	com.mobileforming.android.te2.maps.sdk.RxUtil:  void  checkNotOnUiThread()
com.mobileforming.android.te2.venue.VenueModule$3:  void  run()	com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.te2.core.form.FormTextInputLayout:  boolean  isValid()	com.mobileforming.te2.core.form.FormEditText:  boolean  isValid()
com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToPosition(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  onMapMoved(boolean,float,android.graphics.PointF)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchCurrentVenueMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.venue.VenueModule:  void  getVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule$3:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$2:  void  onHeadingChanged(int,float)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl,int,float)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  requestUrl(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setMapsModuleFragmentListener(com.mobileforming.android.te2.maps.MapsModuleListener)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  boolean  isMobileOnly()
com.mobileforming.android.te2.maps.MapsModuleFragment$15$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleFragment$15$1:  void  onData(java.util.List)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  long  getHeaderId(int)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.EventTime  getEventTime()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.lang.Object,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.util.List,java.util.Map)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$18:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.detail.OfferDetailContract$Presenter)	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  assignViewReferences()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheModules(java.lang.String,java.util.List,long)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  calculateAndNotifyPosition(double,double)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getBodyText()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseFailure(java.lang.String,okhttp3.Response)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(int,java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  <clinit>()	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  setValue(java.lang.Boolean)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  getMapImageUri()	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImageUri(java.lang.String)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.MessagesModuleDelegate  getMessagesModuleDelegate()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setLocationEventListener(com.mobileforming.android.te2.tracker.location.LocationEventListener)
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabUnselected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.filters.EventFilterManager:  void  deselectFilter(com.mobileforming.te2.core.model.EventFilter)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  access$000(com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository,java.util.LinkedList)
com.mobileforming.te2.core.form.FormLinearLayout:  void  <init>(android.content.Context)	com.mobileforming.te2.core.form.FormLinearLayout:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  override(int,int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  override(int,int)
com.mobileforming.te2.core.model.Product$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Product$1:  com.mobileforming.te2.core.model.Product[]  newArray(int)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.MapsModuleListener,boolean)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setAdditionalArguments(java.util.List,boolean)
com.mobileforming.te2.core.model.InfoLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLink$1:  com.mobileforming.te2.core.model.InfoLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  long  access$1000(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.te2.core.DataCallback  createDataCallback()	com.mobileforming.android.te2.messages.OffersListFragment$2:  void  <init>(com.mobileforming.android.te2.messages.OffersListFragment)
com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventTime:  java.util.Date  getStartTime()
com.mobileforming.te2.core.model.Sticker$1:  com.mobileforming.te2.core.model.Sticker  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Sticker:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  setTagContent(com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Tag:  java.lang.String  getLabel()
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  appState(java.lang.String)
com.mobileforming.te2.core.model.ModifierSelection$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.ModifierSelection$1:  com.mobileforming.te2.core.model.ModifierSelection[]  newArray(int)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.maps.adapter.PoiListAdapter$PoiListListener,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setHiddenTitle(java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitleWithColor(java.lang.String,boolean,int)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails  build()
com.mobileforming.android.te2.tracker.system.location.LocationState:  boolean  isEnabled(int)	com.mobileforming.android.te2.tracker.system.location.LocationState:  int  getValue()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  java.util.List  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  java.lang.Object  getData()
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$1)	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setForegroundScanPeriod(long)
com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  java.lang.Void  doInBackground(java.lang.Void[])	com.mobileforming.te2.core.caching.CacheManager:  void  store(java.lang.String,java.lang.Object)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  java.util.List  compute()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  java.lang.String  buildUrl(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)	com.mobileforming.android.te2.maps.sdk.ServerConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  int  getDialogStyleTheme()
com.mobileforming.android.te2.maps.sdk.MapDataManager$21:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$21:  void  call(java.lang.Throwable)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  encodeQuality(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeQuality(int)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  com.mobileforming.android.te2.maps.sdk.MapManager  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setEventDetailsPageViewed()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.ConfigRepository)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  com.mobileforming.android.te2.maps.sdk.AppConfig  getAppConfig()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchAppConfig(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$4:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getPOIsByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$7:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showVenueSwitcher()	com.mobileforming.android.te2.grupo.RefApplication:  java.lang.String  getSelectedVenueId()
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  clone()	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  clone()
com.mobileforming.android.te2.maps.sdk.MapDataManager$12:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$12:  rx.Observable  call(java.util.List)
com.mobileforming.te2.core.caching.GsonFileCache:  void  <init>(android.content.Context,java.lang.String)	com.mobileforming.te2.core.caching.GsonFileCache$1:  void  <init>(com.mobileforming.te2.core.caching.GsonFileCache)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.GeofenceDAO  geofenceDAO()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setPendingIntent(android.app.PendingIntent)	com.mobileforming.android.te2.tracker.TrackerConfig:  android.app.PendingIntent  access$1802(com.mobileforming.android.te2.tracker.TrackerConfig,android.app.PendingIntent)
com.mobileforming.te2.core.auth.model.error.ServiceUnavailableException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$4:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1)
com.mobileforming.android.te2.grupo.NavigationActivity$16$1:  void  run()	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  android.content.Intent  createIntent(android.content.Context,com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.model.InfoLinkData$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLinkData$1:  com.mobileforming.te2.core.model.InfoLinkData  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  getShowsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.events.EventRetrofitWebService$WebArrayListCallback:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder,com.mobileforming.android.te2.maps.sdk.model.Poi$1)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.te2.core.model.WebLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Link:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.maps.MapsModuleFragment$17$2:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$17)
com.mobileforming.te2.core.model.Alarm:  java.util.Date  getEndTimeAsDate()	com.mobileforming.te2.core.model.Alarm:  com.mobileforming.te2.core.model.Time  getEndTime()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.InfoListAdapter$InfoListListener)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  java.util.List  createWrapperList(java.util.List)
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.events.filters.EventFilterManager:  void  selectFilter(com.mobileforming.te2.core.model.EventFilter)
com.mobileforming.android.te2.maps.MapsModule:  void  registerMapsDataProvider(android.app.Application,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.MapsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.maps.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.android.te2.maps.util.DateStringUtil$Mode)	com.mobileforming.android.te2.maps.util.DateStringUtil:  boolean  isToday(java.util.Calendar,java.util.Date)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3,java.lang.Throwable)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  showExpirationMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackBluetoothAccessEvent(com.mobileforming.te2.core.model.BluetoothAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.RequestConfig:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,okhttp3.OkHttpClient,com.google.gson.Gson)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  initializeCacheManagers()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.util.List  getGeofences()
com.mobileforming.android.te2.tracker.location.BeaconRepository$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.location.BeaconRepository$2:  void  onChanged(java.util.Map)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getLocalDefaultMapData(java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.sdk.MapIdentifier:  void  <init>(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(com.mobileforming.android.te2.maps.dataprovider.MapInfo)
com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayload(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  displayWaitTimes()	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Status  getStatus()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)	com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  call(java.lang.Throwable)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel:  void  <clinit>()	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.firebase.jobdispatcher.JobParameters  access$200(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.support.v4.app.Fragment,java.lang.String,android.widget.ImageView,com.bumptech.glide.request.RequestListener)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,int,int,com.bumptech.glide.request.RequestListener)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onResponseParseSuccess(java.lang.String,okhttp3.Response,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  insertInCache(java.lang.String,long)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  java.util.List  createGeofences(java.util.List)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  float  getDeviceX()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.te2.core.model.DeviceInfo:  int  getDisplayHeight()
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.entity.VenueMonitorEntity:  long  getEventId()
com.mobileforming.android.te2.messages.view.BarcodeView:  android.graphics.Bitmap  access$100(com.mobileforming.android.te2.messages.view.BarcodeView,java.lang.String,com.google.zxing.BarcodeFormat,int,int)	com.mobileforming.android.te2.messages.view.BarcodeView:  android.graphics.Bitmap  renderBarcodeData(java.lang.String,com.google.zxing.BarcodeFormat,int,int)
com.mobileforming.android.te2.venue.VenueModule$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.venue.VenueModule$2:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()	com.mobileforming.android.te2.maps.MapsModuleFragment:  java.lang.String  access$000(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.te2.core.auth.AuthManager:  void  accountCreated(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  storeUserSignedIn(boolean)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getTimeZone()
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  setTabTitles(java.lang.String[])
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.te2.core.model.Icon:  java.lang.String  getId()
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.InfoModuleFragment:  com.mobileforming.android.te2.infos.InfoModuleFragment  newInstance()
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.filters.FilterConfig:  void  <clinit>()	com.mobileforming.android.te2.events.filters.FilterConfig$1:  void  <init>()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  setupImageView()	com.mobileforming.te2.core.model.InfoLink:  com.mobileforming.te2.core.model.Image  getImage()
com.mobileforming.android.te2.infos.InfoModuleFragment$1$1:  void  run()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  showInfoList()
com.mobileforming.te2.core.form.FormEditText$1:  void  onFocusChange(android.view.View,boolean)	com.mobileforming.te2.core.form.FormEditTextInputManager:  void  onFocusChange(android.view.View,boolean)
com.mobileforming.te2.core.model.HoursLink:  java.lang.String  getDescription()	com.mobileforming.te2.core.model.Link:  java.lang.String  getDescription()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitleWithColor(java.lang.String,boolean,int)
com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  int  compare(com.mobileforming.te2.core.model.Tag,com.mobileforming.te2.core.model.Tag)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  error(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  error(android.graphics.drawable.Drawable)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  formatOf(com.bumptech.glide.load.DecodeFormat)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  access$000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  webRequestSuccess()
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getCode()
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.android.te2.maps.util.TagUtil:  java.util.List  buildPreferredTags(java.util.List)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyTimeLow(long)	com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$302(com.mobileforming.android.te2.tracker.TrackerConfig,long)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(com.mobileforming.android.te2.maps.dataprovider.MapInfo)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7,com.mobileforming.android.te2.maps.dataprovider.MapInfo)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setMapZoomConfigurations(float,float,float)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.view.MapView  getMapView()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueDataReady()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$10:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkUtils:  boolean  hasNetworkStatePermission(android.content.Context)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  hideWalkingDirections()	com.mobileforming.android.te2.maps.view.MapView:  void  hideWalkingPath()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setPushDeviceToken(java.lang.String)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository:  void  logRequestPermissionsData(com.mobileforming.te2.core.db.AppDatabase,android.content.Context)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()	com.mobileforming.android.te2.events.EventsModuleFragment:  com.mobileforming.android.te2.events.EventsModuleFragment  newInstance(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  java.util.List  createFences()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  java.util.List  buildFencesList(java.util.List,java.util.List,java.util.List)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  double  getLatitude()
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$LinearRetryWithDelay:  void  <init>(int,long)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  void  <init>(int,long)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$8:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.lifecycle.LiveData  getFilteredEvents(java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Message:  java.lang.String  getTitle()
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  double  getLatitude()
com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.BeaconConfig  getBeaconConfig()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  java.util.List  access$400(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  java.util.List  wrapPois(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.te2.core.view.CustomTextView:  void  setTypeface(android.graphics.Typeface,int)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  boolean  onQueryTextChange(java.lang.String)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)	com.mobileforming.te2.core.caching.CacheConfiguration:  boolean  isFileCacheEnabled()
com.mobileforming.android.te2.maps.sdk.model.BeaconRegion$Builder:  com.mobileforming.android.te2.maps.sdk.model.BeaconRegion  build()	com.mobileforming.android.te2.maps.sdk.model.BeaconRegion:  void  <init>(java.lang.String,int,java.lang.String)
com.mobileforming.android.te2.infos.InfoModuleFragment:  com.mobileforming.android.te2.infos.InfoModuleFragment  newInstance()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  <init>()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.EventAction:  java.lang.String  getLabel()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  setTimeText(java.util.TimeZone,com.mobileforming.te2.core.model.Entry,android.widget.TextView)	com.mobileforming.te2.core.model.Entry:  java.util.Date  getStart()
com.mobileforming.android.te2.messages.view.BarcodeView:  void  refreshBarcode()	com.mobileforming.android.te2.messages.view.BarcodeView:  void  clearBarcode()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  hiddenSettingsPageViewed()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version  getActiveVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.maps.sdk.RxUtil:  void  checkNotOnUiThread()	com.mobileforming.android.te2.maps.sdk.RxUtil:  boolean  isUiThread()
com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig:  void  <init>()	com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig:  void  <init>(java.lang.String,float,int,int)
com.mobileforming.android.te2.tracker.TrackerModule$7:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$7:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.te2.core.view.PaymentImageView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.PaymentImageView:  void  init()
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  access$000(com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackNetworkState()
com.mobileforming.te2.core.form.FormLinearLayout:  boolean  isValid()	com.mobileforming.te2.core.form.FormViewParentHolder:  java.util.List  getFormViews()
com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  onItemClick(android.view.View,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.te2.core.model.InfoLinkData  getLinkItem(int)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.te2.core.auth.model.error.ServiceUnavailableException:  void  <init>()	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  access$000(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager,com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  handleDownloadCategoriesFailure(com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.util.List)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setLatitude(double)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setMessage(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1602(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.model.BeaconInfo:  int  getMajor()
com.mobileforming.te2.core.view.PaymentImageView:  void  setPaymentType(com.mobileforming.te2.core.model.PaymentType)	com.mobileforming.te2.core.view.PaymentImageView:  void  updateBackground()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  signatureOf(com.bumptech.glide.load.Key)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor:  void  registerAnalyticsInput(io.reactivex.Observable)	com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  <init>(com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor)
com.mobileforming.te2.core.model.HoursLink:  void  setName(java.lang.String)	com.mobileforming.te2.core.model.Link:  void  setName(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  int  getDayLimit()
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry  build()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.te2.core.model.Category$1:  com.mobileforming.te2.core.model.Category  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Category:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.ViewGroup  createSubInfoView(com.mobileforming.te2.core.model.Info,android.view.ViewGroup)	com.mobileforming.te2.core.model.Info:  java.lang.String  getTitle()
com.mobileforming.te2.core.form.FormSubmitButton:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.CustomButton:  void  <init>(android.content.Context)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  start()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startGeofenceTracker()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$11:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$11:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)
com.mobileforming.te2.core.model.Tag$1:  com.mobileforming.te2.core.model.Tag  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Tag:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  com.mobileforming.android.te2.maps.sdk.MapManager  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.te2.core.model.User$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.User$1:  com.mobileforming.te2.core.model.User[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  onLocationUpdate(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  processHeadingFromLocation(android.location.Location)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.util.List  getEventTimes()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)	com.mobileforming.te2.core.model.RegionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float)
com.mobileforming.android.te2.maps.util.ImageUtils$3:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.util.ImageUtils$3:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.te2.core.form.FormEditText:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.form.FormEditTextInputManager:  void  <init>(com.mobileforming.te2.core.form.FormEditText)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,boolean,com.mobileforming.te2.core.view.MenuTileView$1)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,boolean)
com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.EventTime  getEventTime()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogo(boolean)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  hideVenueSwitcher()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setPlatform(java.lang.String)
com.mobileforming.android.te2.venue.VenueDataManager:  void  access$100(com.mobileforming.android.te2.venue.VenueDataManager,java.lang.String,boolean)	com.mobileforming.android.te2.venue.VenueDataManager:  void  setIsRetrievingVenue(java.lang.String,boolean)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  sendWalkingPathEvent(java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$15:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapManager:  com.mobileforming.te2.core.model.Position  getMapPosition(double,double)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setTimestamp(long)
com.mobileforming.android.te2.venue.VenueCache:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig)	com.mobileforming.android.te2.venue.VenueCache:  void  initializeCacheManager()
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.ExecutorService)	com.mobileforming.te2.core.auth.AuthTokenServiceInterceptor:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  java.lang.String  getLocationPermission()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  downloadCategories(com.mobileforming.android.te2.maps.sdk.MapDecision)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.util.List  getCachedCategories(java.lang.String)
com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl$2:  void  run()	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl)
com.mobileforming.te2.core.network.RequestInterceptor$1:  void  onData(java.lang.Object)	com.mobileforming.te2.core.network.RequestInterceptor$1:  void  onData(java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForCurrentVenue()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForVenue(java.lang.String)
com.mobileforming.te2.core.model.Payment$Builder$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Payment$Builder$1:  com.mobileforming.te2.core.model.Payment$Builder[]  newArray(int)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  onAttach(android.content.Context)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.dataprovider.EventsDataProvider  getEventsDataProvider()
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter$1:  void  <init>(com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter,com.mobileforming.te2.core.model.EventFilter,android.view.ViewGroup,android.widget.ImageButton)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.te2.core.model.Message:  java.lang.String  messageId()
com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.CustomButton:  boolean  access$000(com.mobileforming.te2.core.view.CustomButton)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothUnavailable()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  hasBluetoothPermission()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$4:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$2:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)
com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  java.lang.Object  call()	com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call()
com.mobileforming.android.te2.tracker.lite.TrackerLite:  com.mobileforming.te2.core.model.BeaconEvent  createBeaconEvent(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppVersion()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.util.TimeZone)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  java.util.TimeZone  access$200(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.maps.sdk.NetworkRetryService:  void  scheduleDelayable(android.content.Context,java.lang.String)	com.mobileforming.android.te2.maps.sdk.NetworkRetryService:  void  scheduleOneOffTask(android.content.Context,java.lang.String,long)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  noImageSetup()	com.mobileforming.android.te2.messages.MessagesDetailFragment:  int  getThemedColor(int)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1:  void  run()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchVenueInfo(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.venue.VenueWebService:  void  getVenueInfo(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.venue.VenueWebService$1:  void  <init>(com.mobileforming.android.te2.venue.VenueWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.model.BeaconEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float,java.util.List)	com.mobileforming.te2.core.model.RegionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()	com.mobileforming.android.te2.tracker.system.SystemTracker:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueDataManager:  void  storeTempVenueInstance(java.lang.String,com.mobileforming.te2.core.model.Venue,long)
com.mobileforming.te2.core.util.CropTransformation$1:  void  <clinit>()	com.mobileforming.te2.core.util.CropTransformation$CropType:  com.mobileforming.te2.core.util.CropTransformation$CropType[]  values()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  cleanup()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setTitle(java.lang.String)
com.mobileforming.te2.core.view.RibbonView:  void  addMarginIfNotFirst(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.RibbonView:  int  getTileCount()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.te2.core.model.Status:  void  <clinit>()	com.mobileforming.te2.core.model.Status$1:  void  <init>()
com.mobileforming.te2.core.model.PaymentType:  void  <clinit>()	com.mobileforming.te2.core.model.PaymentType:  void  <init>(java.lang.String,int,int,int)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.view.CustomTagView:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getAppUserId(android.content.Context)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  com.mobileforming.android.te2.maps.sdk.ServerConfig  getServerConfig()
com.mobileforming.te2.core.model.InfoCategory$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.InfoCategory$1:  com.mobileforming.te2.core.model.InfoCategory[]  newArray(int)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setHasWifiStatePermission(boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  fetchWalkingTime(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEnableLocationServicesDialog(android.app.Activity)	com.mobileforming.android.te2.grupo.NavigationActivity$13:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$500(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapUpdated(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  java.lang.String  access$000(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.te2.core.model.Info:  void  <clinit>()	com.mobileforming.te2.core.model.Info$1:  void  <init>()
com.mobileforming.android.te2.events.filters.FilterConfig$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.FilterConfig$1:  com.mobileforming.android.te2.events.filters.FilterConfig  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerActivity$1:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  rx.Observable  call(java.lang.String)	com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.functions.Func1  linearBackoff(int,long)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  <init>()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  apply(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  access$000(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  postStop()	com.mobileforming.android.te2.tracker.location.PositionTracker$2:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.venue.VenueModule:  void  initVenue(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule:  void  getVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDecision:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapIdentifier,com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.fragment.WebViewFragment:  com.mobileforming.te2.core.fragment.WebViewFragment  newInstance(java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  void  <init>()
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.EventFilter:  void  setSelected(boolean)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.CouponActionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.CouponActionEvent$Action)
com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition$Builder:  void  <init>()	com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition:  void  <init>()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  java.lang.Object[]  newArray(int)	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  com.mobileforming.android.te2.infos.configuration.AboutInfoConfig[]  newArray(int)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackAppNotificationState(com.mobileforming.te2.core.model.AppNotificationStateEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$14:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMajor()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.messages.MessagesListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$29:  void  run()	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  java.util.Set  access$800(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.GetWalkingPathEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,float,float,float,float,float,boolean)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.BeaconsDAO  beaconsDAO()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.lang.String  getDescription()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  updateUI()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  startTracker(android.content.Context,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.tracker.TrackerModule  getTrackerModule()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hidePoiPeek()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hideWalkingTimeFab()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  updateActionBar(boolean,int,boolean)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  errorOf(int)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$4:  void  onFailure(java.lang.Exception)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  access$102(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService,boolean)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)	com.mobileforming.android.te2.tracker.TrackerConfig:  float  getLocationAccuracyThreshold()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6,com.mobileforming.te2.core.model.Link)
com.mobileforming.te2.core.model.EmailLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EmailLink$1:  com.mobileforming.te2.core.model.EmailLink  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Tax$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Tax$1:  com.mobileforming.te2.core.model.Tax  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  getMapInfo(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5:  void  run()	com.mobileforming.te2.core.model.InfoLinkData:  java.lang.String  getId()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setAccuracy(float)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.te2.core.auth.model.error.AccountLockoutWarningException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setLocationUpdateFrequencyDistanceLow(float)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.BeaconsDAO  beaconsDAO()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.model.Info:  java.lang.String  getTitle()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()	com.mobileforming.te2.core.model.Info:  void  setBody(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.maps.MapsModule:  void  registerModuleListener(android.app.Application,com.mobileforming.android.te2.maps.MapsModuleListener)
com.mobileforming.android.te2.grupo.RefApplication:  void  venueEntered(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setInVenue(boolean,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  onNavigationItemSelected(android.view.MenuItem)	com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  handleMenuItemClick(android.view.MenuItem)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchPoiAllBeacons(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  handleGeofenceDataCallback(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  addGeofences(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1100(com.mobileforming.android.te2.maps.MapsModuleFragment,java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getNameText()
com.mobileforming.android.te2.tracker.location.OrientationLiveData$1:  void  onSensorChanged(android.hardware.SensorEvent)	com.mobileforming.android.te2.tracker.location.OrientationLiveData:  void  updateOrientationAngles()
com.mobileforming.te2.core.auth.AuthManager$4:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.auth.AuthManager$4$2:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$4,java.lang.Throwable)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  access$000(com.mobileforming.android.te2.messages.MessagesDetailActivity)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getAppUserId(android.content.Context)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  boolean  access$202(com.mobileforming.android.te2.tracker.location.GeofenceTracker,boolean)
com.mobileforming.te2.core.model.WebLink$1:  com.mobileforming.te2.core.model.WebLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.WebLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsListFragment$5:  boolean  hasHeader(int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  long  getHeaderId(int)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.GetWalkingPathEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$15:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  java.lang.Void  doInBackground(java.lang.Void[])
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setContentVersion(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$002(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.events.view.FilterTabView:  void  <init>(android.content.Context,int)	com.mobileforming.android.te2.events.view.FilterTabView:  void  init(int)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setMinor(int)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getEventsByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$7:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  shouldShowWaitTimes()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$3:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Void  doInBackground(java.lang.Void[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  clearEvents()
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.android.te2.maps.sdk.model.MapGrid  convertPositionToMapGrid(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.android.te2.tracker.location.PositionTracker$2:  void  run()	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  stop()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.te2.core.model.EventVenue  access$400(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$6:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)
com.mobileforming.te2.core.model.PhoneLink:  void  writeToParcel(android.os.Parcel,int)	com.mobileforming.te2.core.model.Link:  void  writeToParcel(android.os.Parcel,int)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.android.te2.infos.adapter.FilterAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.android.te2.infos.adapter.FilterAdapter:  android.view.View  getCustomView(int,android.view.View,android.view.ViewGroup)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData  getInstance()
com.mobileforming.android.te2.maps.sdk.MapDataManager$23:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  setVenueId(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  storeMapVersion(java.lang.String,int)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setPois(java.util.List)
com.mobileforming.android.te2.messages.OffersListFragment:  void  access$200(com.mobileforming.android.te2.messages.OffersListFragment)	com.mobileforming.android.te2.messages.OffersListFragment:  void  handleFailedMessagesRequest()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$600(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.ViewGroup,int)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addTagViews(android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  android.os.Handler  access$700(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.functions.Func1  linearBackoff(int,long)
com.mobileforming.te2.core.model.Tag$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Tag$1:  com.mobileforming.te2.core.model.Tag  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  topButton(int)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  topButton(java.lang.String)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchConfig(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$16:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Location:  float  getLat()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGeoFenceChanged(java.lang.String,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getPushDeviceToken()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.GeofenceEntity:  void  setBoundaryTransition(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$18:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$18:  java.util.List  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.events.EventsModule:  void  startModule(android.app.Activity)	com.mobileforming.android.te2.events.EventsActivity:  android.content.Intent  createIntent(android.content.Context)
com.mobileforming.android.te2.maps.view.CustomTagView$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.view.CustomTagView$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setDefaultMapFilterEnabled(boolean)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.grupo.RefApplication:  io.te2.defaults.analytics.DefaultGoogleAnalytics  getGoogleAnalytics()
com.mobileforming.te2.core.model.LineItem:  void  <clinit>()	com.mobileforming.te2.core.model.LineItem$1:  void  <init>()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.te2.core.util.CropTransformation:  android.graphics.Bitmap  transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)	com.mobileforming.te2.core.util.CropTransformation:  float  getTop(float)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$7:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$7:  void  call(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setProximityUUID(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$PositionMarkerWithDistance[]  findNearestMarkersWithDistance(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.model.LatLon:  double  getLat()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(java.lang.String,double,double,float,long)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.grupo.UserFragment:  java.util.List  access$402(com.mobileforming.android.te2.grupo.UserFragment,java.util.List)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationAccess(boolean,boolean,boolean,boolean)	com.mobileforming.te2.core.model.LocationAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onResume()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  com.mobileforming.te2.core.model.Message  access$000(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.maps.view.CategoryTabLayout$1:  void  <init>(com.mobileforming.android.te2.maps.view.CategoryTabLayout)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.MapsModuleRepository:  void  <init>(android.app.Application)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.MapsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.android.te2.maps.MapsModuleFragment$1)	com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.VenueLocation:  double  getRadius()
com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.detail.OfferDetailContract$Presenter)
com.mobileforming.te2.core.model.InfoLinkData$1:  com.mobileforming.te2.core.model.InfoLinkData  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLinkData:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  setupList(android.view.View)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onMessageActionClick(com.mobileforming.te2.core.model.MessageTriggeredAction)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.MessagesModuleDelegate  getMessagesModuleDelegate()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context)	com.mobileforming.te2.core.view.CustomButton:  void  initAnalytics(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(android.support.v4.app.Fragment,android.widget.ImageView,java.lang.String,android.graphics.drawable.Drawable,int)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.te2.core.model.openinghours.Override:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.Override:  boolean  isCloseTimeAfterMidnight()
com.mobileforming.te2.core.model.EventCategory$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventCategory$1:  com.mobileforming.te2.core.model.EventCategory[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  cache(com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository:  void  logRequestPermissionsData(com.mobileforming.te2.core.db.AppDatabase,android.content.Context)	com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder  mode(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofenceTransactionFailed(java.lang.String)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.view.AnalyticsEditable:  java.lang.Appendable  append(char)	com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(char)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(java.lang.String,com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$OnFragmentInteractionListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  <init>()
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  <init>(com.mobileforming.android.te2.messages.view.BarcodeView)	com.mobileforming.android.te2.messages.view.BarcodeView:  int  dpToPx(int)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.DiningFragment$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.DiningFragment,com.mobileforming.te2.core.model.Category)
com.mobileforming.te2.core.caching.CacheConfiguration:  java.util.Map  getDefaultTtls()	com.mobileforming.te2.core.caching.CacheConfiguration:  long  hours(long)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  useUnlimitedSourceGeneratorsPool(boolean)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  useUnlimitedSourceGeneratorsPool(boolean)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  access$000(com.mobileforming.android.te2.messages.MessagesDetailActivity)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  hideLoading()
com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.model.TE2AuthRequest:  void  <init>()
com.mobileforming.te2.core.model.Schedule$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Schedule$1:  com.mobileforming.te2.core.model.Schedule[]  newArray(int)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMinor()
com.mobileforming.android.te2.venue.VenueModule:  void  start(java.util.List,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.messages.offers.OfferListView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  assignViewReferences()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  int  getLatestHour(int)	com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  boolean  isEndTimeAfterMidnight()
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)	com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  circleCrop()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  circleCrop()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.model.EventVenue:  void  setName(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  void  setMapId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isLocationOutsideFence(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence)	com.mobileforming.android.te2.maps.sdk.model.Fence:  float  getRadius()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.messages.MessagesModule:  void  setMessagesModuleAnalytics(com.mobileforming.android.te2.messages.MessagesModuleAnalytics)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(android.content.Context,java.lang.String,android.widget.ImageView)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  attemptRegisterListener(android.hardware.Sensor,int)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  registerListener(android.hardware.Sensor,int)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO  loggerLocationPermissionsDAO()
com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  removeGeofences(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  submitGeofenceRequest(java.util.List,boolean)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.OffersListFragment:  void  onOfferSelected(com.mobileforming.android.te2.messages.offers.BaseOfferViewModel)
com.mobileforming.android.te2.maps.view.MapView:  void  drawPoi(android.graphics.Canvas,android.graphics.Bitmap,com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.view.MapView$PoiState,boolean)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Position  getPosition()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiListFragment)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  waitTimesLastUpdated()
com.mobileforming.android.te2.maps.util.DateStringUtil:  int  getNumberOfDaysInYear(int)	com.mobileforming.android.te2.maps.util.DateStringUtil:  boolean  isLeapYear(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.grupo.RefApplication:  void  startVenueHomePage(android.support.v4.app.FragmentActivity,java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  android.content.Intent  startVenueHomeIntent(android.content.Context,java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  maxAge(long)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.InfoLink:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder,com.mobileforming.android.te2.maps.sdk.model.Event$1)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendVenueEntry(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationEvent(android.location.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.model.BeaconInfo:  int  getMajor()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.MenuTileView:  void  init()
com.mobileforming.android.te2.tracker.multivenue.observers.BeaconSetObserver:  void  <init>()	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoList(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,android.content.Context,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  poiItemSelected(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest  build()	com.mobileforming.android.te2.maps.sdk.DataRequest:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataRequest$Method,java.lang.String,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.DataRequest$1)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onData(java.lang.Void)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener  access$000(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter)
com.mobileforming.android.te2.grupo.user.UserFragmentViewModel:  void  <init>()	com.mobileforming.android.te2.grupo.user.VenueRepository:  void  <init>()
com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$302(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.RefApplication$2:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationInsideVenue(double,double,float,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setInVenue(boolean,java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.PositionMarker[]  findNearestMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$PositionMarkerWithDistance[]  findNearestMarkersWithDistance(com.mobileforming.android.te2.maps.sdk.model.LatLon)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataInfo(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getName()
com.mobileforming.android.te2.messages.OfferDetailFragment:  com.mobileforming.android.te2.messages.OfferDetailFragment  newInstance(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.OfferDetailFragment:  void  <init>()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onStop()	com.mobileforming.android.te2.messages.MessagesModule:  void  setUiVisible(boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsAfterStartDate(java.lang.String,java.util.Date,boolean,boolean)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getHighlightedPoiLiveData()
com.mobileforming.android.te2.maps.MapsModule:  void  startMapModuleActivity(android.app.Activity)	com.mobileforming.android.te2.maps.MapsModuleActivity:  android.content.Intent  createIntent(android.content.Context)
com.mobileforming.te2.core.model.ProductStatus:  void  <clinit>()	com.mobileforming.te2.core.model.ProductStatus$1:  void  <init>()
com.mobileforming.android.te2.venue.VenueModule:  void  getVenues(java.util.List,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule$4:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,java.util.List,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  getDownloadOnlyRequest()	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  getDownloadOnlyRequest()
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  onInactive()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  stopRefreshingWaitTimes()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$HeaderViewHolder:  void  <init>(android.view.View)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$2:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$2:  void  onSuccess(java.util.List)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  void  <init>()	com.mobileforming.te2.core.ModuleConfig:  long  access$500()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessAction:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessAction:  void  call(com.mobileforming.android.te2.maps.sdk.DataItem)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  onPause()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.te2.core.listeners.LocationUpdateListener)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getLegalText()
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  rx.Observable  call(rx.Observable)
com.mobileforming.android.te2.tracker.location.LocationTracker$2:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.LocationTracker,java.util.List)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.google.android.gms.tasks.Task  fetchCategories()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.google.android.gms.tasks.TaskCompletionSource,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  access$000(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager,com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  surveyEdited(biz.te2.guestsurvey.model.Survey)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  downsampleOf(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setMultipleTimesText(android.widget.TextView)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,android.widget.TextView)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAfterStartDate(java.util.Date,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.te2.core.util.CropTransformation:  void  <init>(int,int,com.mobileforming.te2.core.util.CropTransformation$CropType)	com.mobileforming.te2.core.util.BitmapTransformation:  void  <init>()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$2:  void  <init>(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter,com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.te2.core.model.Time:  boolean  before(com.mobileforming.te2.core.model.Time)	com.mobileforming.te2.core.model.Time:  int  compareTo(com.mobileforming.te2.core.model.Time)
com.mobileforming.te2.core.model.DisplayType$1:  com.mobileforming.te2.core.model.DisplayType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.DisplayType:  com.mobileforming.te2.core.model.DisplayType  valueOf(java.lang.String)
com.mobileforming.te2.core.model.SpecialStatus$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.SpecialStatus$1:  com.mobileforming.te2.core.model.SpecialStatus  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Place$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Place$1:  com.mobileforming.te2.core.model.Place  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  updateWaitTimesLastUpdatedText()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  boolean  shouldShowWaitTimes()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1,com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <init>()
com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition)	com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  void  setBitmap(android.graphics.Bitmap)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setMapModeEnabled(boolean)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  setMapModeEnabled(boolean)
com.mobileforming.te2.core.auth.AuthManager$5:  void  run()	com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getFederatedProvider()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.te2.core.model.Section:  void  setTitle(java.lang.String)
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.te2.core.model.WebLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.WebLink$1:  com.mobileforming.te2.core.model.WebLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsListFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackLocationAccessEvent(com.mobileforming.te2.core.model.LocationAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.Object  getModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  com.mobileforming.te2.core.model.Message  getModel()
com.mobileforming.te2.core.model.Schedule$1:  com.mobileforming.te2.core.model.Schedule  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Schedule:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()	com.mobileforming.te2.core.model.AppNotificationStateEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.view.Te2DatePickerDialog:  com.mobileforming.te2.core.view.Te2DatePickerDialog  newInstance(long,int)	com.mobileforming.te2.core.view.Te2DatePickerDialog:  void  <init>()
com.mobileforming.te2.core.form.FormEditText:  void  <init>(android.content.Context)	com.mobileforming.te2.core.form.FormEditText:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.model.Barcode$Type:  void  <clinit>()	com.mobileforming.te2.core.model.Barcode$Type:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stop()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stopPositionTracker()
com.mobileforming.android.te2.tracker.system.location.LocationState:  boolean  isEnabled(com.mobileforming.android.te2.tracker.system.location.LocationState)	com.mobileforming.android.te2.tracker.system.location.LocationState:  int  getValue()
com.mobileforming.android.te2.messages.MessagesListFragment$1$1:  void  run()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  access$200(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  int  access$402(com.mobileforming.android.te2.maps.MapsModuleFragment,int)
com.mobileforming.android.te2.maps.util.TagUtil:  void  checkForEllipsis(android.widget.TextView,com.mobileforming.android.te2.maps.view.CustomTagView)	com.mobileforming.android.te2.maps.util.TagUtil$1:  void  <init>(android.widget.TextView,com.mobileforming.android.te2.maps.view.CustomTagView)
com.mobileforming.android.te2.events.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.TimeZone,java.util.Calendar,java.util.Date,com.mobileforming.android.te2.events.util.DateStringUtil$Mode)	com.mobileforming.android.te2.events.util.DateStringUtil:  boolean  isToday(java.util.Calendar,java.util.Date)
com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  onDialogDateSet(int,int,int)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventDayFilterSelected(java.util.Calendar)
com.mobileforming.android.te2.maps.MapsModuleFragment$14:  void  onTabSelected(int)	com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$1300(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.te2.core.model.PlatformUrl:  void  <clinit>()	com.mobileforming.te2.core.model.PlatformUrl$1:  void  <init>()
com.mobileforming.te2.core.model.InfoLink:  void  <clinit>()	com.mobileforming.te2.core.model.InfoLink$1:  void  <init>()
com.mobileforming.te2.core.caching.MemoryCache:  void  store(java.lang.String,java.lang.Object)	com.mobileforming.te2.core.caching.PersistenceObject:  void  <init>(java.lang.Object)
com.mobileforming.te2.core.model.LocationTechnology$1:  com.mobileforming.te2.core.model.LocationTechnology  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LocationTechnology:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout$1:  void  <init>(com.mobileforming.android.te2.maps.view.SubCategoryTabLayout)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$2:  void  onSuccess()	com.mobileforming.te2.core.util.ImageUtils:  android.graphics.Bitmap  roundCornerImage(android.graphics.Bitmap,int)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository:  void  monitorVenueExit(com.mobileforming.te2.core.db.AppDatabase,java.lang.String,boolean)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setAppId(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)	com.mobileforming.te2.core.api.device.DeviceInformation:  java.lang.String  getAppUserId()
com.mobileforming.te2.core.model.LocationTechnology:  void  <clinit>()	com.mobileforming.te2.core.model.LocationTechnology$1:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMapsSearchClosed()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogo(boolean)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$4:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  triggerLastLocationEvent()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  rx.Observable  getLastLocation()
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  initCustomSpinner(android.view.View)	com.mobileforming.android.te2.infos.adapter.FilterAdapter:  void  <init>(android.content.Context,java.util.List)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.firebase.jobdispatcher.JobParameters  access$200(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.te2.core.api.BaseWebService:  java.lang.Throwable  onParsedResponseErrorSuccess(com.mobileforming.te2.core.api.ApiError)	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.String)
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.Week:  int  getLatestHour(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.util.EventsUtility:  void  loadImage(android.support.v4.app.Fragment,java.lang.String,com.bumptech.glide.request.RequestListener,android.widget.ImageView)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  theme(android.content.res.Resources$Theme)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  theme(android.content.res.Resources$Theme)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  showLoader()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$9:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  com.mobileforming.te2.core.model.MessageActionEvent$Action  convertEnum(com.mobileforming.te2.core.model.MessageActionState)
com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)	com.mobileforming.te2.core.caching.CacheConfiguration:  boolean  isMemoryCacheEnabled()
com.mobileforming.te2.core.auth.AuthManager$4:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.auth.AuthManager:  void  access$500(com.mobileforming.te2.core.auth.AuthManager,java.lang.Runnable)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onAttach(android.content.Context)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$200(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$10:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$10:  void  call(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isLocationOn()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  isLocationOn()
com.mobileforming.te2.core.model.Payment$Builder:  void  <clinit>()	com.mobileforming.te2.core.model.Payment$Builder$1:  void  <init>()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.te2.core.form.FormEditTextInputManager:  void  handleError()	com.mobileforming.te2.core.form.FormEditText:  com.mobileforming.te2.core.form.FormViewParent  getFormViewParent()
com.mobileforming.te2.core.form.FormCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)	com.mobileforming.te2.core.form.FormCheckBox:  com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener  access$100(com.mobileforming.te2.core.form.FormCheckBox)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setMapImage(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  float  getMagneticNorthBearing(android.location.Location)	com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  float  normalizeAngle(float)
com.mobileforming.te2.core.model.Category$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Category$1:  com.mobileforming.te2.core.model.Category  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.util.TagUtil:  java.util.List  buildPreferredTags(java.util.List)	com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  void  <init>()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder:  void  <init>(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapDataManager$23:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$23:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.te2.core.model.LocationTechnology$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LocationTechnology$1:  com.mobileforming.te2.core.model.LocationTechnology  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceEventListener  access$400(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.analytics.AnalyticsEvent:  void  <clinit>()	com.mobileforming.te2.core.analytics.AnalyticsEvent:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.model.ProductSelection$1:  com.mobileforming.te2.core.model.ProductSelection  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ProductSelection:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showProductView(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  java.lang.String  getSelectedVenueId()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEvent(java.lang.String,int,int,java.lang.String,double,double)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  saveVenueInfo(java.util.List)	com.mobileforming.android.te2.maps.sdk.RxUtil:  void  checkNotOnUiThread()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$3:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$3:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  getMultiVenuePlaceLiveDataFromWeb(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository,android.content.Context,java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$5:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$5:  int  compare(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  void  monitorNewVenue(com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  onChanged(android.location.Location)
com.mobileforming.te2.core.ModuleConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.mobileforming.te2.core.ModuleConfig$1)	com.mobileforming.te2.core.ModuleConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
com.mobileforming.te2.core.caching.GsonFileCache:  java.lang.String  getFileCachePath(java.lang.String)	com.mobileforming.te2.core.caching.GsonFileCache:  java.lang.String  convertToFileName(java.lang.String)
com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$Builder  getInstance()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  transform(com.bumptech.glide.load.Transformation)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  transform(com.bumptech.glide.load.Transformation)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  autoClone()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  autoClone()
com.mobileforming.android.te2.tracker.location.BeaconTracker:  org.altbeacon.beacon.Region  createRegion(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMajor()
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onPostExecute(java.lang.Object)	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onPostExecute(android.graphics.Bitmap)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  com.mobileforming.android.te2.events.filters.FilterConfig  getFilterConfig()
com.mobileforming.android.te2.tracker.location.BeaconRepository$1:  void  onActive()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  registerBeacons(java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.MessagesModule:  void  setIsRedeemingOffer(boolean)
com.mobileforming.te2.core.view.TileView:  void  setContentImage(com.mobileforming.te2.core.model.Image)	com.mobileforming.te2.core.view.TileView$1:  void  <init>(com.mobileforming.te2.core.view.TileView,com.mobileforming.te2.core.model.Image)
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconMonitoringError(com.mobileforming.te2.core.model.BeaconInfo,java.lang.Exception)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventTime:  java.util.Date  getStartTime()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  fallback(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  fallback(android.graphics.drawable.Drawable)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  access$100(com.mobileforming.android.te2.messages.MessagesDetailFragment,com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)
com.mobileforming.te2.core.auth.AuthManager:  void  authenticate(com.mobileforming.te2.core.auth.model.AuthRequest,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getReadMessageIds(android.content.Context)
com.mobileforming.android.te2.venue.VenueModule$4:  void  run()	com.mobileforming.android.te2.venue.VenueModule:  com.mobileforming.android.te2.venue.VenueDataManager  access$100(com.mobileforming.android.te2.venue.VenueModule)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  <init>()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeFormatOf(android.graphics.Bitmap$CompressFormat)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getShowsByVenueIdAndDateStart(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$5:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.tracker.TrackerModule  getTrackerModule()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder,int)	com.mobileforming.te2.core.model.InfoLinkData:  java.lang.String  getLabel()
com.mobileforming.android.te2.messages.view.BarcodeView:  com.google.zxing.BarcodeFormat  access$000(com.mobileforming.android.te2.messages.view.BarcodeView,com.mobileforming.te2.core.model.Barcode$Type)	com.mobileforming.android.te2.messages.view.BarcodeView:  com.google.zxing.BarcodeFormat  convertType(com.mobileforming.te2.core.model.Barcode$Type)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  fetchOfferByIdForVenue(java.lang.String,java.lang.String,com.mobileforming.android.te2.api.commerce.webservice.DataCallback)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService$1:  void  <init>(com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService,com.mobileforming.android.te2.api.commerce.webservice.DataCallback)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  id(java.lang.String)
com.mobileforming.te2.core.model.Barcode$1:  com.mobileforming.te2.core.model.Barcode  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Barcode:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(android.content.Intent)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheLink(com.mobileforming.te2.core.model.Link,long)	com.mobileforming.te2.core.caching.CacheManager:  java.lang.Object  retrieve(java.lang.String,long)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationOutsideVenue(double,double,float,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setInVenue(boolean,java.lang.String)
com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.Observable  makeObservable(java.util.concurrent.Callable)	com.mobileforming.android.te2.maps.sdk.RxUtil$1:  void  <init>(java.util.concurrent.Callable)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  float  access$400(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.te2.core.view.RibbonView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.RibbonView:  void  init(android.content.Context)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  optionalTransform(java.lang.Class,com.bumptech.glide.load.Transformation)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  optionalTransform(java.lang.Class,com.bumptech.glide.load.Transformation)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(byte[])	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(byte[])
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.android.te2.messages.MessagesModuleActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.messages.MessagesModuleFragment:  com.mobileforming.android.te2.messages.MessagesModuleFragment  newInstance()
com.mobileforming.te2.core.auth.model.error.InternalServerErrorException:  void  <init>()	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.io.File)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.io.File)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.events.dataprovider.EventsDataProvider  access$500(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.android.te2.maps.util.ImageUtils$2:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.util.ImageUtils$2:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  java.util.List  compute()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  <clinit>()	com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlacesLiveData:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.util.List)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setRadius(float)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  getInfoLinkTitle(java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(android.content.Context,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView()	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.Event  getEvent()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()	com.mobileforming.te2.core.model.Info:  void  <init>()
com.mobileforming.android.te2.maps.util.ImageUtils:  float  access$000(float,android.content.Context)	com.mobileforming.android.te2.maps.util.ImageUtils:  float  convertDpToPixel(float,android.content.Context)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onNetworkAvailabilityUpdated(boolean,boolean)	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  hasWifiStatePermission()
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener$1:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setPushDeviceToken(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  access$100(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isUiVisible()
com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()	com.mobileforming.te2.core.form.FormViewParentHolder:  com.mobileforming.te2.core.form.FormSubmitButton  getFormSubmitButton()
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.android.te2.maps.util.TagUtil:  java.util.List  buildPreferredTags(java.util.List)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppVersion()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  boolean  shouldShowWaitTimes()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  isInVenue()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$1:  void  run()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  double  access$400(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.infos.InfoModule:  void  launchModuleFragment(android.support.v7.app.AppCompatActivity,int)	com.mobileforming.android.te2.infos.InfoModuleFragment:  com.mobileforming.android.te2.infos.InfoModuleFragment  newInstance()
com.mobileforming.te2.core.model.Action$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Action$1:  com.mobileforming.te2.core.model.Action  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.LocationTracker$5:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.LocationTracker,java.util.List)
com.mobileforming.te2.core.auth.AuthManager$5:  void  run()	com.mobileforming.te2.core.auth.model.AuthRequest:  com.mobileforming.te2.core.auth.model.CredentialType  getCredentialType()
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofencesTransactionComplete(java.util.List)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onLocationUpdate(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  boolean  shouldShowWaitTimes()
com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  void  access$000(com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter,android.content.Context,com.mobileforming.te2.core.model.EventFilter,android.widget.ImageButton)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  void  updateView(android.content.Context,com.mobileforming.te2.core.model.EventFilter,android.widget.ImageButton)
com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  java.lang.String  access$000(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.te2.core.form.FormCheckBox:  void  onAttachedToWindow()	com.mobileforming.te2.core.form.FormUtils:  com.mobileforming.te2.core.form.FormViewParent  getFormViewParent(android.view.View)
com.mobileforming.te2.core.model.openinghours.Override:  boolean  isCloseTimeAfterMidnight()	com.mobileforming.te2.core.model.openinghours.Override:  int  getOpenHour()
com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  java.util.List  access$500(com.mobileforming.te2.core.db.AppDatabase_Impl)
com.mobileforming.android.te2.messages.MessagesListFragment$1$2:  void  run()	com.mobileforming.android.te2.messages.MessagesListFragment:  android.widget.LinearLayout  access$000(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.grupo.UserFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.grupo.user.UserFragmentViewModel:  android.arch.lifecycle.LiveData  getSurveyAnswersLiveData()
com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  <init>(com.mobileforming.te2.core.form.FormCheckBox$1)	com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  <init>()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker  getMessagesModuleTracker()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  java.util.List  updatePoiStatus(java.util.List)	com.mobileforming.android.te2.maps.util.WaitTimeUtils:  java.util.List  updateRideWaitTimes(java.util.List,boolean)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  populateScrollView(android.view.ViewGroup)	com.mobileforming.te2.core.model.InfoLink:  java.util.List  getInfos()
com.mobileforming.android.te2.messages.view.BarcodeView:  void  asyncBarcodeRefresh(com.mobileforming.te2.core.model.Barcode)	com.mobileforming.android.te2.messages.view.BarcodeView:  void  clearBarcode()
com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  refreshPoisLiveData()	com.mobileforming.android.te2.maps.MapsModuleViewModel$4:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleViewModel)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setSsid(java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  optionalCenterInside()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  optionalCenterInside()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  access$000(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter,com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  setDefaultThumbnailImage(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.MapsModuleActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleFragment:  com.mobileforming.android.te2.maps.MapsModuleFragment  newInstance(boolean)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  launchOfferRedeemedDialog()	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  com.mobileforming.android.te2.infos.fragment.InfoDetailFragment  newInstance(com.mobileforming.te2.core.model.InfoLink,com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$2:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  access$000(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)
com.mobileforming.te2.core.model.Position$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Position$1:  com.mobileforming.te2.core.model.Position[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  java.util.List  access$100(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  java.util.List  wrapEvents(java.util.List)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setMessage(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.grupo.RefApplication$1:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  <init>(java.lang.String)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.model.Payment$1:  com.mobileforming.te2.core.model.Payment  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Payment:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDecision:  boolean  getMapDataFromApp()
com.mobileforming.te2.core.model.EventActionType$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventActionType$1:  com.mobileforming.te2.core.model.EventActionType[]  newArray(int)
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)	com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.grupo.RefApplication:  void  venueEntered(java.lang.String)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  bitmapTransform(com.bumptech.glide.load.Transformation)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  void  onActive()	com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  boolean  isBluetoothOn(android.content.Context)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  venueExited(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.te2.core.db.AppDatabase  getAppDatabase()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  hasBluetoothPermission()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setId(java.lang.String)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.tracker.system.location.LocationState:  void  <clinit>()	com.mobileforming.android.te2.tracker.system.location.LocationState:  void  <init>(java.lang.String,int,int)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$2:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventSelected(com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  onChanged(java.lang.Integer)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  double  getLatitude()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  updateChangeOfDayIndicesSet()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  overrideOf(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  override(int)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$000(com.mobileforming.android.te2.tracker.location.LocationTracker,boolean)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setInBackground(boolean)
com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType:  void  <clinit>()	com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.model.openinghours.Day$Builder:  com.mobileforming.te2.core.model.openinghours.Day  build()	com.mobileforming.te2.core.model.openinghours.Day:  void  setStatus(java.lang.String)
com.mobileforming.te2.core.model.PhoneLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Link:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  java.util.List  getCachedEvents()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  java.lang.String  getEventsKey()
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  com.mobileforming.te2.core.model.Message  getCachedFeaturedMessage(android.content.Context)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.android.te2.grupo.UserFragment:  void  onResume()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  userPageViewed()
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ListItemWrapper:  java.lang.CharSequence  toSpannableString()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupUI(android.view.ViewGroup)
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsExpired(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  boolean  access$302(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,boolean)
com.mobileforming.te2.core.model.PlatformUrl$1:  com.mobileforming.te2.core.model.PlatformUrl  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PlatformUrl:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ListItemWrapper:  java.lang.CharSequence  toSpannableString()	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.lang.String  getType()
com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  <init>(android.app.Application)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.MapsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.grupo.NavigationActivity:  com.mobileforming.android.te2.messages.MessagesModule  fetchMessagesModule()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.model.Info:  java.lang.String  getBody()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Message:  com.mobileforming.te2.core.model.Barcode  getBarcode()
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  float  getAccuracy()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.tracker.location.LocationTracker$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.tracker.location.LocationTracker$2:  void  onData(java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  showExpirationMessage(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.DateTimeUtil:  boolean  isMessageExpiring(java.util.Date,long)
com.mobileforming.android.te2.messages.MessagesListFragment$1$1:  void  run()	com.mobileforming.android.te2.messages.MessagesListFragment:  android.widget.LinearLayout  access$000(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  sendWalkingPathEvent(java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder:  void  <init>(android.view.View)
com.mobileforming.te2.core.model.SpecialStatus$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.SpecialStatus$1:  com.mobileforming.te2.core.model.SpecialStatus[]  newArray(int)
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.MenuTileView:  void  init()
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$2:  void  run()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  java.util.List  getCachedEvents()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.model.Poi:  java.lang.String  getName()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  <clinit>()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  lon(double)
com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileView$MenuTileItem  createItem(java.lang.String,boolean)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,boolean,com.mobileforming.te2.core.view.MenuTileView$1)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1500(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationAccess(boolean,boolean,boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.MapsModuleFragment$14:  void  onTabSelected(int)	com.mobileforming.android.te2.maps.MapsModuleFragment:  java.lang.String  access$000(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)	com.mobileforming.android.te2.tracker.location.PositionTracker:  com.mobileforming.android.te2.tracker.TrackerConfig  access$400(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.grupo.NavigationActivity$6:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$6:  void  onChanged(android.util.Pair)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getInstructionsText()
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.messages.MessagesModuleFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.android.te2.messages.OffersListFragment  newInstance()
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setCategoriesConfig(com.mobileforming.android.te2.events.filters.EventsCategoriesConfig)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  showExpirationMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.util.Date  getExpiresTime()
com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  void  setBaseSettings(com.mobileforming.te2.core.network.BaseModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.android.te2.grupo.NavigationActivity$15:  void  onClick(android.view.View)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onBackPressed()
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$1:  void  onAvailable(android.net.Network)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.CustomButton:  android.view.View$OnClickListener  access$700(com.mobileforming.te2.core.view.CustomButton)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository:  void  monitorVenueEnter(com.mobileforming.te2.core.db.AppDatabase,java.lang.String,boolean)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.BaseWebService$1$1$2:  void  subscribe(io.reactivex.SingleObserver)	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.String)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  thumbnail(com.bumptech.glide.RequestBuilder)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  thumbnail(com.bumptech.glide.RequestBuilder)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setBackgroundScanPeriod(long)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onLocationTurnedOff()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  displayWaitTimeMessage(boolean)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)	com.mobileforming.te2.core.model.GeofenceInfo:  double  getLatitude()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])
com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  boolean  onQueryTextSubmit(java.lang.String)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  mergeStatusWithPoiInCache(java.lang.String,java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageActionClick(com.mobileforming.te2.core.model.MessageTriggeredAction)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  double  access$300(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  updateChangeOfDayIndicesSet()	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  int  getItemCount()
com.mobileforming.te2.core.model.Time:  int  compareTo(java.lang.Object)	com.mobileforming.te2.core.model.Time:  int  compareTo(com.mobileforming.te2.core.model.Time)
com.mobileforming.android.te2.grupo.DiningFragment:  void  onStart()	com.mobileforming.te2.core.model.Category:  void  <init>()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.util.List  getLinks()
com.mobileforming.te2.core.util.DateStringUtil$Mode:  void  <clinit>()	com.mobileforming.te2.core.util.DateStringUtil$Mode:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothAvailable()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)
com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.te2.core.model.Time:  boolean  after(com.mobileforming.te2.core.model.Time)	com.mobileforming.te2.core.model.Time:  int  compareTo(com.mobileforming.te2.core.model.Time)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(java.lang.String,android.widget.ImageView,com.bumptech.glide.request.RequestListener)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,int,int,com.bumptech.glide.request.RequestListener)
com.mobileforming.te2.core.network.$AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.RequestData:  void  <init>()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.Event  getEvent()
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDisplayCategories(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.te2.core.view.PaymentImageView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.PaymentImageView:  void  init()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$33:  void  run()	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  double  access$100(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGeoFenceChanged(java.lang.String,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  parseCategories(java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.model.Venue:  java.util.List  getVenueDetails()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showMaps()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showMaps(java.lang.String,boolean,java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchBeacons(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$1:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.Editable  append(java.lang.CharSequence)	com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(java.lang.CharSequence)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.PositionMarker:  com.mobileforming.te2.core.model.Position  getPosition()
com.mobileforming.android.te2.events.EventsActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.events.EventsModuleFragment:  com.mobileforming.android.te2.events.EventsModuleFragment  newInstance(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.te2.core.model.LocationLink:  void  <init>()	com.mobileforming.te2.core.model.Link:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getCurrentLocationsPermissions()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.tracker.TrackerModule  getTrackerModule()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  access$000(com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository,java.util.LinkedList)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  initLiveData(java.util.LinkedList)
com.mobileforming.android.te2.venue.VenueCache:  void  initializeCacheManager()	com.mobileforming.android.te2.venue.VenueCache$1:  void  <init>(com.mobileforming.android.te2.venue.VenueCache)
com.mobileforming.te2.core.view.MenuTileView:  void  setSelectedItem(int)	com.mobileforming.te2.core.view.MenuTileView:  void  setSelectedUi()
com.mobileforming.android.te2.venue.VenueModule$5:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.util.List  getVenueDetails()
com.mobileforming.android.te2.events.EventsActivity:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setFilterConfig(com.mobileforming.android.te2.events.filters.FilterConfig)
com.mobileforming.android.te2.maps.view.MapView$PoiState:  void  <clinit>()	com.mobileforming.android.te2.maps.view.MapView$PoiState:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.model.EventWrapper:  void  <clinit>()	com.mobileforming.te2.core.model.EventWrapper$1:  void  <init>()
com.mobileforming.te2.core.util.DateStringUtil:  int  getNumberOfDaysInYear(int)	com.mobileforming.te2.core.util.DateStringUtil:  boolean  isLeapYear(int)
com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  onCheckedChanged(android.widget.CompoundButton,boolean)	com.mobileforming.te2.core.form.FormCheckBox:  boolean  isRequired()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  call(rx.Subscriber)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$900(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  com.mobileforming.te2.core.entity.VenueMonitorEntity  compute()
com.mobileforming.te2.core.model.MessageAction$1:  com.mobileforming.te2.core.model.MessageAction  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.MessageAction:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  void  <init>()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  java.lang.String  getBoundaryTransition()
com.mobileforming.te2.core.auth.model.error.InternalServerErrorException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)	com.mobileforming.android.te2.tracker.TrackerModule$3:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)
com.mobileforming.te2.core.model.DisplayType:  void  <clinit>()	com.mobileforming.te2.core.model.DisplayType$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapDataManager$6:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$6:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadMenus(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.util.List  getCachedPois(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.VenueLocation:  com.mobileforming.te2.core.model.Location  getCenter()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setMapId(java.lang.String)
com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.CustomTextView:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Sticker  getSticker()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setVersion(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  locationCheck(android.app.Activity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  checkLocationTurnedOn(android.app.Activity)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getName()
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$600(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationRepository:  android.arch.lifecycle.MutableLiveData  getLocationMutableLiveData()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  com.mobileforming.android.te2.maps.sdk.AppConfig  getAppConfig()
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.Message:  void  setExpiresTime(java.util.Date)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  boolean  shouldRetrieveEvents()
com.mobileforming.android.te2.tracker.system.network.NetworkDetailsLiveData:  void  onActive()	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  <init>(com.mobileforming.android.te2.tracker.system.network.NetworkDetailsLiveData)
com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.te2.core.model.Alarm$1:  com.mobileforming.te2.core.model.Alarm  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Alarm:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCategorySelected(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)
com.mobileforming.te2.core.caching.CacheConfiguration:  void  <init>(boolean,boolean)	com.mobileforming.te2.core.caching.CacheConfiguration:  java.util.Map  getDefaultTtls()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  sizeMultiplier(float)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  sizeMultiplier(float)
com.mobileforming.android.te2.infos.logger.LoggerActivity$4:  void  run()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  java.util.List  access$000(com.mobileforming.android.te2.infos.logger.LoggerActivity)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig)
com.mobileforming.android.te2.venue.VenueModule:  void  start(com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule:  void  initVenue(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPois(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$3:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,java.lang.String)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpCache(okhttp3.OkHttpClient$Builder,android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  java.io.File  getCacheDirectory(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.util.List)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <init>(android.os.Parcel,com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setVersion(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.Map  access$000(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.form.FormTextInputLayout:  java.lang.String  getValue()	com.mobileforming.te2.core.form.FormEditText:  java.lang.String  getValue()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setAppUserId(java.lang.String)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  com.mobileforming.android.te2.messages.MessagesDetailFragment  newInstance(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  <init>()
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsExpired(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getId()
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  payload(com.mobileforming.android.te2.maps.sdk.model.RequestPayload)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2,java.lang.Throwable)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()	com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$202(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)
com.mobileforming.android.te2.maps.sdk.DataItemImpl:  void  <init>(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  void  <init>(java.lang.Object,boolean,boolean)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.TE2ModuleManager,com.mobileforming.android.te2.maps.sdk.LocationConfigManager,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.LocationServerAPI,com.mobileforming.android.te2.maps.sdk.LocationRepository,com.mobileforming.android.te2.maps.sdk.LocationEventManager,com.mobileforming.android.te2.maps.sdk.PreferencesRepository)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  surveyTaken(biz.te2.guestsurvey.model.Survey)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitle(java.lang.String,boolean)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  getEventsByVenueIdAndDateStart(java.lang.String,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.events.EventRetrofitWebService$WebArrayListCallback:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.view.MenuTileView:  void  access$500(com.mobileforming.te2.core.view.MenuTileView)	com.mobileforming.te2.core.view.MenuTileView:  void  setSelectedUi()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)	com.mobileforming.te2.core.view.Te2DatePickerDialog:  com.mobileforming.te2.core.view.Te2DatePickerDialog  newInstance(long,int)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  onNavigationItemSelected(android.view.MenuItem)	com.mobileforming.te2.core.util.KeyboardUtils:  void  hideSoftKeyboard(android.content.Context,android.view.View)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setMapModeEnabled(boolean)
com.mobileforming.android.te2.grupo.DiningFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  access$000(com.mobileforming.android.te2.messages.MessagesDetailFragment)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  noImageSetup()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$200(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.SpecialStatus:  void  <clinit>()	com.mobileforming.te2.core.model.SpecialStatus$1:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$100(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  getCategoriesInstance()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction  access$102(com.mobileforming.android.te2.tracker.location.GeofenceTracker,com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.filters.FilterConfig:  void  setEventFilters(java.util.List)
com.mobileforming.android.te2.events.fragment.EventsListFragment$5:  int  getHeaderTop(android.support.v7.widget.RecyclerView,android.view.View,android.view.View,int,int)	com.mobileforming.android.te2.events.fragment.EventsListFragment$5:  int  getHeaderHeightForLayout(android.view.View)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  android.graphics.drawable.Drawable  loadDrawable(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.util.List  getEventActions()
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.MessagesModule:  void  notifyFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.grupo.RefApplication:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getId()
com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Void  doInBackground(java.lang.Void[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.te2.core.auth.AuthInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.te2.core.auth.AuthInterceptor:  java.lang.String  getEncodedCredentials()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$5:  void  run()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  java.util.List  getCachedEvents()
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  findLatLonUsingMarkers(com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$2:  void  onData(java.lang.Long)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getRefreshTimeLiveData()
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  com.mobileforming.android.te2.maps.sdk.model.Poi  build()	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder,com.mobileforming.android.te2.maps.sdk.model.Poi$1)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  void  checkPayload()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  frameOf(long)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  frame(long)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueLocation:  float  getRadius()
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder,com.mobileforming.android.te2.maps.sdk.model.Fence$1)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.Poi:  java.lang.String  getId()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  updateActionBar(boolean,int,boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment:  android.support.v7.app.ActionBar  getSupportActionBar()
com.mobileforming.te2.core.model.Payment$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Payment$1:  com.mobileforming.te2.core.model.Payment[]  newArray(int)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  <init>(android.content.Context,com.mobileforming.te2.core.network.BaseModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getBaseUrl()
com.mobileforming.te2.core.model.Payment:  void  <clinit>()	com.mobileforming.te2.core.model.Payment$1:  void  <init>()
com.mobileforming.te2.core.dialog.alert.AlertDialogViewHolder:  void  <init>(android.view.View)	com.mobileforming.te2.core.util.Views:  android.view.View  findView(android.view.View,int)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  getDownloadOnlyRequest()	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  apply(com.bumptech.glide.request.RequestOptions)
com.mobileforming.android.te2.messages.OffersListFragment:  void  handleFailedMessagesRequest()	com.mobileforming.android.te2.messages.OffersListFragment:  void  removeExpiredMessages()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()	com.mobileforming.android.te2.events.EventsModuleFragment:  void  setMenuModuleFragmentListener(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$2:  void  onClick(android.view.View)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$LoggerListListener  access$000(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.MessageType  getMessageType(int,java.util.List)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7$1:  void  onGlobalLayout()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$600(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  lat(double)
com.mobileforming.android.te2.maps.sdk.MapDataManager$21:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  showBackButton()
com.mobileforming.te2.core.auth.AuthManager:  void  fetchAccessToken(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.Position:  void  <clinit>()	com.mobileforming.te2.core.model.Position$1:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stopPositionTracker()	com.mobileforming.android.te2.tracker.location.PositionTracker:  boolean  isStarted()
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  com.mobileforming.android.te2.maps.sdk.TE2SDKInternal  get()
com.mobileforming.te2.core.model.MessageType$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.MessageType$1:  com.mobileforming.te2.core.model.MessageType  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  parseCategories(java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$4:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.DataCallback,java.util.List)
com.mobileforming.te2.core.auth.model.error.UnauthorizedException:  void  <init>(java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.infos.adapter.FilterAdapter:  android.view.View  getDropDownView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.android.te2.infos.adapter.FilterAdapter:  android.view.View  getCustomView(int,android.view.View,android.view.ViewGroup)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isDistanceGreater(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence,float)	com.mobileforming.android.te2.maps.sdk.model.Fence:  double  getLat()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  updateMessageState()	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getReadMessageIds(android.content.Context)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setParentTabIcons()	com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  setTabIcons(android.graphics.drawable.Drawable[])
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setAppDatabase(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.te2.core.db.AppDatabase  access$1002(com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.te2.core.model.DeviceInformationEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)
com.mobileforming.android.te2.grupo.RefApplication:  void  beaconsInRange(java.util.List)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoListString(java.util.List)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  android.graphics.drawable.Drawable  loadDrawable(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  boolean  hasCacheExpired(long)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  updateHeaderIndicesSet()	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  int  getItemCount()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  updateConfig(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.fragment.Te2MapFragment  newInstance(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$Te2MapFragmentListener,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$9:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  submitGeofenceRequest(java.util.List,boolean)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker,com.mobileforming.android.te2.tracker.location.GeofenceTracker$1)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  double  access$400(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$300(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$3:  void  onSuccess()	com.mobileforming.te2.core.util.ImageUtils:  android.graphics.Bitmap  roundCornerImage(android.graphics.Bitmap,int)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupListView()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  removeExpiredMessages()
com.mobileforming.android.te2.events.EventsModule:  void  changeVenue(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  com.mobileforming.te2.core.entity.VenueMonitorEntity  compute()	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceEventListener  access$400(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$3:  void  run()	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  java.util.concurrent.CopyOnWriteArraySet  access$100(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  handleGeofenceDataCallback(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startGeofenceTracker()
com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  int  toPixels(android.content.Context,int)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(android.net.Uri)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(android.net.Uri)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8$1:  void  run()	com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.te2.core.view.MenuTileView:  void  onDismiss()	com.mobileforming.te2.core.view.MenuTileView:  void  closeMenu()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository:  void  logGeofenceEnter(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.entity.GeofenceEntity,boolean)	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.events.util.EventsUtility$1:  boolean  onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  int  getDefaultImageResourceForEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.model.MessageActionState:  void  <clinit>()	com.mobileforming.te2.core.model.MessageActionState:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)	com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getContentVersion()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  access$000(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter,com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.model.Icon$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Icon$1:  com.mobileforming.te2.core.model.Icon[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()	com.mobileforming.te2.core.model.InfoLink:  java.util.List  getInfos()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.te2.core.model.Sticker$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Sticker$1:  com.mobileforming.te2.core.model.Sticker[]  newArray(int)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  removeGeofence(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getId()
com.mobileforming.te2.core.model.EventWrapper$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventWrapper$1:  com.mobileforming.te2.core.model.EventWrapper[]  newArray(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.te2.core.model.DeviceInfo:  java.lang.String  androidVersion()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  int  getMajor()
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getDefaultMapData(boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  <init>()	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofenceEntered(java.lang.String,double,double,float)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUser()	com.mobileforming.android.te2.grupo.UserFragment:  com.mobileforming.android.te2.grupo.UserFragment  newInstance(com.mobileforming.android.te2.grupo.UserFragment$UserFragmentListener,biz.te2.guestsurvey.listeners.SurveyModuleListener)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1:  void  run()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onResume()	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  com.mobileforming.android.te2.messages.MessagesModule  getMessagesModule()
com.mobileforming.te2.core.model.EventActionType:  void  <clinit>()	com.mobileforming.te2.core.model.EventActionType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$000(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiWithDayRange()
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  responseType(java.lang.reflect.Type)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  <init>()	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.TE2Beacon:  void  <init>(java.lang.String,int,int,com.mobileforming.android.te2.maps.sdk.model.TE2Beacon$1)	com.mobileforming.android.te2.maps.sdk.model.TE2Beacon:  void  <init>(java.lang.String,int,int)
com.mobileforming.android.te2.maps.MapsModuleViewModel$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getTimeZone()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,android.content.Context)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  timeout(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  timeout(int)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleException(java.lang.Exception)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  access$102(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService,boolean)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository:  void  logRequestPermissionsData(com.mobileforming.te2.core.db.AppDatabase,android.content.Context)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$14:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$14:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.events.EventsModule:  void  changeVenue(java.lang.String)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  setTimeText(java.util.TimeZone,com.mobileforming.te2.core.model.Entry,android.widget.TextView)	com.mobileforming.te2.core.model.Entry:  boolean  isFullDay()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyDistance(float)	com.mobileforming.android.te2.tracker.TrackerConfig:  float  access$202(com.mobileforming.android.te2.tracker.TrackerConfig,float)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventSelected(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.util.List  getEventTimes()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  boolean  shouldRetrieveShows()
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  java.lang.Object[]  newArray(int)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventVenues(com.mobileforming.te2.core.model.Event,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Place:  void  <clinit>()	com.mobileforming.te2.core.model.Place$1:  void  <init>()
com.mobileforming.te2.core.model.Barcode:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Barcode$Type:  com.mobileforming.te2.core.model.Barcode$Type  valueOf(java.lang.String)
com.mobileforming.android.te2.grupo.DiningFragment$1$1:  void  run()	com.mobileforming.android.te2.grupo.DiningFragment:  void  access$000(com.mobileforming.android.te2.grupo.DiningFragment,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  sortEvents(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  void  <init>()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setBoundaryTransition(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  java.util.List  access$302(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.List)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  <init>()	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.te2.core.model.DeviceInfo:  java.lang.String  manufacturer()
com.mobileforming.te2.core.form.FormSubmitButton:  void  onAttachedToWindow()	com.mobileforming.te2.core.form.FormUtils:  com.mobileforming.te2.core.form.FormViewParent  getFormViewParent(android.view.View)
com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.grupo.UserFragment:  com.mobileforming.android.te2.grupo.NavigationActivity  access$100(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$2:  void  onChanged(com.mobileforming.android.te2.tracker.system.location.LocationState)
com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(java.lang.CharSequence)	com.mobileforming.te2.core.view.AnalyticsEditable:  void  appendDelimiter()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setUsername(java.lang.String)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  timestamp(long)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapManager:  long  getWalkingTime(java.util.List)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)
com.mobileforming.te2.core.model.PaymentType$1:  com.mobileforming.te2.core.model.PaymentType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PaymentType:  com.mobileforming.te2.core.model.PaymentType  valueOf(java.lang.String)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder:  void  <init>()	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <init>()
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem  build()
com.mobileforming.android.te2.grupo.NavigationActivity$1$1$1:  boolean  shouldDisplayDialog()	com.mobileforming.android.te2.grupo.RefApplication:  boolean  wasSurveyDisplayed()
com.mobileforming.te2.core.fragment.WebViewFragment$1:  void  onLoadResource(android.webkit.WebView,java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  access$000(com.mobileforming.te2.core.fragment.WebViewFragment)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder  setFilterConfig(com.mobileforming.android.te2.events.filters.FilterConfig)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  com.mobileforming.android.te2.events.filters.FilterConfig  access$002(com.mobileforming.android.te2.events.filters.EventFilterConfiguration,com.mobileforming.android.te2.events.filters.FilterConfig)
com.mobileforming.te2.core.model.ExternalLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.ExternalLink$1:  com.mobileforming.te2.core.model.ExternalLink[]  newArray(int)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  <init>()	com.mobileforming.android.te2.tracker.multivenue.observers.BeaconSetObserver:  void  <init>()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.infos.InfoModule:  com.mobileforming.android.te2.infos.InfoModule  getInstance(android.app.Application)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  java.util.List  setFiltersData()	com.mobileforming.android.te2.infos.logger.models.FilterModel:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onLocationClick(com.mobileforming.te2.core.model.EventVenue)	com.mobileforming.te2.core.model.EventVenue:  java.lang.String  getId()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.firebase.jobdispatcher.JobParameters  access$200(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)
com.mobileforming.android.te2.maps.MapsModuleFragment$18:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  isInVenue()
com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.MenuTileView:  void  access$500(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  float  access$500(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  java.lang.String  getHoursOpen(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.te2.core.model.openinghours.Day:  java.lang.String  getClose()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  void  <clinit>()	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.grupo.RefApplication:  java.lang.String  access$000()
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor$1:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode[]  values()
com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context)	com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getNormalTypeFace(android.content.Context)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.lang.String  getName()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  android.content.Context  getContext()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackNetworkAccessEvent(com.mobileforming.te2.core.model.NetworkAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$5:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.te2.core.model.LineItem$1:  com.mobileforming.te2.core.model.LineItem  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LineItem:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$2:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$2:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.filters.FilterConfig:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper:  void  <init>(android.location.Location,java.lang.String,java.lang.String,boolean,com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$1)	com.mobileforming.android.te2.maps.sdk.model.LocationWrapper:  void  <init>(android.location.Location,java.lang.String,java.lang.String,boolean)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImageUri()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest  build()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.Link:  void  setName(java.lang.String)
com.mobileforming.te2.core.model.BeaconInfo$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.BeaconInfo$1:  com.mobileforming.te2.core.model.BeaconInfo  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.caching.GsonFileCache:  void  clear(java.lang.String)	com.mobileforming.te2.core.caching.GsonFileCache:  java.lang.String  getFileCachePath(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.events.eventslist.EventsListViewModel:  android.arch.lifecycle.LiveData  getEventsListLiveData(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,java.lang.String,int,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataItemImpl:  java.lang.Object  getData()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setType(java.lang.String)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  setDefaultThumbnailImage(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  int  getDefaultImageResourceForEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setProximityUUID(java.lang.String)
com.mobileforming.te2.core.model.MessageAction$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.MessageAction$1:  com.mobileforming.te2.core.model.MessageAction[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getTimeZone()
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.maps.view.MapView:  boolean  shouldShowLabel()	com.mobileforming.android.te2.maps.view.MapView:  float  getNormalizedScale()
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.Message:  void  setMessageActions(java.util.List)
com.mobileforming.te2.core.model.ProductSelection$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ProductSelection$1:  com.mobileforming.te2.core.model.ProductSelection  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  float  access$500(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setDeviceLongitude(float)
com.mobileforming.te2.core.api.BaseWebService$1$1:  java.lang.Object  apply(java.lang.Object)	com.mobileforming.te2.core.api.BaseWebService$1$1:  io.reactivex.SingleSource  apply(retrofit2.adapter.rxjava2.Result)
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)	com.mobileforming.android.te2.tracker.location.PositionTracker:  long  access$300(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  <init>()	com.mobileforming.te2.core.dialog.FullScreenDialogFragment:  void  <init>()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  bitmapTransform(com.bumptech.glide.load.Transformation)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  transform(com.bumptech.glide.load.Transformation)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setBackgroundScanPeriod(long)	com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$2102(com.mobileforming.android.te2.tracker.TrackerConfig,long)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  access$100(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  launchNativeApp(java.lang.String)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)
com.mobileforming.te2.core.model.EventAction$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventAction$1:  com.mobileforming.te2.core.model.EventAction  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.EventVenue$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventVenue$1:  com.mobileforming.te2.core.model.EventVenue[]  newArray(int)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  boolean  access$400(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.events.EventsModule:  void  registerUserModuleConfiguration(android.app.Application,com.mobileforming.android.te2.events.filters.EventFilterConfiguration)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModule  getInstance(android.app.Application)
com.mobileforming.android.te2.grupo.defaults.InstanceIdService:  void  onTokenRefresh()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.model.ProductStatus$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.ProductStatus$1:  com.mobileforming.te2.core.model.ProductStatus[]  newArray(int)
com.mobileforming.te2.core.form.FormSubmitButton:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.form.FormSubmitButton:  void  init()
com.mobileforming.te2.core.form.FormEditTextInputManager:  void  <init>(com.mobileforming.te2.core.form.FormEditText)	com.mobileforming.te2.core.form.FormEditText:  boolean  isValid()
com.mobileforming.te2.core.form.FormSubmitButton:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomButton:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeFormatOf(android.graphics.Bitmap$CompressFormat)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeFormat(android.graphics.Bitmap$CompressFormat)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setLocationUpdateFrequencyTimeLow(long)
com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  callToActionClicked(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Action:  java.util.Map  getOptions()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindHeaderViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder,int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  scheduleOnConnectDownloadRetry()	com.mobileforming.android.te2.maps.sdk.LocationDataSchedulerService:  void  startEventScheduler(android.content.Context)
com.mobileforming.te2.core.model.DisplayType$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.DisplayType$1:  com.mobileforming.te2.core.model.DisplayType  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.defaults.InstanceIdService:  void  onTokenRefresh()	com.mobileforming.android.te2.grupo.RefApplication:  void  pushTokenGenerated()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Event:  java.util.List  getCategories()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setMinor(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiStatus(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showDiningDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadInfoMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getThumbnailImageUrl()
com.mobileforming.android.te2.maps.sdk.AppConfig:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.AppConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  void  <init>(java.lang.String,int,int,int,int,double,double,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  void  <init>(java.lang.String,int,int,int,int,boolean,double,double,java.lang.String)
com.mobileforming.te2.core.model.Event:  void  <clinit>()	com.mobileforming.te2.core.model.Event$1:  void  <init>()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  int  getMajor()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()	com.mobileforming.android.te2.grupo.NavigationActivity$8:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.te2.core.model.Value$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Value$1:  com.mobileforming.te2.core.model.Value  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  onChanged(java.lang.Integer)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiListFragment)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  lat(double)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,android.content.Context)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  skipMemoryCache(boolean)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  skipMemoryCache(boolean)
com.mobileforming.android.te2.venue.VenueModule:  void  start(java.util.List,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.te2.core.view.CustomButton:  void  initAnalytics(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomButton$1:  void  <init>(com.mobileforming.te2.core.view.CustomButton)
com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.grupo.NavigationActivity:  com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider  getMapsDataProvider()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.model.PurchaseDetail$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.PurchaseDetail$1:  com.mobileforming.te2.core.model.PurchaseDetail[]  newArray(int)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig  getCategoriesConfig()
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.model.Payment$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$1:  com.mobileforming.te2.core.model.Payment  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView()	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  initializeCacheManagers()	com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)
com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createGetRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String,okhttp3.CacheControl)	com.mobileforming.android.te2.maps.sdk.RequestFactory:  java.lang.String  buildUrl(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1$1:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1$1:  void  onSuccess(java.util.List)
com.mobileforming.te2.core.model.PhoneLink:  void  <clinit>()	com.mobileforming.te2.core.model.PhoneLink$1:  void  <init>()
com.mobileforming.te2.core.model.Position$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Position$1:  com.mobileforming.te2.core.model.Position  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImagePreviewUri()	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  fetchMapImagePreviewUri(java.lang.String)
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.ExecutorService)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapInfoAndData(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  getMapInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  call(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.maps.MapsModuleFragment:  int  access$402(com.mobileforming.android.te2.maps.MapsModuleFragment,int)
com.mobileforming.android.te2.infos.fragment.LoggerFragment$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.infos.fragment.LoggerFragment$1:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  executeRequest(com.mobileforming.android.te2.maps.sdk.DataRequest,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$4:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$4:  void  onChanged(java.lang.Long)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$9:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Message:  java.lang.String  getTitle()
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.infos.InfoModule:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.android.te2.messages.MessagesListFragment$1$1:  void  run()	com.mobileforming.android.te2.messages.MessagesListFragment:  java.util.List  access$100(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.te2.core.view.PaymentImageView:  void  setTinted(boolean)	com.mobileforming.te2.core.view.PaymentImageView:  void  updateBackground()
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData$1:  void  run()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  int  access$008(com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)	com.mobileforming.te2.core.view.CustomCheckBox:  boolean  access$000(com.mobileforming.te2.core.view.CustomCheckBox)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyCouponMessagesAvailable(java.util.List)	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isUiVisible()
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  getEventsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.events.EventRetrofitWebService$WebArrayListCallback:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  registerTestDevice(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.util.List,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setAccuracy(float)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getSurveyModuleConfig()	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData  getInstance()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  buildMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo,java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  optionalFitCenter()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  optionalFitCenter()
com.mobileforming.android.te2.maps.view.MapView:  void  initialize()	com.mobileforming.android.te2.maps.view.MapView:  void  updateZoomConfigurations()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchCategories(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  access$700(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getLocalMapDataUrl(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.Info$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Info$1:  com.mobileforming.te2.core.model.Info[]  newArray(int)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeQualityOf(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeQuality(int)
com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setAppUserId(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchHomePageEvents(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(java.lang.CharSequence,java.lang.Object,int)	com.mobileforming.te2.core.view.AnalyticsEditable:  void  appendDelimiter()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onLocationTurnedOff()	com.mobileforming.android.te2.maps.view.MapView:  void  setCurrentPosition(com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.model.PhoneLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PhoneLink$1:  com.mobileforming.te2.core.model.PhoneLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  setValue(java.lang.Object)	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  void  setValue(java.lang.Boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataInfo(java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  postCallback(int,float)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl,int,float)
com.mobileforming.android.te2.api.commerce.model.Status:  void  <clinit>()	com.mobileforming.android.te2.api.commerce.model.Status:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1$1:  java.lang.Object  call(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1$1:  java.util.Map  call(java.util.List,java.lang.Integer)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  onResume()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  removeExpiredMessages()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(java.lang.Object)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onResponseParseSuccess(java.lang.String,okhttp3.Response,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.NetworkUtils:  long  getCacheMaxAge(okhttp3.Response,long)
com.mobileforming.te2.core.model.LineItem$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.LineItem$1:  com.mobileforming.te2.core.model.LineItem[]  newArray(int)
com.mobileforming.te2.core.model.MessageActionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.MessageActionEvent$Action)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothAvailable()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  hasBluetoothPermission()
com.mobileforming.te2.core.model.Message:  int  compareTo(java.lang.Object)	com.mobileforming.te2.core.model.Message:  int  compareTo(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.Bitmap  getDefaultBitMap(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.util.ImageUtils:  android.graphics.Bitmap  drawableToBitmap(android.graphics.drawable.Drawable)
com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  java.lang.Boolean  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppVersion(java.lang.String)
com.mobileforming.android.te2.grupo.UserFragment:  void  onResume()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  load(java.lang.Object)	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.Object)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  trackNetworkState(android.content.Context)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  cacheEvents(java.util.List,long)
com.mobileforming.te2.core.util.GlideOptions:  java.lang.Object  clone()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  clone()
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  void  setMapId(java.lang.String)
com.mobileforming.te2.core.model.PlaceStatus$Type:  void  <clinit>()	com.mobileforming.te2.core.model.PlaceStatus$Type:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.model.Tag:  void  <clinit>()	com.mobileforming.te2.core.model.Tag$1:  void  <init>()
com.mobileforming.android.te2.events.EventsModule:  void  changeVenue(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.util.List  access$700(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.events.eventslist.EventsListViewModel:  void  <init>()	com.mobileforming.android.te2.events.eventslist.EventsRepository:  void  <init>()
com.mobileforming.te2.core.model.Sticker:  void  <clinit>()	com.mobileforming.te2.core.model.Sticker$1:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  startGuestSurvey()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  <init>()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  errorOf(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.net.Uri  buildPhoneUri(java.lang.String)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  launchOfferRedeemedDialog()	com.mobileforming.android.te2.messages.MessagesModule:  void  setHasRedeemedOffer(boolean)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  webRequestFailed(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  dispatchJob(android.content.Context,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  showLoader()
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.te2.core.model.Category:  java.util.List  getChildren()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Icon  getMarkerIcon()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideCacheInterceptor(int)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl$1:  void  <init>(int)
com.mobileforming.android.te2.maps.MapsModuleViewModel$2:  void  onFailure(java.lang.Exception)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.google.android.gms.tasks.Task  access$002(com.mobileforming.android.te2.maps.MapsModuleViewModel,com.google.android.gms.tasks.Task)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.lang.Integer)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.Integer)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$3:  void  onData(java.lang.Object)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$3:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(android.location.Location)	com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.te2.core.db.AppDatabase  getAppDatabase()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setName(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$8:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$700(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.te2.core.model.EventAction$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventAction$1:  com.mobileforming.te2.core.model.EventAction[]  newArray(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAndShows(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$2:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  markMessageAsExpired(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getExpiredMessageIds(android.content.Context)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$16:  void  <clinit>()	com.mobileforming.te2.core.model.MessageActionState:  com.mobileforming.te2.core.model.MessageActionState[]  values()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.model.BeaconInfo:  int  getMinor()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  shutdown()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.android.te2.tracker.location.LocationRepository:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.LocationRepository:  void  initLocationLiveData(android.content.Context)
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  thumbnail(float)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  thumbnail(float)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.util.Date  getDateOfLog()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$LocalLinearTransformStrategy  getLocalLinearTransformStrategy()
com.mobileforming.te2.core.model.Schedule:  void  <clinit>()	com.mobileforming.te2.core.model.Schedule$1:  void  <init>()
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconMonitoringStopped(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.te2.core.dialog.alert.AlertDialogViewHolder:  void  <init>(android.view.View)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  findPositionUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.model.LatLon:  double  getLat()
com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.functions.Func1  linearBackoff(int,long)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$LinearRetryWithDelay:  void  <init>(int,long)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()	com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig:  java.lang.String  toString()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  updateBadgeCounter(android.view.MenuItem)	com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  updateMenuItemBadge(android.view.MenuItem)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  centerCrop()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  centerCrop()
com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.util.List)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackEvent(com.mobileforming.te2.core.model.TrackerEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$2:  void  onClick(android.view.View)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$OnClickListener  access$000(com.mobileforming.te2.core.dialog.alert.AlertDialogFragment)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  void  <init>()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setRefreshEnabled(boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  fitCenter()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  fitCenter()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  long  getEventId()
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  showOfferDetail(com.mobileforming.android.te2.messages.offers.detail.BaseOfferDetailViewModel)	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy  build()	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$1)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  initCustomSpinner(android.view.View)
com.mobileforming.te2.core.model.Icon$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Icon$1:  com.mobileforming.te2.core.model.Icon  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.model.InfoLinkData:  java.lang.String  getUrl()
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(android.content.Intent)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setBoundaryTransition(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  populateUI(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Poi:  java.util.List  getMenus()
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)	com.mobileforming.te2.core.util.WebArrayList:  long  getTtl()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  <init>()
com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEvent(java.lang.String,int,int,java.lang.String,double,double)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  hideLoader()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$8:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  retrofit2.Retrofit$Builder  build(java.lang.String)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  void  initializeClientIfNull()
com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayload(java.lang.String,java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.Fence:  java.lang.String  getId()
com.mobileforming.te2.core.model.openinghours.Override:  boolean  isCloseTimeAfterMidnight()	com.mobileforming.te2.core.model.openinghours.Override:  int  getCloseHour()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$200(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  processOnVenueDataReady()	com.mobileforming.android.te2.maps.sdk.BeaconConfig:  boolean  uuidForVenueEntryEnabled()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  float  getDestinationY()
com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.events.view.FilterTabLayout:  void  <init>(android.content.Context)	com.mobileforming.android.te2.events.view.FilterTabLayout$1:  void  <init>(com.mobileforming.android.te2.events.view.FilterTabLayout)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Icon  getMarkerIcon()
com.mobileforming.te2.core.auth.model.error.AccountLockedException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheModules(java.lang.String,java.util.List,long)	com.mobileforming.te2.core.caching.CacheManager:  java.lang.Object  retrieve(java.lang.String,long)
com.mobileforming.android.te2.tracker.TrackerModule:  void  postMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  java.lang.String  getMapId()
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  double  access$200(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$Param:  java.util.List  getPositionMarkers()
com.mobileforming.te2.core.network.AutoValue_RequestData:  java.lang.String  toString()	com.mobileforming.te2.core.network.$AutoValue_RequestData:  java.lang.String  baseUrl()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCategorySelected(com.mobileforming.te2.core.model.Category)	com.mobileforming.te2.core.model.Category:  java.lang.String  getLabel()
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  long  access$700(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.maps.view.CustomTagView:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$800(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showMapView(boolean)
com.mobileforming.te2.core.network.AutoValue_RequestData:  java.lang.String  toString()	com.mobileforming.te2.core.network.$AutoValue_RequestData:  java.lang.String  encodedCredentials()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.events.EventsModule:  void  registerModuleListener(android.app.Application,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.tracker.TrackerModule$4:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$4:  void  onChanged(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postBeaconEvent(com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  postBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setBoundaryTransition(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.Fence$State:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.Fence$State:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  void  monitorNewVenue(com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.te2.core.form.FormTextInputLayout:  void  <init>(android.content.Context)	com.mobileforming.te2.core.form.FormTextInputLayout:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  java.lang.Object  apply(java.lang.Object)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  android.arch.lifecycle.LiveData  apply(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.entity.LocationPermissionsEntity:  long  getEventId()
com.mobileforming.android.te2.grupo.NavigationActivity$1$1$1:  void  showDialog()	com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  access$200(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Week  getDayOfWeek()
com.mobileforming.te2.core.model.Image:  void  <clinit>()	com.mobileforming.te2.core.model.Image$1:  void  <init>()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getBaseUrl()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  java.util.Set  getChangeOfDayIndicesSet()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleUri(android.net.Uri,android.os.Bundle)
com.mobileforming.te2.core.model.EventVenue$1:  com.mobileforming.te2.core.model.EventVenue  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventVenue:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.model.Alarm:  java.util.Date  getStartTimeAsDate()	com.mobileforming.te2.core.model.Time:  void  setTimeOnCalendar(java.util.Calendar,com.mobileforming.te2.core.model.Time)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.tracker.TrackerModule:  void  logRequestPermissionsData()	com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.te2.core.db.AppDatabase  getAppDatabase()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  onMapMoved(boolean,float,android.graphics.PointF)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  getCurrentVenue()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$4:  void  onSuccess()	com.mobileforming.te2.core.util.ImageUtils:  android.graphics.Bitmap  roundCornerImage(android.graphics.Bitmap,int)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setLocationUpdateFrequencyDistance(float)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.te2.core.model.ProductStatus$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ProductStatus$1:  com.mobileforming.te2.core.model.ProductStatus  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  java.util.Date  getDateOfLog()
com.mobileforming.te2.core.model.HoursLink:  java.lang.String  getName()	com.mobileforming.te2.core.model.Link:  java.lang.String  getName()
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  rx.Observable  execute(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  processOnVenueDataReady()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.BeaconConfig  getBeaconConfig()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onStop()	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  hideLoading()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.te2.core.model.openinghours.Day:  java.lang.String  getOpen()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  call(java.lang.Long)
com.mobileforming.android.te2.maps.MapsModuleFragment$3$1:  void  run()	com.mobileforming.android.te2.maps.MapsModuleFragment:  int  access$400(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.google.android.gms.tasks.Task  fetchCategories()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  void  <init>()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$5:  void  run()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  access$000(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onLaunchWebView(com.mobileforming.te2.core.model.Product,boolean)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showWebView(java.lang.String,java.lang.String,boolean,boolean)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToPosition(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.te2.core.db.AppDatabase_Impl:  android.arch.persistence.db.SupportSQLiteOpenHelper  createOpenHelper(android.arch.persistence.room.DatabaseConfiguration)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase_Impl,int)
com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomTextView:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.model.BeaconInfo:  int  getMinor()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  fallback(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  fallback(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  setBaseUrl(java.lang.String)	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()
com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofenceDwell(java.lang.String,double,double,float)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.form.FormTextInputLayout:  boolean  isRequired()	com.mobileforming.te2.core.form.FormTextInputLayout:  com.mobileforming.te2.core.form.FormEditText  getEditText()
com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()	com.mobileforming.te2.core.form.FormViewParentHolder:  void  <init>(android.view.ViewGroup)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)	com.mobileforming.te2.core.view.Te2DatePickerDialog:  void  setOnDateSetListener(com.mobileforming.te2.core.view.Te2DatePickerDialog$Te2DatePickerDialogListener)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadPoiImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getThumbnailImageUrl()
com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  headerData(java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  addCredential(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  addCredential(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  addCredential(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.te2.core.caching.GsonFileCache:  com.mobileforming.te2.core.caching.PersistenceObject  retrieve(java.lang.String)	com.mobileforming.te2.core.caching.GsonFileCache:  java.lang.String  convertToFileName(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  initUI(android.view.View)	com.mobileforming.android.te2.maps.util.WaitTimeUtils:  boolean  isLocationTurnedOn(android.content.Context)
com.mobileforming.te2.core.AnalyticsEvent:  com.mobileforming.te2.core.AnalyticsEvent  create(java.lang.String,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsPayload)	com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  void  <init>(java.lang.String,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsPayload)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  boolean  isMapCached(java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapInfo)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)	com.mobileforming.android.te2.maps.sdk.GraphicalMap:  void  <init>(int[][],com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$000(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothAvailable()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment)
com.mobileforming.android.te2.maps.sdk.Requests$1:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.DataRequest$Method:  com.mobileforming.android.te2.maps.sdk.DataRequest$Method[]  values()
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupListView()	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  encodeFormat(android.graphics.Bitmap$CompressFormat)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  encodeFormat(android.graphics.Bitmap$CompressFormat)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  onItemClick(android.view.View,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.te2.core.model.Info  getLinkItem(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  okhttp3.Interceptor  getInterceptor()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  long  getUid()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  format(com.bumptech.glide.load.DecodeFormat)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  format(com.bumptech.glide.load.DecodeFormat)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)
com.mobileforming.android.te2.messages.MessagesDetailFragment$3:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getAction()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  searchSelected()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  callToActionClicked(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Tag)	com.mobileforming.te2.core.model.Action:  java.lang.String  getModule()
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  removeLocation(com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  java.lang.String  getKey()
com.mobileforming.android.te2.events.EventsModuleFragment:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationConfig$DefaultLocationConfig:  void  <init>()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()
com.mobileforming.android.te2.tracker.location.PositionTracker$CompassBearingListener:  void  onSensorChanged(android.hardware.SensorEvent)	com.mobileforming.android.te2.tracker.location.PositionTracker:  java.util.ArrayList  access$700(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.te2.core.model.Position  convertMapGridToPosition(com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  int  getY()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  forceLocationUpdate()	com.mobileforming.android.te2.tracker.location.PositionTracker:  double  getLastKnownLatitude()
com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl$1:  void  run()	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  downsampleOf(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  boolean  access$202(com.mobileforming.android.te2.tracker.location.GeofenceTracker,boolean)
com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.Editable  append(char)	com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(char)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$27:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapManager:  com.mobileforming.te2.core.model.Position  getMapPosition(double,double)
com.mobileforming.android.te2.maps.util.ImageUtils$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.util.ImageUtils$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getColorvisionVersion()
com.mobileforming.te2.core.model.Status$1:  com.mobileforming.te2.core.model.Status  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Status:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.te2.core.view.AnalyticsEditable:  java.lang.Appendable  append(java.lang.CharSequence)	com.mobileforming.te2.core.view.AnalyticsEditable:  android.text.SpannableStringBuilder  append(java.lang.CharSequence)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  extractAndDisplayLandmarkPoi(java.util.List)	com.mobileforming.android.te2.maps.poi.MapPoiWrapperList:  java.util.ArrayList  getLandmarkPoiList()
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.EventWrapper:  void  <init>(com.mobileforming.te2.core.model.Event,com.mobileforming.te2.core.model.EventTime)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$ExponentialRetryWithDelay:  void  <init>(int,long)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  void  <init>(int,long)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  populateScrollView()	com.mobileforming.te2.core.model.InfoLink:  java.util.List  getInfos()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  onData(java.util.List)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setNotificationDrawableId(int)	com.mobileforming.android.te2.tracker.TrackerConfig:  int  access$1702(com.mobileforming.android.te2.tracker.TrackerConfig,int)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  access$102(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService,boolean)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueDataManager:  com.mobileforming.android.te2.venue.VenueCache  access$000(com.mobileforming.android.te2.venue.VenueDataManager)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository:  void  logBeaconEnter(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.model.BeaconInfo,boolean)	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  android.content.Context  access$200(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setDrawableId(int)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  com.mobileforming.te2.core.caching.CacheConfiguration  getCacheConfiguration()
com.mobileforming.te2.core.api.BaseWebService:  retrofit2.Callback  convertToRetrofitCallback(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.BaseWebService$2:  void  <init>(com.mobileforming.te2.core.api.BaseWebService,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)	com.mobileforming.te2.core.view.CustomCheckBox:  android.widget.CompoundButton$OnCheckedChangeListener  access$700(com.mobileforming.te2.core.view.CustomCheckBox)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$7:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$7:  void  onData(java.util.List)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener,com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  <init>()
com.mobileforming.android.te2.events.fragment.EventsListFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  int  access$000(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment$10$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleFragment$10$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.Throwable,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)	com.mobileforming.android.te2.maps.sdk.LocationConfig:  float  getLocationUpdateAccuracyThreshold()
com.mobileforming.android.te2.events.util.DateStringUtil:  int  getNumberOfDaysInYear(int)	com.mobileforming.android.te2.events.util.DateStringUtil:  boolean  isLeapYear(int)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  populateScrollView(android.view.ViewGroup)	com.mobileforming.te2.core.model.Link:  java.lang.String  getDescription()
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingError(java.lang.String)	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isUiVisible()
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  shareLoggerEvents(java.util.List)	com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGeoFenceChanged(java.lang.String,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onPause()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  rx.Observable  call(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.LocationServerAPI  access$300(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.te2.core.api.BaseWebService:  java.lang.Throwable  onEmptyResponseErrorBody()	com.mobileforming.te2.core.api.GeneralResponseException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$2:  void  <init>(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter,com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.grupo.NavigationActivity$3:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.grupo.DiningFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.grupo.DiningFragment$1:  void  <init>(com.mobileforming.android.te2.grupo.DiningFragment)
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.android.te2.maps.sdk.model.MapGrid  convertPositionToMapGrid(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.Position:  double  getY()
com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.mobileforming.android.te2.maps.poi.PoiStatusLiveData  getPoiStatusLiveData()	com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.mobileforming.android.te2.maps.poi.PoiStatusLiveData  getPoiStatusLiveData(int)
com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.Event  getEvent()
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupMainTabLayout()
com.mobileforming.te2.core.model.Event$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Event$1:  com.mobileforming.te2.core.model.Event  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.TileView:  void  init()
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2$2:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  poiListIsReady()
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onResume()	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isRedeemingOffer()
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  uploadStatus(java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindHeaderViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$HeaderViewHolder,int)
com.mobileforming.android.te2.maps.MapsModule:  void  registerModuleListener(android.app.Application,com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.MapsModule  getInstance(android.app.Application)
com.mobileforming.te2.core.model.LocationTechnology:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.LocationTechnologyThreshold:  com.mobileforming.te2.core.model.LocationTechnologyThreshold  valueOf(java.lang.String)
com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.content.Context,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String)	com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.content.Context,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String,java.lang.Object)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.tracker.TrackerModule:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getCurrentVenueIdLiveData()	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.te2.core.model.TestDevice:  void  setAppUserId(java.lang.String)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getPOIStatus(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$8:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  <init>()	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)
com.mobileforming.te2.core.view.CustomButton:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository:  void  logRequestPermissionsData(com.mobileforming.te2.core.db.AppDatabase,android.content.Context)	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getHeaderImageUrl()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendPOIExit(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.te2.core.view.PaymentImageView:  void  setPaymentType(com.mobileforming.te2.core.model.PaymentType)	com.mobileforming.te2.core.view.PaymentImageView:  com.mobileforming.te2.core.model.PaymentType  getPaymentType()
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  addIfNotFound(com.mobileforming.android.te2.maps.sdk.model.MapGrid,float)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  java.lang.String  getKey()
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  com.mobileforming.android.te2.infos.configuration.AboutInfoConfig  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.PhoneLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.PhoneLink$1:  com.mobileforming.te2.core.model.PhoneLink[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,android.widget.ProgressBar)	com.mobileforming.android.te2.maps.util.ImageUtils$3:  void  <init>(android.widget.ProgressBar)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  java.lang.String  access$000(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  double  access$200(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  updateChangeOfDayIndicesSet()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  forceLocationUpdate()	com.mobileforming.android.te2.tracker.location.PositionTracker:  double  getLastLongitude()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.model.InfoLinkData:  java.lang.String  getId()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackCouponAction(com.mobileforming.te2.core.model.CouponActionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$13:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.sdk.HeadingProcessor$CachedArrays:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingProcessor$1)	com.mobileforming.android.te2.maps.sdk.HeadingProcessor$CachedArrays:  void  <init>()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)	com.mobileforming.te2.core.model.BeaconDevice:  void  <init>()
com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)	com.mobileforming.android.te2.tracker.TrackerModule$2:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)
com.mobileforming.te2.core.model.PurchaseDetail:  void  <clinit>()	com.mobileforming.te2.core.model.PurchaseDetail$1:  void  <init>()
com.mobileforming.te2.core.model.User:  void  <clinit>()	com.mobileforming.te2.core.model.User$1:  void  <init>()
com.mobileforming.te2.core.auth.AuthManager:  void  accountCreated(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.cache.AuthTokenCache:  void  storeRefreshToken(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  access$200(com.mobileforming.android.te2.maps.fragment.PoiListFragment,boolean,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  updateWaitTimesMessage(boolean,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.Poi:  java.lang.String  getName()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  com.mobileforming.te2.core.db.AppDatabase  getAppDb()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.te2.core.model.Detail$1:  com.mobileforming.te2.core.model.Detail  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Detail:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  com.mobileforming.te2.core.model.EventFilter  getItem(int)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerViewModel:  android.arch.lifecycle.LiveData  getCurrentLocationPermissions()
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  int  compare(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  float  getfValue()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getRegistrationCode()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  java.lang.String  getMapVersion()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$400(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadCategoriesByModuleId(com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.openinghours.Override:  com.mobileforming.te2.core.model.openinghours.Day  getDay()	com.mobileforming.te2.core.model.openinghours.Day:  void  setOpen(java.lang.String)
com.mobileforming.android.te2.messages.view.BarcodeView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendGeofenceEntry(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationEvent(android.location.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  <init>(java.lang.String)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  com.mobileforming.te2.core.entity.LocationHistoryEntity  compute()
com.mobileforming.android.te2.grupo.RefApplication:  void  venueExited(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  setInVenue(boolean)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  ensureDeviceRegistration(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  <init>(android.content.Context,com.mobileforming.te2.core.network.BaseModuleConfig)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$1702(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setForegroundScanPeriod(long)	com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$1902(com.mobileforming.android.te2.tracker.TrackerConfig,long)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,boolean)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  setupComplete(boolean)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  float  getDeviceLatitude()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAfterStartDate(java.util.Date,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$5:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback,java.util.Date)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  parseFromCache(com.mobileforming.android.te2.maps.sdk.model.CacheItem)	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  java.lang.String  getContent()
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  setSimpleTabSelectedListener(com.mobileforming.android.te2.maps.view.SubCategoryTabLayout$SimpleTabSelectedListener)
com.mobileforming.te2.core.auth.AuthManager$5:  void  run()	com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getProvider()
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerViewModel:  void  setInteractor(com.mobileforming.android.te2.infos.logger.LoggerInteractor)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getDefaultMapModeConfig()	com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig:  void  <init>(java.lang.String,float,int,int)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setBssid(java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig  access$100(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  access$200(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayload(java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()	com.mobileforming.android.te2.tracker.TrackerModule:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getCurrentVenueIdLiveData()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  showExpirationMessage(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO  loggerLocationPermissionsDAO()
com.mobileforming.android.te2.grupo.UserFragment:  void  onResume()	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  access$300(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()
com.mobileforming.te2.core.form.FormData:  boolean  getBoolean(int)	com.mobileforming.te2.core.form.FormData:  java.lang.String  getString(int)
com.mobileforming.android.te2.venue.VenueModule$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule:  void  access$000(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.model.EventFilter$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.EventFilter$1:  com.mobileforming.te2.core.model.EventFilter[]  newArray(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setWalkingPathGenerated(boolean)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  initializeCacheManagers()
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  setBadgeCount(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.lang.String  getFilter()
com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getMapModeLocationUpdates()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setType(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6,java.lang.Throwable)
com.mobileforming.android.te2.grupo.RefApplication:  void  <clinit>()	com.mobileforming.te2.core.util.Logger:  java.lang.String  getTag(java.lang.Class)
com.mobileforming.te2.core.model.Time:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.Time:  void  <init>(java.util.Date)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  showExpirationMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.DateTimeUtil:  boolean  isMessageExpiring(java.util.Date,long)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$600(com.mobileforming.android.te2.tracker.location.LocationTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startBeaconTracker()
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ListItemWrapper:  java.lang.CharSequence  toSpannableString()	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.lang.String  getData()
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout$1:  void  <init>(com.mobileforming.android.te2.maps.view.SubCategoryTabLayout)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  sizeMultiplierOf(float)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.te2.core.model.openinghours.Override:  com.mobileforming.te2.core.model.openinghours.Day  getDay()	com.mobileforming.te2.core.model.openinghours.Day:  void  setStatus(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$1:  void  <init>(com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()	com.mobileforming.android.te2.events.EventsModule:  void  registerEventsDataProvider(android.app.Application,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$700(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.LayoutInflater)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  com.mobileforming.te2.core.entity.BeaconsEntity  compute()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder,int)	com.mobileforming.te2.core.model.EventWrapper:  com.mobileforming.te2.core.model.EventTime  getEventTime()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getLocalDefaultMapData(java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  buildMapSession(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.form.FormEditTextInputManager:  void  afterTextChanged(android.text.Editable)	com.mobileforming.te2.core.form.FormEditTextInputManager:  void  handleError()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  double  getLongitud()
com.mobileforming.te2.core.auth.model.error.IncorrectCredentialsException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  void  <init>(java.lang.String,java.lang.String)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processNextTransaction()
com.mobileforming.te2.core.model.HoursLink:  void  <clinit>()	com.mobileforming.te2.core.model.HoursLink$1:  void  <init>()
com.mobileforming.te2.core.model.EventFilter$1:  com.mobileforming.te2.core.model.EventFilter  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventFilter:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenuePayload:  java.lang.String  getId()
com.mobileforming.te2.core.form.FormSubmitButton:  void  init()	com.mobileforming.te2.core.form.FormSubmitButton$1:  void  <init>(com.mobileforming.te2.core.form.FormSubmitButton)
com.mobileforming.te2.core.model.Image$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Image$1:  com.mobileforming.te2.core.model.Image[]  newArray(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(java.lang.Object)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  setSimpleTabSelectedListener(com.mobileforming.android.te2.maps.view.SubCategoryTabLayout$SimpleTabSelectedListener)
com.mobileforming.android.te2.messages.MessagesModuleActivity:  void  <init>()	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  com.mobileforming.android.te2.maps.sdk.model.Fence$Type  access$100(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.Center:  double  getLatitude()
com.mobileforming.android.te2.tracker.lite.TrackerLite:  com.mobileforming.te2.core.model.BeaconEvent  createBeaconEvent(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.te2.core.model.BeaconDevice:  void  <init>()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction  access$100(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.te2.core.model.openinghours.InfoOpeningHoursItem:  void  <init>()	com.mobileforming.te2.core.model.InfoDetailItem:  void  <init>()
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.te2.core.model.Poi:  java.util.List  getTags()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  java.lang.String  getMapVersion()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getPushDeviceToken()
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  java.lang.String  getPushToken()	com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getPushToken()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.GeofenceEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.te2.core.model.ExternalLink$1:  com.mobileforming.te2.core.model.ExternalLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ExternalLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3$1:  void  run()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.grupo.user.UserFragmentViewModel:  void  <init>()	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository:  void  <init>()
com.mobileforming.te2.core.model.takeover.TakeoverTheme:  com.mobileforming.te2.core.model.takeover.TakeoverPeriod  findCurrentTakeoverPeriod()	com.mobileforming.te2.core.model.takeover.TakeoverTheme:  java.util.List  getSchedule()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$100(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothUnavailable()
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  boolean  isWithinSchedule(java.util.Date)	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  java.util.Date  getStartDate()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setVersion(java.lang.String)
com.mobileforming.te2.core.model.Info$1:  com.mobileforming.te2.core.model.Info  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Info:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  setVenueId(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.model.BeaconInfo:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  long  access$900(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.infos.logger.LoggerActivity$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.infos.logger.LoggerActivity$2:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isBluetoothOn()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isBluetoothOn()
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingStarted()
com.mobileforming.android.te2.maps.sdk.model.Image:  void  <init>()	com.mobileforming.android.te2.maps.sdk.model.Image:  void  <init>(int,int,com.mobileforming.android.te2.maps.sdk.model.Image$Resolution,java.lang.String)
com.mobileforming.android.te2.messages.MessagesModuleActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.messages.BaseMessagesModuleActivity:  void  setupToolbar()
com.mobileforming.te2.core.model.Detail$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Detail$1:  com.mobileforming.te2.core.model.Detail[]  newArray(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.MessageLinkTappedEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.BaseWebService$1:  io.reactivex.SingleSource  apply(io.reactivex.Single)	com.mobileforming.te2.core.api.BaseWebService$1$1:  void  <init>(com.mobileforming.te2.core.api.BaseWebService$1)
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setUsername(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$602(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.maps.view.MapView:  void  onDraw(android.graphics.Canvas)	com.mobileforming.android.te2.maps.view.MapView:  boolean  isMapReady()
com.mobileforming.te2.core.model.Detail:  void  <clinit>()	com.mobileforming.te2.core.model.Detail$1:  void  <init>()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5$1:  void  onMapReady()	com.mobileforming.android.te2.maps.view.MapView:  void  showWalkingPath(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onVenueDataReady()
com.mobileforming.te2.core.model.Entry$1:  com.mobileforming.te2.core.model.Entry  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Entry:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onGeofenceEntered(java.lang.String,double,double,float)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVenueId()
com.mobileforming.te2.core.dialog.FullScreenDialogFragment:  android.app.Dialog  onCreateDialog(android.os.Bundle)	com.mobileforming.te2.core.dialog.FullScreenDialogFragment$1:  void  <init>(com.mobileforming.te2.core.dialog.FullScreenDialogFragment,android.content.Context)
com.mobileforming.te2.core.view.RibbonView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.RibbonView:  void  init(android.content.Context)
com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationOutsideVenue(java.lang.String,double,double,float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationOutsideVenue(double,double,float,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setBackgroundBetweenScanPeriod(long)
com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToPositionZoom(com.mobileforming.te2.core.model.Position,boolean,float)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$10:  void  onNext(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$800(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$2:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  fetchMapImagePreviewUri(java.lang.String)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppUserId(java.lang.String)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createSubInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.model.Info:  java.lang.String  getBody()
com.mobileforming.android.te2.tracker.TrackerModule$3:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.location.LocationState)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.device.DeviceInformation:  void  setVersion(java.lang.String)
com.mobileforming.te2.core.ModuleConfig:  void  copyInto(com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.te2.core.model.openinghours.Day:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.Day:  boolean  isCloseTimeAfterMidnight()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$31:  void  run()	com.mobileforming.android.te2.maps.sdk.exception.DataException:  com.mobileforming.android.te2.maps.sdk.exception.DataException  wrapException(java.lang.Throwable)
com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$202(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5$1:  void  run()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$500(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.List)
com.mobileforming.te2.core.model.ModifierSelection:  boolean  equals(java.lang.Object)	com.mobileforming.te2.core.model.ModifierSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getVenueId()
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getExpirationText()
com.mobileforming.te2.core.model.LocationTechnologyType:  void  <clinit>()	com.mobileforming.te2.core.model.LocationTechnologyType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.util.TimeZone)
com.mobileforming.android.te2.grupo.user.VenueRepository:  android.arch.lifecycle.MutableLiveData  getVenueLiveDataFromServer()	com.mobileforming.android.te2.grupo.user.VenueRepository$1:  void  <init>(com.mobileforming.android.te2.grupo.user.VenueRepository,android.arch.lifecycle.MutableLiveData)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  void  setMapVersion(java.lang.String)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getLegalSectionTitleText()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment  newInstance(com.mobileforming.te2.core.model.InfoLink)
com.mobileforming.te2.core.model.PlatformUrl$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PlatformUrl$1:  com.mobileforming.te2.core.model.PlatformUrl  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.EventsModuleFragment:  com.mobileforming.android.te2.events.EventsModuleFragment  newInstance()	com.mobileforming.android.te2.events.EventsModuleFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.DataRequest$Method:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.DataRequest$Method:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.model.openinghours.Day$Builder:  com.mobileforming.te2.core.model.openinghours.Day  build()	com.mobileforming.te2.core.model.openinghours.Day:  void  setClose(java.lang.String)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Poi:  java.util.List  getTags()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  forceLocationUpdate()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendVenueExit(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.Event:  void  updateEventTimesCategories()	com.mobileforming.te2.core.model.Event:  com.mobileforming.te2.core.model.Schedule  getSchedule()
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.entity.VenueMonitorEntity:  long  getUid()
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getId()
com.mobileforming.android.te2.messages.OffersListFragment:  void  onResume()	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.MessagesModuleAnalytics  getMessagesModuleAnalyticsListener()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.entity.BeaconsEntity:  java.lang.String  getProximityUUID()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initBeaconTracker(android.content.Context)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  executeRequest(com.mobileforming.android.te2.maps.sdk.DataRequest,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  subscribeTo(rx.Observable,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.PositionTracker:  float  getLastAccuracy()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.util.TagUtil:  java.util.List  buildTagViews(android.content.Context,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.util.List)	com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  void  <init>()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  <clinit>()	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showPermission()
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Icon:  java.lang.String  getId()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1200(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  postNotifyLocationListeners(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  isLocationAccessible()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setDeviceX(float)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  getShowsByVenueIdAndDateStart(java.lang.String,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.events.EventRetrofitWebService$WebArrayListCallback:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.model.VenueLocation:  int  hashCode()	com.mobileforming.android.te2.maps.sdk.model.Center:  int  hashCode()
com.mobileforming.te2.core.model.Alarm:  java.util.Date  getStartTimeAsDate()	com.mobileforming.te2.core.model.Alarm:  com.mobileforming.te2.core.model.Time  getStartTime()
com.mobileforming.te2.core.model.ExternalLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ExternalLink$1:  com.mobileforming.te2.core.model.ExternalLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showProductView(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.VenueMonitorDAO  venueMonitorDAO()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setVenueId(java.lang.String)
com.mobileforming.te2.core.model.Action$1:  com.mobileforming.te2.core.model.Action  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Action:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchAppConfig(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getId()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  startTracker(android.content.Context,java.lang.String)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getDescriptionText()	com.mobileforming.te2.core.model.Message:  java.lang.String  getDescription()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  updateUI(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$2:  void  <init>(boolean,com.mobileforming.te2.core.model.openinghours.Day,io.te2.defaults.takeover.TakeoverListener,com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setTimeText(android.widget.TextView)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,android.widget.TextView)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  startTracker(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postAppNotificationState()
com.mobileforming.android.te2.maps.sdk.NetworkRetryService:  void  scheduleUrgent(android.content.Context,java.lang.String)	com.mobileforming.android.te2.maps.sdk.NetworkRetryService:  void  scheduleOneOffTask(android.content.Context,java.lang.String,long)
com.mobileforming.te2.core.model.Image$1:  com.mobileforming.te2.core.model.Image  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Image:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.view.MapView:  void  createDrawables(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  android.graphics.Bitmap  getBitmap()
com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.net.URL)	com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.net.URL)
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo:  void  setMapVersion(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showDiningDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.NavigationActivity:  android.support.design.widget.BottomNavigationView  getBottomNavigationView()
com.mobileforming.android.te2.venue.VenueModule:  void  access$000(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule:  void  setCurrentVenue(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.model.MapGrid:  void  <init>(int,int)	com.mobileforming.android.te2.maps.sdk.model.MapGrid:  void  <init>(int,int,float)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createPostRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.RequestFactory:  java.lang.String  buildUrl(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)
com.mobileforming.te2.core.model.BeaconInfo$1:  com.mobileforming.te2.core.model.BeaconInfo  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.BeaconInfo:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$PositionMarkerWithDistance[]  findNearestMarkersWithDistance(com.mobileforming.android.te2.maps.sdk.model.LatLon)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  run()	com.mobileforming.te2.core.model.Poi:  java.lang.String  getName()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.PositionTracker:  double  getLastLongitude()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LocationHistoryDAO  locationDAO()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadProductImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.lang.String  getThumbnailImageUrl()
com.mobileforming.te2.core.model.EventVenue:  void  <clinit>()	com.mobileforming.te2.core.model.EventVenue$1:  void  <init>()
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  download(java.lang.Object)	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  download(java.lang.Object)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.tracker.TrackerModule  getTrackerModule()
com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.Object)	com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.String)
com.mobileforming.te2.core.model.NetworkAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
com.mobileforming.te2.core.model.WebLink:  void  writeToParcel(android.os.Parcel,int)	com.mobileforming.te2.core.model.Link:  void  writeToParcel(android.os.Parcel,int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.te2.core.view.TileView:  void  init()	com.mobileforming.te2.core.view.TileView:  int  getBackgroundResource()
com.mobileforming.te2.core.model.Alarm$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Alarm$1:  com.mobileforming.te2.core.model.Alarm[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdateEvent(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$600(com.mobileforming.android.te2.maps.MapsModuleFragment,int)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setParentFilter(int)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder,int)	com.mobileforming.te2.core.model.Info:  java.lang.String  getBody()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.te2.core.network.BaseModuleConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setNetworkStatus(com.mobileforming.te2.core.model.NetworkStatus)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.util.List)	com.mobileforming.te2.core.caching.CacheUtils:  long  extractTtl(java.util.Map)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  void  insertLogBeacon(com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$900(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueGeofence  build()	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$1)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$300(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackNetworkState()
com.mobileforming.android.te2.messages.MessagesDetailFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.MessageAction:  java.lang.String  getTarget()
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1300(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.String)	com.mobileforming.te2.core.auth.AuthManager$4$1:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$4,java.lang.String)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  access$000(com.mobileforming.te2.core.api.messages.MessagesRetrofitService,okhttp3.Headers,java.util.Map)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  extractHeader(okhttp3.Headers,java.util.Map)
com.mobileforming.te2.core.model.Value:  void  <clinit>()	com.mobileforming.te2.core.model.Value$1:  void  <init>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  access$300(com.mobileforming.android.te2.messages.FeaturedMessageFragment)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  hideLoading()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5:  void  run()	com.mobileforming.android.te2.maps.view.MapView:  boolean  isMapReady()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showVenueSwitcher()	com.mobileforming.android.te2.grupo.NavigationActivity$15:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  java.lang.String  getAppState()
com.mobileforming.te2.core.model.InfoLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Link:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onLocationClick(com.mobileforming.te2.core.model.EventVenue)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showMaps(java.lang.String,boolean,java.lang.String)
com.mobileforming.android.te2.events.EventsActivity:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchCurrentVenueMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  rx.Observable  call(rx.Observable)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)
com.mobileforming.android.te2.events.EventsModule:  void  launchModuleFragment(android.support.v7.app.AppCompatActivity,int)	com.mobileforming.android.te2.events.EventsModuleFragment:  com.mobileforming.android.te2.events.EventsModuleFragment  newInstance(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationUpdated(double,double,float)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  downloadCategories(com.mobileforming.android.te2.maps.sdk.MapDecision)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  updateHeaderIndicesSet()
com.mobileforming.te2.core.model.Product:  void  <clinit>()	com.mobileforming.te2.core.model.Product$1:  void  <init>()
com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueDataManager:  int  access$208(com.mobileforming.android.te2.venue.VenueDataManager)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$16:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$800(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$2:  void  onClick(android.view.View)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.lifecycle.LiveData  getLastPermissionRecorded()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackLocationUpdate(com.mobileforming.te2.core.model.RegionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$7:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$2:  void  onFailure(java.lang.Exception)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  access$000(android.content.Context)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.view.MapView:  void  setOnMapMovedListener(com.mobileforming.android.te2.maps.view.MapView$OnMapMovedListener)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  java.lang.String  getAppBuildNumber()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6$1:  void  run()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onError(java.lang.Throwable)	com.mobileforming.te2.core.model.EventVenue:  void  setId(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.te2.core.model.NetworkAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)
com.mobileforming.android.te2.maps.view.CategoryTabView:  void  <init>(android.content.Context,android.graphics.drawable.Drawable)	com.mobileforming.android.te2.maps.view.CategoryTabView:  void  init(android.graphics.drawable.Drawable)
com.mobileforming.android.te2.grupo.RefApplication:  void  onActivityDestroyed(android.app.Activity)	com.mobileforming.te2.core.db.AppDatabase:  void  destroyInstance()
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  refreshWaitTimes()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiStatus(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.PurchaseDetailLink:  void  <clinit>()	com.mobileforming.te2.core.model.PurchaseDetailLink$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$PositionMarkerWithDistance[]  findNearestMarkersWithPosition(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.util.DateConverter:  java.lang.Long  dateToTimestamp(java.util.Date)
com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus:  void  <clinit>()	com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.grupo.RefApplication:  void  beaconsInRange(java.util.List)	com.mobileforming.te2.core.util.Logger:  void  i(java.lang.String,java.lang.String)
com.mobileforming.te2.core.view.MenuTileView:  android.view.View  inflateAndBindMenuItemView(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)	com.mobileforming.te2.core.view.MenuTileView:  int  getMenuTileItemLayoutId(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)
com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.DiningFragment$2:  void  <init>(com.mobileforming.android.te2.grupo.DiningFragment,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  void  insertLogBeacon(com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  <init>()
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setType(java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  overrideOf(int,int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  override(int,int)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  type(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  cacheEvents(java.util.List,long)	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  java.lang.String  getEventsKey()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onNewIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider  getInfoDataProvider()
com.mobileforming.android.te2.tracker.location.OrientationLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.OrientationLiveData$1:  void  <init>(com.mobileforming.android.te2.tracker.location.OrientationLiveData)
com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingStopped()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setBaseUrl(java.lang.String)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothUnavailable()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  findNextHours(java.util.List,java.util.Date)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.List,java.util.Date)
com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate)	com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.MessagesModule:  boolean  isMessageExpired(com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.form.FormSubmitButton$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.form.FormSubmitButton:  android.view.View$OnClickListener  access$100(com.mobileforming.te2.core.form.FormSubmitButton)
com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.messages.OffersListFragment:  void  access$200(com.mobileforming.android.te2.messages.OffersListFragment)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  boolean  isRelevantHeaderIndex(int)
com.mobileforming.te2.core.model.Menu:  void  <clinit>()	com.mobileforming.te2.core.model.Menu$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  unregisterLocationEventListener(com.mobileforming.android.te2.maps.sdk.LocationEventListener)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  removeLocationEventListener(com.mobileforming.android.te2.maps.sdk.LocationEventListener)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startGeofenceTracker()	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  boolean  isStarted()
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setMapIsReady(boolean)
com.mobileforming.te2.core.model.EventCategory$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventCategory$1:  com.mobileforming.te2.core.model.EventCategory  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  apply(com.bumptech.glide.request.RequestOptions)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  apply(com.bumptech.glide.request.RequestOptions)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onPostResume()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  setupRecyclerView()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository,android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  webRequestFailed(android.content.Context,java.lang.String)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getLocationLiveData()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.tracker.TrackerModule  getTrackerModule()
com.mobileforming.android.te2.grupo.RefApplication:  void  onBeaconMonitoringStarted(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoString(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity$1)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloadError(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])	com.mobileforming.android.te2.messages.view.BarcodeView:  android.graphics.Bitmap  access$100(com.mobileforming.android.te2.messages.view.BarcodeView,java.lang.String,com.google.zxing.BarcodeFormat,int,int)
com.mobileforming.te2.core.model.EventActionType$1:  com.mobileforming.te2.core.model.EventActionType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventActionType:  com.mobileforming.te2.core.model.EventActionType  valueOf(java.lang.String)
com.mobileforming.te2.core.model.Message$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Message$1:  com.mobileforming.te2.core.model.Message[]  newArray(int)
com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$OnFragmentInteractionListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$200(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  storeCategoriesInstance(java.lang.String,java.util.List)
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.Message:  void  <init>()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.MenuTileView:  void  init()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$5:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)
com.mobileforming.te2.core.model.Place$1:  com.mobileforming.te2.core.model.Place  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Place:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  getEventsByVenueId(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.events.EventRetrofitWebService$WebArrayListCallback:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataInfo(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executeGet()	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  rx.Observable  execute(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$6:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$6:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  init()
com.mobileforming.te2.core.auth.AuthManager:  void  access$500(com.mobileforming.te2.core.auth.AuthManager,java.lang.Runnable)	com.mobileforming.te2.core.auth.AuthManager:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.te2.core.network.AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.$AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  checkLocationTurnedOn(android.app.Activity)
com.mobileforming.te2.core.model.Barcode:  void  <clinit>()	com.mobileforming.te2.core.model.Barcode$1:  void  <init>()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationInsideVenue(java.lang.String,double,double,float)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  trackVenueEnterExit(boolean,boolean)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  long  insertLogEvent(com.mobileforming.te2.core.entity.LoggerEventsEntity)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getTimeZone()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setAppId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode:  void  <init>(java.lang.String,int)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getVenueId()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapIdentifier:  void  <init>(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.auth.Te2Authenticator$1:  void  onData(java.lang.Object)	com.mobileforming.te2.core.auth.Te2Authenticator$1:  void  onData(java.lang.String)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  setPresenter(java.lang.Object)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  setPresenter(com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)
com.mobileforming.te2.core.model.LocationAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$15:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueLocation:  com.mobileforming.android.te2.maps.sdk.model.Center  getCenter()
com.mobileforming.te2.core.model.Menu$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Menu$1:  com.mobileforming.te2.core.model.Menu[]  newArray(int)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)	com.mobileforming.te2.core.model.GeofenceInfo:  float  getRadius()
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  java.util.Set  getExpiredMessageIds(android.content.Context)
com.mobileforming.te2.core.model.EventCategory:  void  <clinit>()	com.mobileforming.te2.core.model.EventCategory$1:  void  <init>()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onFailure(java.lang.Throwable)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$3:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1)
com.mobileforming.android.te2.grupo.NavigationActivity$14:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.grupo.NavigationActivity$14:  void  onChanged(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.grupo.RefApplication:  void  onCompassBearingChanged(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onCompassBearingChanged(float)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  void  updateView(android.content.Context,com.mobileforming.te2.core.model.EventFilter,android.widget.ImageButton)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$4:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$4:  void  onData(java.util.List)
com.mobileforming.te2.core.auth.AuthManager$1:  void  run()	com.mobileforming.te2.core.auth.AuthManager:  boolean  access$000(com.mobileforming.te2.core.auth.AuthManager)
com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  java.lang.Object  apply(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  apply(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.util.ImageUtils$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.te2.core.util.ImageUtils$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGeoFenceChanged(java.lang.String,double,double,float,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.model.BeaconInfo:  void  <clinit>()	com.mobileforming.te2.core.model.BeaconInfo$1:  void  <init>()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.entity.VenueMonitorEntity:  java.util.Date  getDateOfLog()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.PathData:  void  setDeviceLatitude(float)
com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Position  getPosition()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Object)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)
com.mobileforming.android.te2.grupo.DiningFragment:  void  onStart()	com.mobileforming.te2.core.model.Category:  void  setLabel(java.lang.String)
com.mobileforming.android.te2.events.view.CustomGridView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.android.te2.events.view.CustomGridView:  void  init()
com.mobileforming.te2.core.model.RegionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,double,float)	com.mobileforming.te2.core.model.TrackerEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  transform(java.lang.Class,com.bumptech.glide.load.Transformation)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  transform(java.lang.Class,com.bumptech.glide.load.Transformation)
com.mobileforming.android.te2.maps.sdk.MapDataManager$22:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$22:  com.mobileforming.android.te2.maps.sdk.model.MapData  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupInfoModule()	com.mobileforming.android.te2.grupo.NavigationActivity$7:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  searchPois(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  sortEvents(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  void  <init>()
com.mobileforming.te2.core.model.Time$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Time$1:  com.mobileforming.te2.core.model.Time[]  newArray(int)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setMajor(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$100(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventSchedule(java.util.List)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener)
com.mobileforming.te2.core.view.CustomEditText:  void  <init>(android.content.Context)	com.mobileforming.te2.core.view.CustomEditText:  void  init(android.content.Context)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.util.List  getCachedModules(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.lang.String  getModulesKey()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  startPositionTracker()	com.mobileforming.android.te2.tracker.location.PositionTracker:  boolean  isStarted()
com.mobileforming.android.te2.maps.sdk.SDKConfig:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig,java.util.List)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  void  setVenueIds(java.util.List)
com.mobileforming.te2.core.model.HoursLink$1:  com.mobileforming.te2.core.model.HoursLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.HoursLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onNetworkAvailabilityUpdated(boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  placeholder(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholder(android.graphics.drawable.Drawable)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getVersion()
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImagePreviewUri()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  com.mobileforming.android.te2.events.dataprovider.EventsModuleInteractor  getEventsModuleInteractor()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$5:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.String)
com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  onChanged(java.util.List)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getId()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  access$500(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,java.util.List)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  fetchWalkingTime(java.util.List)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onResume()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  displayWaitTimes()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setAppUserId(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$902(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  void  setLocationUpdateFrequencyTime(long)
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asDrawable()	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asDrawable()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerHeadingListener(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  registerHeadingListener(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)
com.mobileforming.te2.core.model.TransactionResponse$Permission:  void  <clinit>()	com.mobileforming.te2.core.model.TransactionResponse$Permission:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToCurrentPositionFab(boolean)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  boolean  access$200(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  selectMenuItem(android.os.Bundle)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)	com.mobileforming.te2.core.model.BluetoothAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  void  <init>(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchCategories(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  executeInBackgroundThread(java.lang.Runnable)
com.mobileforming.te2.core.view.CustomEditText:  void  init(android.content.Context)	com.mobileforming.te2.core.util.FontUtils:  android.graphics.Typeface  getNormalTypeFace(android.content.Context)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$200(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  parseCategories(java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.functions.Func1  exponentialBackoff(int,long)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$ExponentialRetryWithDelay:  void  <init>(int,long)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig  build()	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  validateField(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onResume()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  com.mobileforming.android.te2.maps.fragment.PoiDetailFragment  newInstance(com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  <init>()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.te2.core.model.EventActionType:  void  <clinit>()	com.mobileforming.te2.core.model.EventActionType$1:  void  <init>()
com.mobileforming.android.te2.maps.util.WaitTimeUtils:  com.mobileforming.te2.core.model.Poi  updateWaitTimeInformation(com.mobileforming.te2.core.model.Poi,boolean)	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Status  getStatus()
com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asFile()	com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asFile()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImageUri()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  getMapImageUri()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)
com.mobileforming.te2.core.form.FormTextInputLayout:  android.widget.EditText  getEditText()	com.mobileforming.te2.core.form.FormTextInputLayout:  com.mobileforming.te2.core.form.FormEditText  getEditText()
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.te2.core.view.MenuTileView:  void  init()
com.mobileforming.android.te2.messages.offers.OfferViewModel:  void  processMessage(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.util.Date  getExpiresTime()
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  init(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupDining()	com.mobileforming.android.te2.grupo.NavigationActivity$11:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getTimeZone()
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData$1:  void  run()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  access$100(com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData,java.lang.Object)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.entity.GeofenceEntity:  long  getEventId()
com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.grupo.UserFragment$1:  void  <init>(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.grupo.UserFragment:  void  access$800(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment:  void  displaySurveyDescription()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  id(java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$5:  int  compare(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  java.util.Date  getPublishedTime()
com.mobileforming.te2.core.view.CustomCheckBox:  void  initAnalytics(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomCheckBox$1:  void  <init>(com.mobileforming.te2.core.view.CustomCheckBox)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.te2.core.model.TestDevice:  java.util.ArrayList  getLibraryVersions()
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  int  compare(java.lang.Object,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  int  compare(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  onTabSelected(android.support.design.widget.TabLayout$Tab)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setChildTabTitles(int)
com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)	com.mobileforming.te2.core.api.device.DeviceInformation:  java.lang.String  getAppId()
com.mobileforming.android.te2.events.EventsModule:  void  changeVenue(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getImageUri()	com.mobileforming.te2.core.model.Message:  java.lang.String  getHeaderImageUrl()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$800(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$1:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$1:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.messages.MessagesModuleConfig:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getMessagesDataProvider()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  fetchWalkingTime()	com.mobileforming.te2.core.model.Poi:  com.mobileforming.te2.core.model.Position  getPosition()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogo(boolean)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showBackButton(boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getMapDataUrl(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$600(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  setWaitTimeData(java.util.List)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.te2.core.model.Venue:  java.lang.String  getTimeZone()
com.mobileforming.te2.core.model.EmailLink:  void  <clinit>()	com.mobileforming.te2.core.model.EmailLink$1:  void  <init>()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction  access$100(com.mobileforming.android.te2.tracker.location.GeofenceTracker)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  long  access$100(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1$1:  void  onData(java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  set(com.bumptech.glide.load.Option,java.lang.Object)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  set(com.bumptech.glide.load.Option,java.lang.Object)
com.mobileforming.te2.core.view.MenuTileView:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.TileView:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  java.lang.String  getActiveMapVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version:  int  getVersion()
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  <init>(int,int,com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType)	com.mobileforming.te2.core.util.BitmapTransformation:  void  <init>()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment  newInstance(com.mobileforming.te2.core.model.InfoLink,com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  <init>()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()	com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)
com.mobileforming.android.te2.maps.sdk.RequestExecutor$2:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.DataRequest$Method:  com.mobileforming.android.te2.maps.sdk.DataRequest$Method[]  values()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  unregisterHeadingListener()	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  unregisterHeadingListener()
com.mobileforming.android.te2.tracker.TrackerModule$2:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.TrackerModule$2:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call(com.mobileforming.android.te2.maps.sdk.DataItem)
com.mobileforming.te2.core.view.TileView$1:  void  run()	com.mobileforming.te2.core.model.Image:  java.lang.String  getUrl()
com.mobileforming.android.te2.maps.view.MapView:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.view.MapView:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackMessageAction(com.mobileforming.te2.core.model.MessageActionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$11:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.te2.core.model.Payment$Builder$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$Builder$1:  com.mobileforming.te2.core.model.Payment$Builder  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  access$000(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  processQueuedEvents()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  restart()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  start()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  com.mobileforming.te2.core.db.AppDatabase  getAppDb()	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.db.AppDatabase  getAppDB()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$2:  void  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$2:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  android.arch.lifecycle.LiveData  apply(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  getGuestSurveyConfig()
com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setVenueId(java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1102(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)
com.mobileforming.te2.core.view.MenuTileView:  void  addItemAtIndex(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem,int)	com.mobileforming.te2.core.view.MenuTileView:  android.view.View  inflateAndBindMenuItemView(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)
com.mobileforming.android.te2.venue.VenueModule:  void  start(java.util.List,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule:  void  initVenue(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  error(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  error(int)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  showHiddenInfo()
com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  android.arch.persistence.db.SupportSQLiteDatabase  access$302(com.mobileforming.te2.core.db.AppDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.android.te2.events.view.FilterTabLayout:  void  <init>(android.content.Context,android.util.AttributeSet,int)	com.mobileforming.android.te2.events.view.FilterTabLayout$1:  void  <init>(com.mobileforming.android.te2.events.view.FilterTabLayout)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  decodeTypeOf(java.lang.Class)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  decode(java.lang.Class)
com.mobileforming.android.te2.grupo.RefApplication$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.grupo.RefApplication$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])	com.mobileforming.android.te2.messages.view.BarcodeView:  com.google.zxing.BarcodeFormat  access$000(com.mobileforming.android.te2.messages.view.BarcodeView,com.mobileforming.te2.core.model.Barcode$Type)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()	com.mobileforming.android.te2.maps.MapsModuleFragment:  com.mobileforming.android.te2.maps.MapsModuleFragment  newInstance(boolean)
com.mobileforming.te2.core.model.Event$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.Event$1:  com.mobileforming.te2.core.model.Event[]  newArray(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  access$200(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  isHomeFragment()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  clone()	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  clone()
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.android.te2.tracker.util.DateUtil:  java.util.Date  getTodayPlusDays(int)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  areHeadingSensorsAvailable()	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  android.hardware.Sensor  getMagnetometer()
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setLongitud(double)
com.mobileforming.te2.core.auth.AuthManager$4$1:  void  run()	com.mobileforming.te2.core.auth.AuthManager:  java.util.List  access$100(com.mobileforming.te2.core.auth.AuthManager)
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version:  java.lang.String  getPublished()
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  void  <clinit>()	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.Image$Resolution:  void  <clinit>()	com.mobileforming.android.te2.maps.sdk.model.Image$Resolution:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.GeofenceEntity:  void  setBoundaryTransition(java.lang.String)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Poi:  java.lang.String  getName()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  int  getMinor()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  downloadCategories(com.mobileforming.android.te2.maps.sdk.MapDecision)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.util.List  getCachedPois(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.Venue:  java.lang.String  getId()
com.mobileforming.android.te2.infos.InfoModule:  void  changeVenue(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.LocationServerAPI  access$300(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToPosition(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.te2.core.model.Position:  double  getX()
com.mobileforming.te2.core.model.LineItem$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LineItem$1:  com.mobileforming.te2.core.model.LineItem  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  access$000(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  buildMapSession(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  onInactive()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  stopTimer()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchAppConfig(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchConfig(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImageUri(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImageFileName(java.lang.String)
com.mobileforming.te2.core.model.PurchaseDetailLink$1:  com.mobileforming.te2.core.model.PurchaseDetailLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetailLink:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.android.te2.maps.view.MapView:  void  initialize()	com.mobileforming.android.te2.maps.view.MapView:  android.graphics.Bitmap  getBitmap(int)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  storeMapVersion(java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapVersionKey(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showTitleWithColor(java.lang.String,boolean,int)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showBackButton(boolean)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getLegalText()	com.mobileforming.te2.core.model.Message:  java.lang.String  getFinePrint()
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  java.lang.Object  compute()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  com.mobileforming.te2.core.entity.GeofenceEntity  compute()
com.mobileforming.android.te2.maps.sdk.AppConfig:  void  <init>(java.lang.String)	com.mobileforming.android.te2.maps.sdk.AppConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.Bitmap  getDefaultBitMap(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.view.MapView:  float  convertDpToPixel(float,android.content.Context)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  getShowsByVenueId(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.events.EventRetrofitWebService$WebArrayListCallback:  void  <init>(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig)	com.mobileforming.android.te2.maps.sdk.ServerConfig:  java.lang.String  getPassword()
com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(android.location.Location)	com.mobileforming.android.te2.tracker.TrackerModule:  com.mobileforming.android.te2.tracker.TrackerConfig  access$600(com.mobileforming.android.te2.tracker.TrackerModule)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDefaultVenueModules(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  boolean  isBluetoothOn(android.content.Context)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  java.lang.String  access$500(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  java.lang.String  getHoursOpen(com.mobileforming.te2.core.model.openinghours.Day)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onPause()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder:  void  <init>(android.view.View)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.events.fragment.EventsListFragment$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueDataManager:  int  access$200(com.mobileforming.android.te2.venue.VenueDataManager)
com.mobileforming.te2.core.model.CouponActionEvent$Action:  void  <clinit>()	com.mobileforming.te2.core.model.CouponActionEvent$Action:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)	com.mobileforming.te2.core.model.EventAction:  java.lang.String  getKey()
com.mobileforming.te2.core.fragment.WebViewFragment$1:  boolean  shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  access$000(com.mobileforming.te2.core.fragment.WebViewFragment)
com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  access$000(com.mobileforming.android.te2.infos.InfoModuleFragment)
com.mobileforming.te2.core.model.HoursLink$1:  java.lang.Object[]  newArray(int)	com.mobileforming.te2.core.model.HoursLink$1:  com.mobileforming.te2.core.model.HoursLink[]  newArray(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.te2.core.model.GeofenceInfo:  void  setLabel(java.lang.String)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholderOf(int)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  ensureDeviceRegistration(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  rx.Observable  execute(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestExecutor,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.api.commerce.model.Usage:  void  <clinit>()	com.mobileforming.android.te2.api.commerce.model.Usage:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.messages.MessagesDetailFragment$3$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.messages.MessagesDetailFragment$3$1:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  onData(java.lang.Object)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  onData(java.util.List)
com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)	com.mobileforming.android.te2.venue.VenueWebService:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)	com.mobileforming.te2.core.model.GeofenceInfo:  double  getLongitude()
com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version  getActiveVersion(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.util.List  getVersions()
com.mobileforming.te2.core.model.openinghours.Override:  com.mobileforming.te2.core.model.openinghours.Day  getDay()	com.mobileforming.te2.core.model.openinghours.Day:  void  <init>()
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.RequestExecutor  getPayloadExecutor()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  transforms(com.bumptech.glide.load.Transformation[])	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  transforms(com.bumptech.glide.load.Transformation[])
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.te2.core.model.PathData:  float  getDeviceY()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholderOf(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholder(android.graphics.drawable.Drawable)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$200(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.util.Date)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$OnFragmentInteractionListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloadError(java.lang.Throwable)
com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  onChanged(java.lang.Object)	com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  com.mobileforming.android.te2.maps.sdk.model.MapData  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$900(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.List,java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  checkVenuesEnteredFromGeofence(java.util.List,java.util.List)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.infos.logger.LoggerInteractor:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(java.lang.Object)	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  errorOf(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  error(android.graphics.drawable.Drawable)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.MapsModuleViewModel$3:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.MapsModuleViewModel$3:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  com.mobileforming.te2.core.entity.GeofenceEntity  compute()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$6:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconExited(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.PositionTracker:  double  getLastKnownLatitude()
com.mobileforming.android.te2.maps.sdk.RxUtil:  void  checkOnUiThread()	com.mobileforming.android.te2.maps.sdk.RxUtil:  boolean  isUiThread()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  call(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.te2.core.entity.GeofenceEntity:  void  setEventId(long)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  parseFromCache(com.mobileforming.android.te2.maps.sdk.model.CacheItem)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  java.lang.Object  parseResponseData(java.lang.String)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  android.graphics.Bitmap  transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.messages.view.BarcodeView:  void  <init>(android.content.Context,android.util.AttributeSet,int,int)	com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.MenuTileView:  android.widget.PopupWindow  access$200(com.mobileforming.te2.core.view.MenuTileView)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.DiningFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.DiningFragment)
com.mobileforming.android.te2.messages.MessagesListFragment:  com.mobileforming.android.te2.messages.MessagesListFragment  newInstance()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$7:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  java.lang.Object[]  newArray(int)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getDefaultMapModeConfig()
com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()	com.mobileforming.android.te2.messages.offers.OfferListView:  void  removeOffers()
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  onData(java.util.List)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9,java.lang.StringBuilder)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$16:  void  <clinit>()	com.mobileforming.te2.core.model.NetworkStatus:  com.mobileforming.te2.core.model.NetworkStatus[]  values()
com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.util.List)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener,com.mobileforming.android.te2.infos.InfoModuleListener,com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onHiddenChanged(boolean)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  shouldShowWaitTimes()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  saveVenueInfo(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  deleteVenueData()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessActionCopy:  void  <init>(com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.view.CustomEditText:  void  <init>(android.content.Context,android.util.AttributeSet)	com.mobileforming.te2.core.view.CustomEditText:  void  init(android.content.Context,android.util.AttributeSet,int)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$HiddenListListener)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  java.util.List  createWrapperList(java.util.List)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.te2.core.caching.CacheUtils:  long  extractTtl(java.util.Map)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.LocationServerAPI  access$300(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  setPositionEventListener(com.mobileforming.android.te2.tracker.location.PositionEventListener)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.Event:  java.lang.String  getHeaderImageUrl()
com.mobileforming.android.te2.maps.view.MapView:  void  initialize()	com.mobileforming.android.te2.maps.view.MapView:  float  convertDpToPixel(float,android.content.Context)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  timeoutOf(int)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  timeout(int)
com.mobileforming.android.te2.events.EventsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  setupToolbar()
com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Void  doInBackground(java.lang.Void[])
com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)	com.mobileforming.te2.core.view.MenuTileView:  int  access$002(com.mobileforming.te2.core.view.MenuTileView,int)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stop()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stopBeaconTracker()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setFilter(java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupInfoModule()	com.mobileforming.android.te2.infos.InfoModuleFragment:  com.mobileforming.android.te2.infos.InfoModuleFragment  newInstance()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  placeholderOf(android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBeaconChanged(java.lang.String,int,int,double,double,float,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppUserId()
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(java.lang.Object,java.util.Map)	com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)
com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  java.lang.String  getMapId()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$800(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  processOnVenueDataReady()
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  overrideOf(int,int)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.messages.MessagesModuleFragment:  com.mobileforming.android.te2.messages.MessagesModuleFragment  newInstance()	com.mobileforming.android.te2.messages.MessagesModuleFragment:  void  <init>()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showProductView(java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity$2:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity,java.lang.String)
com.mobileforming.te2.core.model.ProductSelection:  boolean  equals(java.lang.Object)	com.mobileforming.te2.core.model.ProductSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.entity.LocationHistoryEntity:  double  getLongitud()
com.mobileforming.android.te2.maps.MapsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupPoiPeek(android.view.View)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  onClick(android.view.View)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchPoiById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  java.util.Map  getModuleInfo()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationAccess(boolean,boolean,boolean,boolean)	com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getAppId()
com.mobileforming.android.te2.grupo.RefApplication:  void  venueExited(java.lang.String)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider  getDataProvider()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  java.lang.Boolean  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.model.MapInfo:  boolean  isCurrent()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.model.Center:  double  getLongitude()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$200(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  mergeStatusWithPoiInCache(java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.util.List  getCachedPois(java.lang.String)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  com.mobileforming.te2.core.entity.BeaconsEntity  compute()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  android.arch.persistence.room.RoomDatabase  access$000(com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupHome()	com.mobileforming.android.te2.grupo.NavigationActivity$10:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  putDeviceInformation(com.mobileforming.te2.core.api.device.DeviceInformation,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  double  getLon()
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueData$1)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.tracker.system.location.LocationState:  boolean  isEnabled(com.mobileforming.android.te2.tracker.system.location.LocationState)	com.mobileforming.android.te2.tracker.system.location.LocationState:  boolean  isEnabled(int)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  setupRecyclerView()	com.mobileforming.android.te2.messages.offers.OfferListView$DividerDecoration:  void  <init>(com.mobileforming.android.te2.messages.offers.OfferListView,android.graphics.drawable.Drawable,int)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.entity.LoggerEventsEntity:  java.lang.String  getData()
com.mobileforming.android.te2.messages.MessagesModuleFragment:  void  onMessageListItemSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  android.content.Intent  createIntent(android.content.Context,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showTargetCategory(boolean,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  insertInCache(java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.Object,long)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  access$000(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)
com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.te2.core.model.EventTime:  java.util.Date  getStartTime()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  setupImageView()	com.mobileforming.te2.core.model.InfoLink:  com.mobileforming.te2.core.model.Image  getImage()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendGeofenceExit(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationEvent(android.location.Location,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  option(com.bumptech.glide.load.Option,java.lang.Object)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  executeInUiThread(java.lang.Runnable)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$300(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadDefaultCategories(com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.te2.core.model.Info$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Info$1:  com.mobileforming.te2.core.model.Info  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository$1:  void  onFailure(retrofit2.Call,java.lang.Throwable)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository,android.content.Context,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$4:  void  onData(java.lang.Object)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$4:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.infos.logger.LoggerViewModel:  void  clearLogEvents()	com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.infos.InfoModule:  void  changeVenue(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Object  doInBackground(java.lang.Object[])	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  findPositionUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$LinearParameter  getParameterUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1:  void  run()	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isNetworkOn()	com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  isNetworkOn()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)	com.mobileforming.te2.core.network.BaseModuleConfig:  void  setVenueId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)	com.mobileforming.android.te2.maps.sdk.SDKConfig:  com.mobileforming.android.te2.maps.sdk.ServerConfig  getServerConfig()
com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  long  access$402(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,long)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseSettings()
com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$10$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$10,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  eventActionTriggered(com.mobileforming.te2.core.model.EventTriggeredAction)	com.mobileforming.te2.core.model.FavoriteEvent:  com.mobileforming.te2.core.model.Event  getEvent()
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  <init>(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchGeofenceInfo(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest  build()
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  com.mobileforming.te2.core.model.GeofenceInfo  access$500(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  com.mobileforming.te2.core.model.GeofenceInfo  getGeofenceInfo(com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEvents()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  startGuestSurvey()	com.mobileforming.android.te2.grupo.RefApplication:  boolean  wasSurveyDisplayed()
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder:  void  <init>(android.view.View)
com.mobileforming.te2.core.model.EventTriggeredAction:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.FavoriteEvent:  void  <init>(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  findPositionUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)
com.mobileforming.android.te2.events.filters.FilterConfig$1:  java.lang.Object[]  newArray(int)	com.mobileforming.android.te2.events.filters.FilterConfig$1:  com.mobileforming.android.te2.events.filters.FilterConfig[]  newArray(int)
com.mobileforming.te2.core.api.messages.model.ExpireTimeOption:  void  <clinit>()	com.mobileforming.te2.core.api.messages.model.ExpireTimeOption:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  stop()	com.mobileforming.android.te2.maps.sdk.NetworkRetryService:  void  cancel(android.content.Context,java.lang.String)
com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.LiveData  createBeaconWatcherLiveData(java.util.List)	com.mobileforming.android.te2.tracker.location.BeaconRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.location.BeaconRepository,java.util.List)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupListView()	com.mobileforming.android.te2.events.filters.EventFilterManager:  java.util.Collection  getFilteredEvents()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()	com.mobileforming.te2.core.model.Info:  void  setTitle(java.lang.String)
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  initializeSdk(android.app.Application)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  setAppStateSubscription(android.app.Application)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onViewCreated(android.view.View,android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$100(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.venue.VenueModule:  void  getVenueDetail(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  getVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  registerNetworkCallback()	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onAttachFragment(android.support.v4.app.Fragment)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  updateBadgeCounter()
com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  priority(com.bumptech.glide.Priority)	com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  priority(com.bumptech.glide.Priority)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData:  com.mobileforming.android.te2.tracker.system.BackgroundStatusLiveData  getInstance()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$10:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  createDataCallback()	com.mobileforming.te2.core.auth.AuthManager$4:  void  <init>(com.mobileforming.te2.core.auth.AuthManager)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.mobileforming.android.te2.maps.view.MapView:  void  setOnPoiSelectedListener(com.mobileforming.android.te2.maps.view.MapView$OnPoiSelectedListener)
com.mobileforming.android.te2.grupo.UserFragment:  com.mobileforming.android.te2.grupo.UserFragment  newInstance(com.mobileforming.android.te2.grupo.UserFragment$UserFragmentListener,biz.te2.guestsurvey.listeners.SurveyModuleListener)	com.mobileforming.android.te2.grupo.UserFragment:  void  <init>()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconEntered(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.PositionTracker:  double  getLastKnownLatitude()
com.mobileforming.te2.core.form.FormEditText:  void  onAttachedToWindow()	com.mobileforming.te2.core.form.FormEditText$1:  void  <init>(com.mobileforming.te2.core.form.FormEditText)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$12:  java.lang.Object  call(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$12:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onActivityCreated(android.os.Bundle)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  fetchWalkingTime()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showTargetCategory(boolean,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment,java.lang.String)
com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition)	com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.mobileforming.te2.core.model.EventFilter:  int  getFilterDrawable()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  com.mobileforming.android.te2.maps.fragment.PoiDetailFragment  newInstance(com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  <init>()
com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType:  void  <clinit>()	com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType:  void  <init>(java.lang.String,int)
com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  <init>(android.content.Context,com.mobileforming.te2.core.network.BaseModuleConfig)	com.mobileforming.android.te2.tracker.util.TrackerUtil:  java.lang.String  fetchAppUserId(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  android.app.PendingIntent  createGeofencePendingIntent()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$2:  void  run()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.android.te2.maps.dataprovider.MapUpdateListener  access$1100(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService,boolean)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  complete(boolean)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment  build()	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onError(java.lang.Throwable)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  int  access$900(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.te2.core.model.Message:  java.lang.String  getDescription()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  com.mobileforming.android.te2.messages.MessagesDetailFragment  newInstance(com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  skipMemoryCacheOf(boolean)	com.mobileforming.te2.core.util.GlideOptions:  void  <init>()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Message:  java.lang.String  getFinePrint()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.ViewGroup  createInfoView(com.mobileforming.te2.core.model.Info)	com.mobileforming.te2.core.util.HtmlContentUtils:  android.text.Spanned  fromHtml(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.te2.core.model.Event:  java.util.List  getVenues()
com.mobileforming.android.te2.messages.util.DateTimeUtil:  java.lang.String  getExpirationTimeLeft(android.content.Context,java.util.Date,long)	com.mobileforming.android.te2.messages.util.DateTimeUtil:  boolean  isMessageExpiring(java.util.Date,long)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.grupo.RefApplication  getInstance()
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  manageLoader(boolean)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  manageLoader(boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImagePreviewUri()
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  setDeviceId(java.lang.String)	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()
com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()	com.mobileforming.te2.core.model.MessageAction:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment$6:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.venue.VenueModule$5:  void  onData(java.lang.Object)	com.mobileforming.android.te2.venue.VenueModule$5:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onAttach(android.content.Context)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.dataprovider.EventsDataProvider  getEventsDataProvider()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOffer(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.util.List  getLinks()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendVenueEntry(android.location.Location,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getLocalDefaultMapData(java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$2:  void  run()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.TE2SDKInternal)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.te2.core.entity.BeaconsEntity:  void  setDateOfLog(java.util.Date)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$1:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  access$000(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  <init>()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)	com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  hasVenueGeofence()
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  writeFeaturedMessageToCache(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  void  initPrefs(android.content.Context)
com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  <clinit>()	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getInstance()
com.mobileforming.te2.core.model.Menu$1:  java.lang.Object  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Menu$1:  com.mobileforming.te2.core.model.Menu  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  int  getMajor()
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.te2.core.entity.LoggerEventsEntity:  void  setData(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapUpdated(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  updateMapImage(java.lang.String,java.lang.String)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoListFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoListFragment)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.te2.core.model.Message:  java.lang.String  getDescription()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1600(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.venue.VenueModule:  void  getVenueDetail(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule$5:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  java.util.List  access$202(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailFragment$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$102(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)	com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,int)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.mobileforming.android.te2.maps.poi.PoiStatusLiveData  getPoiStatusLiveData(int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  int  compare(com.mobileforming.te2.core.model.Poi,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  action(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectViewtoShow()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1800(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment$16:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displayWaitTimeMessage(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$31:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchMessagesForCurrentVenue(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Message:  java.lang.String  linkId()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  void  insertLocation(com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])
com.mobileforming.te2.core.model.PathData:  float  getDestinationX()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.maps.util.TimeFormatUtils:  long  getNumberOfMinutes(long)	com.mobileforming.android.te2.maps.util.TimeFormatUtils:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$13:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  setShowTimes(java.util.TimeZone,java.util.List,android.view.LayoutInflater)
com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  int  getStepsPerMin()	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.maps.view.MapView:  void  setupTouchRegions(java.util.List)	com.mobileforming.android.te2.maps.view.MapView:  com.mobileforming.android.te2.maps.poi.MapPoiWrapper  getClickedPoi(float,float)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadCategoriesByModuleId(com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.EventFilter$1:  com.mobileforming.te2.core.model.EventFilter  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventFilter$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,double,double)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment$12:  void  onPopupWindowClosed()	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.MapsModuleFragment$14:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupChildTabLayout()
com.mobileforming.te2.core.entity.BeaconsEntity:  long  getEventId()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  sendLogEntryCallback(com.mobileforming.android.te2.maps.sdk.model.LogEntry)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.TestModeDevice$libraryInfo:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.TestModeDevice:  void  addLibraryInfo(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getDefaultNormalModeConfig()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()
com.mobileforming.te2.core.auth.AuthManager$3:  void  <init>(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback,java.lang.Throwable)	com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)
com.mobileforming.android.te2.maps.sdk.RxUtil$1:  void  call(rx.Subscriber)	com.mobileforming.android.te2.maps.sdk.RxUtil$1:  void  call(java.lang.Object)
com.mobileforming.te2.core.model.EventActionType$1:  com.mobileforming.te2.core.model.EventActionType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventActionType$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$15:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,double,double)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData  build()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1800(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  onTabReselected(android.support.design.widget.TabLayout$Tab)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1100(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.android.te2.tracker.dataprovider.TrackerModuleInteractor  getTrackerModuleInteractor()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.android.te2.tracker.system.SystemTracker$2:  void  onChanged(com.mobileforming.android.te2.tracker.system.location.LocationState)	com.mobileforming.android.te2.tracker.system.SystemTracker$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$2:  void  <init>(android.content.Context)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  tryImmediateOrDispatchJob(android.content.Context)
com.mobileforming.te2.core.auth.AuthManager$1:  void  <init>(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.te2.core.auth.AuthManager:  void  fetchAccessToken(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.InfoDetailItem:  void  setSections(java.util.List)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setHasNetworkStatePermission(boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  access$100(java.util.List,java.util.Date)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  call(java.lang.Object)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getEventsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendGeofenceExit(android.location.Location,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  boolean  doExecuteRequest(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.messages.util.ResUtils:  java.lang.String  getStringUri(int,android.content.res.Resources)	com.mobileforming.android.te2.messages.MessagesModule:  com.mobileforming.te2.core.model.Message  createDefaultMessage()
com.mobileforming.te2.core.auth.Te2Authenticator$1:  void  <init>(com.mobileforming.te2.core.auth.Te2Authenticator,java.util.concurrent.BlockingQueue,okhttp3.Response)	com.mobileforming.te2.core.auth.Te2Authenticator:  okhttp3.Request  authenticate(okhttp3.Route,okhttp3.Response)
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  infoListPageViewed()	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  onResume()
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setBaseUrl(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.grupo.NavigationActivity:  android.os.Handler  access$002(com.mobileforming.android.te2.grupo.NavigationActivity,android.os.Handler)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$4:  void  onMapLoaded()	com.mobileforming.android.te2.maps.view.MapView:  void  onImageLoaded()
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  postCallback(int,float)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl,int,float)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  networkAccessChanged(boolean)	com.mobileforming.android.te2.grupo.RefApplication:  void  networkAccessChanged(boolean)
com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$LocalLinearTransformStrategy:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$Param  getParams()	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.maps.MapsModuleFragment$9:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  responseType(java.lang.reflect.Type)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$1300(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerGeofences()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$900(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawDiagonalFromTopLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.BeaconConfig  getDefaultBeaconConfig()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  isValidUUID(java.lang.String)	com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  access$200(com.mobileforming.android.te2.tracker.location.LocationTracker,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getDefaultMapData(boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.entity.LocationHistoryEntity:  long  getUid()	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  access$500(java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  java.util.List  call()
com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  boolean  isWaitTimesEnabled()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  setWaitTimeData(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.List  access$802(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.Poi:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Poi$1:  com.mobileforming.te2.core.model.Poi  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.PathData:  boolean  isWalkingPathGenerated()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$2:  void  <init>(com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  access$000(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$33:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.te2.core.model.LocationLink$1:  com.mobileforming.te2.core.model.LocationLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LocationLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerConfig:  int  access$1302(com.mobileforming.android.te2.tracker.TrackerConfig,int)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setCompassBearingUpdateFrequency(int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  rx.Observable  call(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isNetworkOn()	com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isNetworkOn()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  <init>(long)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getRefreshTimeLiveData()
com.mobileforming.android.te2.maps.view.MapView:  com.mobileforming.android.te2.maps.poi.MapPoiWrapper  getClickedPoi(float,float)	com.mobileforming.android.te2.maps.view.MapView:  com.mobileforming.android.te2.maps.poi.MapPoiWrapper  access$000(com.mobileforming.android.te2.maps.view.MapView,float,float)
com.mobileforming.te2.core.model.Schedule$1:  com.mobileforming.te2.core.model.Schedule  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Schedule$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.RefApplication$5:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication:  void  setSelectedVenueId(java.lang.String)
com.mobileforming.te2.core.model.EventCategory:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventCategory$1:  com.mobileforming.te2.core.model.EventCategory  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPositionFailure(com.mobileforming.android.te2.maps.sdk.exception.DataException)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$700(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.exception.DataException)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  <init>(com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onPostResume()
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseSuccess(java.lang.String,okhttp3.Response)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$11:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$11:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Object)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$6:  void  <init>(com.google.android.gms.tasks.TaskCompletionSource)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.android.gms.tasks.Task  sendDeviceInfo(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  java.lang.String  getPushToken()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  sendPushTokenEvent(boolean)
com.mobileforming.te2.core.model.Map$1:  com.mobileforming.te2.core.model.Map[]  newArray(int)	com.mobileforming.te2.core.model.Map$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.util.WebArrayList:  void  setTtl(java.util.Map)	com.mobileforming.te2.core.util.WebArrayList:  void  setTtl(okhttp3.Headers)
com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupPoiPeek(android.view.View)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker,com.mobileforming.android.te2.tracker.location.GeofenceTracker$1)
com.mobileforming.android.te2.tracker.TrackerModule$1:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.api.commerce.model.Barcode:  java.lang.String  getLabel()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.form.FormCheckBox$1:  void  <init>(com.mobileforming.te2.core.form.FormCheckBox)	com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  getPoiInstance()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$700(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.te2.core.model.LocationTechnologyType:  com.mobileforming.te2.core.model.LocationTechnologyType  valueOf(java.lang.String)	com.mobileforming.te2.core.model.LocationTechnology:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueDataReady()
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  java.util.List  fetchAllUserMessagesByVenue(java.lang.String,java.util.Map)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForVenue(java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)
com.mobileforming.android.te2.messages.offers.OfferListView:  android.content.Context  access$000(com.mobileforming.android.te2.messages.offers.OfferListView)	com.mobileforming.android.te2.messages.offers.OfferListView$DividerDecoration:  void  <init>(com.mobileforming.android.te2.messages.offers.OfferListView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setInterceptor(okhttp3.Interceptor)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  com.mobileforming.android.te2.tracker.location.GeofenceTracker  access$702(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem  build()
com.mobileforming.te2.core.model.Poi$1:  com.mobileforming.te2.core.model.Poi[]  newArray(int)	com.mobileforming.te2.core.model.Poi$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.TE2SDKInternal)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  scheduleCachePurge()
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asGif()	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asGif()
com.mobileforming.te2.core.fragment.WebViewFragment:  android.net.Uri  buildPhoneUri(java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)
com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest$Builder  responseClass(java.lang.Class)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setContext(android.content.Context)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  java.lang.String  getDensity()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  java.lang.String  getImageUrl(java.util.List)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  showFooter(int)	com.mobileforming.android.te2.messages.OffersListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.DiningFragment:  void  access$000(com.mobileforming.android.te2.grupo.DiningFragment,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.maps.sdk.GeofenceHelper:  void  updateGeofences(java.util.List,java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerGeofences()
com.mobileforming.android.te2.tracker.location.PositionTracker$CompassBearingListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  trackNetworkState(android.content.Context)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.mobileforming.android.te2.maps.sdk.MapDecision:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  getMapServerIdentifier()	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setLatitude(double)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  java.util.List  createWrapperList(java.util.List)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  setLoggerEventsList(java.util.List)
com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.auth.model.error.UnverifiedAccountException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  com.mobileforming.te2.core.auth.model.error.AuthException  'from'(retrofit2.Response)
com.mobileforming.te2.core.model.Barcode:  java.lang.String  label()	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  initBarcode(com.mobileforming.te2.core.model.Barcode)
com.mobileforming.android.te2.maps.sdk.GeofenceHelper:  void  <init>(android.content.Context)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.TE2ModuleManager,com.mobileforming.android.te2.maps.sdk.LocationConfigManager,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.LocationServerAPI,com.mobileforming.android.te2.maps.sdk.LocationRepository,com.mobileforming.android.te2.maps.sdk.LocationEventManager,com.mobileforming.android.te2.maps.sdk.PreferencesRepository)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setMultiVenueUrl(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.te2.core.model.ModifierSelection:  java.lang.String  getName()	com.mobileforming.te2.core.model.ModifierSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2:  void  run()
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  java.util.List  getPoiStatus(java.lang.String,java.util.Map)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()
com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  call(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesDetailActivity$1:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.MessagesDetailActivity$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.Map:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Map$1:  com.mobileforming.te2.core.model.Map  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  updateLocation(android.content.Context)	com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  onActive()
com.mobileforming.android.te2.tracker.location.OrientationLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.OrientationLiveData:  com.mobileforming.android.te2.tracker.location.OrientationLiveData  getInstance(android.content.Context)
com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.te2.core.DataCallback  createDataCallback()	com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()
com.mobileforming.android.te2.grupo.NavigationActivity:  com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider  getInfoDataProvider()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onAttach(android.content.Context)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.te2.core.model.Location$1:  com.mobileforming.te2.core.model.Location[]  newArray(int)	com.mobileforming.te2.core.model.Location$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setAccuracy(float)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)	com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileView$MenuTileItem  createItem(java.lang.String,java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackGeofenceEnterExit(java.lang.String,boolean,com.mobileforming.te2.core.model.RegionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerEventsDAO  loggerEventsDAO()
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1$1:  void  <init>(com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Void)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOfferByIdForVenue(java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOffer(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationInsideVenue(java.lang.String,double,double,float)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  <init>(android.content.Context,android.view.View,com.mobileforming.te2.core.model.Poi,com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$WalkingDirectionsPopupWindowListener,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.maps.util.TimeFormatUtils:  long  getNumberOfHours(long)	com.mobileforming.android.te2.maps.util.TimeFormatUtils:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  logRejectedLocationUpdate(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.events.activity.EventsDetailActivity:  void  onEventActionClick(com.mobileforming.te2.core.model.EventTriggeredAction)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)
com.mobileforming.te2.core.model.Tag$1:  com.mobileforming.te2.core.model.Tag[]  newArray(int)	com.mobileforming.te2.core.model.Tag$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$702(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setPassword(java.lang.String)
com.mobileforming.android.te2.infos.InfoModuleActivity:  android.content.Intent  createIntent(android.content.Context)	com.mobileforming.android.te2.infos.InfoModule:  void  startModule(android.content.Context)
com.mobileforming.android.te2.maps.view.MapView:  void  setImage(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setMapImage(java.lang.String,java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  sortMessages(java.util.List)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.te2.core.model.PhoneLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.PhoneLink$1:  com.mobileforming.te2.core.model.PhoneLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onSuccess(com.mobileforming.te2.core.model.UserInterfaceDisplayCategorization,java.util.Map)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)	com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  onDialogDateSet(int,int,int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$7:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.model.Message:  void  setBarcode(com.mobileforming.te2.core.model.Barcode)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.tracker.dataprovider.BasicAuthenticationInterceptor:  java.lang.String  getEncodedCredentials()	com.mobileforming.android.te2.tracker.dataprovider.BasicAuthenticationInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.te2.core.model.DeviceInfo:  java.lang.String  model()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)
com.mobileforming.te2.core.auth.cache.AuthTokenCache:  void  clear()	com.mobileforming.te2.core.auth.AuthManager:  void  logout()
com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getHeadingText()	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onSuccess(com.mobileforming.te2.core.model.UserInterfaceDisplayCategorization,java.util.Map)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onSuccess(java.lang.Object,java.util.Map)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  radius(float)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapInfoAndData(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getContentVersion()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.android.te2.maps.activity.PoiDetailActivity:  int  getStatusBarColor(int)	com.mobileforming.android.te2.maps.activity.PoiDetailActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$15:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  long  access$100(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)	com.mobileforming.android.te2.messages.OffersListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  boolean  isInVenue()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupListView()
com.mobileforming.te2.core.model.CommerceSchedule$1:  com.mobileforming.te2.core.model.CommerceSchedule  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.CommerceSchedule$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hideSoftKeyboard()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$700(com.mobileforming.android.te2.maps.MapsModuleFragment)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  stopRangingAllRegions()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  stop()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.maps.MapsModuleFragment$11:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupPoiPeek(android.view.View)
com.mobileforming.te2.core.model.InfoEmailDetailItem:  java.lang.String  getLabel()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.te2.core.api.ApiError:  java.lang.String  getMessage()	com.mobileforming.te2.core.api.BaseWebService:  java.lang.Throwable  onParsedResponseErrorSuccess(com.mobileforming.te2.core.api.ApiError)
com.mobileforming.te2.core.form.FormEditText:  boolean  showErrorOnFocusLost()	com.mobileforming.te2.core.form.FormEditTextInputManager:  void  onFocusChange(android.view.View,boolean)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getShowsByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  access$302(com.mobileforming.android.te2.grupo.NavigationActivity,boolean)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1$1:  void  showDialog()
com.mobileforming.te2.core.model.TransactionResponse$Permission:  com.mobileforming.te2.core.model.TransactionResponse$Permission  valueOf(java.lang.String)	com.mobileforming.te2.core.model.TransactionResponse:  void  <init>(android.os.Parcel)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  java.lang.String  key()	com.mobileforming.te2.core.util.BitmapTransformation:  void  updateDiskCacheKey(java.security.MessageDigest)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$32:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$1:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$1:  void  call(java.lang.Object)
com.mobileforming.te2.core.model.ProductSelection$1:  com.mobileforming.te2.core.model.ProductSelection[]  newArray(int)	com.mobileforming.te2.core.model.ProductSelection$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$102(com.mobileforming.android.te2.tracker.TrackerConfig,long)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyTime(long)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  updateUI(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  access$200(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  handleGeofenceDataCallback(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.LocationTracker,java.util.List)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displayWaitTimeMessage(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiPeek()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  fetchEventsModuleConfig()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)	com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  java.util.Date  getEndDate()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  boolean  isWithinSchedule(java.util.Date)
com.mobileforming.android.te2.maps.util.ImageUtils$2:  void  <init>(android.widget.ImageView)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,int)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  initUI(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.model.Barcode:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Barcode$Type)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackCouponAction(com.mobileforming.te2.core.model.CouponActionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$4:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  getHttpClient()	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.NetworkManager)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6$2:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6,java.io.IOException)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onFailure(okhttp3.Call,java.io.IOException)
com.mobileforming.android.te2.events.filters.FilterConfig:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.events.filters.FilterConfig$1:  com.mobileforming.android.te2.events.filters.FilterConfig  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  postNotifyLocationListeners(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)
com.mobileforming.android.te2.maps.view.MapView:  void  setLandmarkPoi(java.util.ArrayList)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  extractAndDisplayLandmarkPoi(java.util.List)
com.mobileforming.te2.core.model.Map$1:  com.mobileforming.te2.core.model.Map  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Map$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  listener(com.bumptech.glide.request.RequestListener)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  listener(com.bumptech.glide.request.RequestListener)
com.mobileforming.android.te2.messages.MessagesDetailFragment$3:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment,com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  putDeviceInformation(com.mobileforming.te2.core.api.device.DeviceInformation,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.logger.LoggerActivity$4:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  saveLog()
com.mobileforming.android.te2.grupo.UserFragment:  void  access$700(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.api.BaseWebService$1$1$3:  void  <init>(com.mobileforming.te2.core.api.BaseWebService$1$1,retrofit2.Response)	com.mobileforming.te2.core.api.BaseWebService$1$1:  io.reactivex.SingleSource  apply(retrofit2.adapter.rxjava2.Result)
com.mobileforming.te2.core.model.Value:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Value$1:  com.mobileforming.te2.core.model.Value  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerModule$5:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)	com.mobileforming.android.te2.tracker.TrackerModule$5:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment$18:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiPeek()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity,io.te2.defaults.takeover.TakeoverListener)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  setOpeningHours(java.lang.String,com.mobileforming.android.te2.grupo.NavigationActivity,io.te2.defaults.takeover.TakeoverListener)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  cache(com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.te2.core.model.LocationTechnology$1:  com.mobileforming.te2.core.model.LocationTechnology[]  newArray(int)	com.mobileforming.te2.core.model.LocationTechnology$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache$2:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()
com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  isShowingSearch()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onBackPressed()
com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker$4:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.User:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.User$1:  com.mobileforming.te2.core.model.User  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$502(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setBaseUrl(java.lang.String)
com.mobileforming.android.te2.tracker.location.LocationTracker$5:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker$5:  void  onData(java.lang.Object)
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapData(com.mobileforming.android.te2.maps.sdk.MapDecision,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadCategoriesAndPois(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$200(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity$2:  void  onData(java.util.List)	com.mobileforming.android.te2.grupo.NavigationActivity$2:  void  onData(java.lang.Object)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  insertLoggerHasPermissions(com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])
com.mobileforming.android.te2.venue.VenueModule$5:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  getVenueDetail(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.view.CustomCheckBox:  java.lang.String  access$100(com.mobileforming.te2.core.view.CustomCheckBox)	com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.maps.MapsModuleFragment$5:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.maps.sdk.DataRequest:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataRequest$Method,java.lang.String,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.DataRequest:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataRequest$Method,java.lang.String,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.DataRequest$1)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.maps.sdk.exception.DataException:  java.lang.Throwable  getException()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getAllMapsUrl(java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$1:  void  <init>(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter,com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder,int)
com.mobileforming.android.te2.events.util.DateStringUtil:  long  getNumberOfHours(long)	com.mobileforming.android.te2.events.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onProgressUpdate(java.lang.Integer[])	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onProgressUpdate(java.lang.Object[])
com.mobileforming.android.te2.maps.view.CustomTagView$1:  void  <init>(com.mobileforming.android.te2.maps.view.CustomTagView)	com.mobileforming.android.te2.maps.view.CustomTagView:  void  setIcon(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment$3,java.lang.String)	com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  boolean  onQueryTextChange(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Long)
com.mobileforming.te2.core.model.Option:  com.mobileforming.te2.core.model.Option[]  values()	com.mobileforming.te2.core.model.Option:  com.mobileforming.te2.core.model.Option  fromOption(java.lang.String)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder:  com.mobileforming.android.te2.maps.sdk.model.LocationWrapper  build()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10$1:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10$1:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.lifecycle.LiveData  getUnfilteredEvents()
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1400(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.venue.VenueCache:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig)	com.mobileforming.android.te2.venue.VenueModule:  void  <init>(com.mobileforming.android.te2.venue.VenueModuleConfig,android.content.Context)
com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  access$600(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  call(java.lang.Object)
com.mobileforming.te2.core.ModuleConfig:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,com.mobileforming.te2.core.ModuleConfig$1)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig  build()
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.te2.core.model.EventDetail$1:  com.mobileforming.te2.core.model.EventDetail[]  newArray(int)	com.mobileforming.te2.core.model.EventDetail$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$5:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback,java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition:  long  getTimeInMilli()	com.mobileforming.android.te2.grupo.RefApplication$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.android.te2.grupo.NavigationActivity:  android.content.Intent  startMapIntent(android.content.Context,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  requestHandleMessageAction(com.mobileforming.te2.core.model.MessageTriggeredAction,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.EventVenue:  void  setPosition(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.infos.InfoModule:  void  setModuleListener(com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onGeofenceError(java.lang.String)	com.mobileforming.android.te2.tracker.location.GeofencingEventReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.android.te2.infos.InfoModuleListener  getInfoModuleListener()	com.mobileforming.android.te2.infos.InfoModule:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  startGuestSurvey()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$600(com.mobileforming.android.te2.maps.MapsModuleFragment,int)	com.mobileforming.android.te2.maps.MapsModuleFragment$3$1:  void  run()
com.mobileforming.android.te2.maps.sdk.model.VenueLocation:  com.mobileforming.android.te2.maps.sdk.model.Unit  getUnit()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.mobileforming.android.te2.tracker.location.GeofenceTracker  getInstance(android.content.Context)
com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  java.lang.String  getEncodedCredentials(java.lang.String,java.lang.String)	com.mobileforming.te2.core.network.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.lang.String  getDensity()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.lang.String  selectImageUrl(java.util.List)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener)	com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener:  void  onLocationChanged(double,double)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  populateUI(android.view.LayoutInflater)
com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider  access$400(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.te2.core.model.Barcode$1:  com.mobileforming.te2.core.model.Barcode  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Barcode$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setParentTabIcons()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)
com.mobileforming.android.te2.infos.util.InfoModuleUtils:  com.google.android.gms.tasks.Task  retrieveVenueOpeningHours(com.mobileforming.te2.core.model.VenueDetail)	com.mobileforming.android.te2.infos.util.InfoModuleUtils:  com.google.android.gms.tasks.Task  retrieveVenueOpeninghours(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataInfo(java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  boolean  access$300(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleIfPushMessage()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  int[][]  getMapGrid()	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$2:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  access$1002(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.te2.core.model.Product:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Product$1:  com.mobileforming.te2.core.model.Product  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setPendingIntent(android.app.PendingIntent)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.te2.core.auth.AuthManager$5:  void  <init>(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.auth.model.AuthRequest,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager:  void  authenticate(com.mobileforming.te2.core.auth.model.AuthRequest,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment,android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  setupScrollingBehavior(android.view.View)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$11:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getVenueDetails(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  float  access$300(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$12:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$28:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPosition(com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.form.FormCheckBox:  com.mobileforming.te2.core.form.FormViewParent  getFormViewParent()	com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  showOfferDetail(com.mobileforming.android.te2.messages.offers.detail.BaseOfferDetailViewModel)	com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.te2.core.model.openinghours.InfoOpeningHoursItem:  java.util.List  getVenueSchedule()	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.List,java.util.Date)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  launchNativeApp(java.lang.String)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter$1:  void  <init>(com.mobileforming.android.te2.infos.adapter.InfoListAdapter,com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder,int)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processRemoveTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawBottomRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$2:  void  onPopupWindowClosed()	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper:  void  <init>(android.location.Location,java.lang.String,java.lang.String,boolean,com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$1)	com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder:  com.mobileforming.android.te2.maps.sdk.model.LocationWrapper  build()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$30:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)
com.mobileforming.te2.core.model.InfoLink$1:  com.mobileforming.te2.core.model.InfoLink[]  newArray(int)	com.mobileforming.te2.core.model.InfoLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  com.mobileforming.android.te2.maps.sdk.model.Image  getImage()	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchAppConfig(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.android.te2.maps.sdk.MapDecision:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  getMapAppIdentifier()	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.events.fragment.EventsListFragment$9:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  updateUI()
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDefaultVenueModules(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadDefaultCategories(com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.location.PositionTracker:  double  access$802(com.mobileforming.android.te2.tracker.location.PositionTracker,double)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)
com.mobileforming.te2.core.entity.BeaconsEntity:  java.util.Date  getDateOfLog()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.te2.core.model.Alarm$1:  com.mobileforming.te2.core.model.Alarm  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Alarm$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayload(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.grupo.RefApplication$5:  void  onData(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication$5:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.Image$1:  com.mobileforming.te2.core.model.Image  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Image$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.lang.String  getId()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.form.FormSubmitButton:  void  setInternalClickListener(android.view.View$OnClickListener)	com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onData(java.lang.Long)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  remove(java.lang.String)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  removeFromCache(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment$17$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$17,java.lang.Long)	com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onData(java.lang.Long)
com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,android.content.Context,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueData$1)	com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData  build()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  java.util.Set  access$100(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$7:  void  run()
com.mobileforming.android.te2.messages.MessagesDetailFragment$5:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment,android.view.View)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  saveVenueInfo(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.util.List)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  responseModel(java.lang.Class)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.messages.MessagesModule:  void  offerRedeemed()	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  launchOfferRedeemedDialog()
com.mobileforming.android.te2.tracker.system.SystemTracker$2:  void  <init>(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onPoiNoHitButMap()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onPoiSelected(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)
com.mobileforming.android.te2.grupo.UserFragment$2:  void  <init>(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$11:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.infos.InfoModuleActivity:  com.mobileforming.android.te2.infos.InfoModuleListener  getInfoModuleListener()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onAttach(android.content.Context)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$InfoListListener  access$000(com.mobileforming.android.te2.infos.adapter.InfoListAdapter)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  stopRefreshingWaitTimes()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onPause()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showDiningDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.DiningFragment:  void  diningDetailsViewed(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.grupo.UserFragment:  void  displayUserPreferences()	com.mobileforming.android.te2.grupo.UserFragment:  void  access$700(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.events.util.DateStringUtil:  boolean  isTomorrow(java.util.Calendar,java.util.Date)	com.mobileforming.android.te2.events.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.TimeZone,java.util.Calendar,java.util.Date,com.mobileforming.android.te2.events.util.DateStringUtil$Mode)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.lifecycle.LiveData  getLastPermissionRecorded()	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  computeIfAbsent(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  isLocationInVenue(double,double,float)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.te2.core.model.BeaconConfig:  float  getInsideVenueBackgroundBetweenScanPeriod()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postCouponAction(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment$2:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  populateScrollView()
com.mobileforming.android.te2.venue.VenueWebService:  void  extractHeader(okhttp3.Headers,java.util.Map)	com.mobileforming.android.te2.venue.VenueWebService:  void  access$000(com.mobileforming.android.te2.venue.VenueWebService,okhttp3.Headers,java.util.Map)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$4:  void  onSuccess(com.mobileforming.te2.core.model.AppConfig)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$4:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  updateWaitTimesLastUpdatedText()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)
com.mobileforming.te2.core.model.EventTime:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventTime$1:  com.mobileforming.te2.core.model.EventTime  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$5:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchMenus(java.lang.String,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.te2.core.model.Position  access$1202(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.model.Icon:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Icon$1:  com.mobileforming.te2.core.model.Icon  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.openinghours.Day:  java.util.Date  getCloseTime()	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackBluetoothAccessEvent(com.mobileforming.te2.core.model.BluetoothAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getCredential()	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  checkIsNetworkOn()	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  messageFromPoiChildToParent2()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.view.MapView:  com.mobileforming.android.te2.maps.poi.MapPoiWrapper  access$000(com.mobileforming.android.te2.maps.view.MapView,float,float)	com.mobileforming.android.te2.maps.view.MapView$1:  boolean  onSingleTapConfirmed(android.view.MotionEvent)
com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  call(rx.Subscriber)	com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  call(java.lang.Object)
com.mobileforming.te2.core.model.EventTime$1:  com.mobileforming.te2.core.model.EventTime[]  newArray(int)	com.mobileforming.te2.core.model.EventTime$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  long  getLinksTtl()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheLink(com.mobileforming.te2.core.model.Link,long)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$700(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.exception.DataException)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  call(java.lang.Throwable)
com.mobileforming.te2.core.model.Tax$1:  com.mobileforming.te2.core.model.Tax[]  newArray(int)	com.mobileforming.te2.core.model.Tax$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  double  access$500(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  boolean  isNetworkAvailable(android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processRemoveTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.te2.core.api.app.AppRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getVenueModules(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.RefApplication:  void  addVenueEventListener(com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  accept(com.mobileforming.te2.core.AnalyticsEvent)	com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  accept(java.lang.Object)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$10:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getClosestPOI(java.lang.String,float,float,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideOfflineCacheInterceptor(int)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)
com.mobileforming.android.te2.tracker.TrackerConfig:  float  access$402(com.mobileforming.android.te2.tracker.TrackerConfig,float)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyDistanceLow(float)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  findLatLonUsingMarkers(com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  convertPositionToLatLon(com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getFriday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  notifyNetworkStateChangeEvent(boolean,android.net.NetworkInfo)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  updateNetworkAvailable()
com.mobileforming.te2.core.model.Location:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Location$1:  com.mobileforming.te2.core.model.Location  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$802(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setAppId(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.Fence:  double  getLon()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isDistanceGreater(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence,float)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(android.net.Uri)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$1:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.model.Tax:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Tax$1:  com.mobileforming.te2.core.model.Tax  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$2:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchPoiAllBeacons(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setAppDatabase(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$2:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$2:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.AppStateEvent:  java.lang.String  getAppState()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  onAppStateEvent(com.mobileforming.android.te2.maps.sdk.model.AppStateEvent)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawTopRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.te2.core.util.ImageUtils$1:  void  <init>(android.widget.ImageView,android.graphics.drawable.Drawable)	com.mobileforming.te2.core.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingTimeCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.te2.core.model.Event:  void  setHeaderImageUrl(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$1:  void  <init>(com.mobileforming.te2.core.dialog.alert.AlertDialogFragment)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoList(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getDescriptionText()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onResume()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1:  boolean  onTouch(android.view.View,android.view.MotionEvent)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  java.lang.String  getImageUrl(java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadCategoriesAndPois(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$400(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.location.GeofenceAction:  int  getTransitionType()	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$500(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  call(java.util.List)
com.mobileforming.te2.core.model.Entry$1:  com.mobileforming.te2.core.model.Entry  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Entry$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  notifyConnectivityChangeAsync()	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  <init>(android.app.Activity,com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,int)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  retrofit2.Retrofit$Builder  build(java.lang.String)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  java.lang.Object  build(java.lang.String,java.lang.Class)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  sendWalkingPathEvent(java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.lang.String,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.te2.core.util.GlideOptions:  com.mobileforming.te2.core.util.GlideOptions  lock()	com.mobileforming.te2.core.util.GlideOptions:  com.bumptech.glide.request.RequestOptions  lock()
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.CacheRepository)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  com.mobileforming.android.te2.maps.sdk.model.ModelCache  buildModelCache(com.mobileforming.android.te2.maps.sdk.CacheRepository)
com.mobileforming.te2.core.model.Message:  void  setTitle(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$2:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2:  void  run()
com.mobileforming.te2.core.view.MenuTileView:  android.widget.LinearLayout  access$100(com.mobileforming.te2.core.view.MenuTileView)	com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  <init>(com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1,android.arch.lifecycle.MediatorLiveData)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  android.arch.lifecycle.LiveData  apply(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)
com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getAppUserId()	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onHandleResponseFailure(java.lang.String,okhttp3.Response)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseFailure(java.lang.String,okhttp3.Response)
com.mobileforming.te2.core.model.Order:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Order$1:  com.mobileforming.te2.core.model.Order  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.lifecycle.LiveData  getUnfilteredEvents()	com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  void  unfilterLoggerEvents()
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  int  access$100(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  void  <init>(com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository:  android.arch.lifecycle.LiveData  getSurveyAnswersLiveData()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  hideRecenterFab()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiPeek()
com.mobileforming.android.te2.tracker.TrackerModule:  boolean  access$500(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule$6:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$200(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository:  void  logBeaconExit(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.model.BeaconInfo,boolean)
com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  android.arch.lifecycle.MediatorLiveData  access$000(com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.tracker.TrackerModule:  android.arch.lifecycle.LiveData  getCurrentLocationPermissionsLiveData()	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getCurrentLocationsPermissions()
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapUpdated(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$1:  void  run()
com.mobileforming.android.te2.grupo.RefApplication$3:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication:  void  pushTokenGenerated()
com.mobileforming.android.te2.messages.OffersListFragment:  void  handleSuccessfulMessagesResponse(java.util.List)	com.mobileforming.android.te2.messages.OffersListFragment:  void  access$100(com.mobileforming.android.te2.messages.OffersListFragment,java.util.List)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  com.mobileforming.android.te2.maps.sdk.model.MapGrid[]  findPath(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.MapManager:  java.util.List  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.view.MapView:  void  setMapZoomConfigurations(float,float,float)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setMapZoomConfigurations(float,float,float)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(android.location.Location)
com.mobileforming.te2.core.util.ImageUtils$2:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.te2.core.util.ImageUtils$2:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asBitmap()	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asBitmap()
com.mobileforming.te2.core.auth.cache.UserAuthCache:  java.lang.String  fetchUserUUIdToken()	com.mobileforming.te2.core.auth.AuthManager:  java.lang.String  retrieveUserUUId()
com.mobileforming.te2.core.model.DeviceInfo:  int  getDisplayWidth()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$1)
com.mobileforming.android.te2.tracker.location.BeaconRepository$2:  void  <init>(com.mobileforming.android.te2.tracker.location.BeaconRepository,java.util.List,android.arch.lifecycle.MediatorLiveData)	com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.LiveData  createBeaconWatcherLiveData(java.util.List)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoDetailFragment)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$4:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.content.Context)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  fetchWalkingTime()
com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.util.DateStringUtil:  boolean  isToday(java.util.Calendar,java.util.Date)	com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.te2.core.util.DateStringUtil$Mode)
com.mobileforming.android.te2.maps.MapsModuleViewModel$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleViewModel)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1502(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setTitle(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  scheduleVenueDataRetry(long)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  long  getEventsTtl()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  cacheEvents(java.util.List,long)
com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$2202(com.mobileforming.android.te2.tracker.TrackerConfig,long)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setBackgroundBetweenScanPeriod(long)
com.mobileforming.android.te2.venue.VenueCache:  void  cacheVenue(java.lang.String,com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackLocationUpdate(com.mobileforming.te2.core.model.RegionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$27:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$27:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  name(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  access$300(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1$1:  boolean  shouldDisplayDialog()
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  com.mobileforming.android.te2.maps.sdk.model.CacheItem  retrieve(java.lang.String)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  getFromCache()
com.mobileforming.te2.core.model.EmailLink:  java.lang.String  getToAddress()	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  rx.Observable  call(java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  startRefreshingWaitTimes()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onResume()
com.mobileforming.te2.core.model.PaymentType$1:  com.mobileforming.te2.core.model.PaymentType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PaymentType$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.NavigationActivity$5:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$800(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment$8:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  call(java.lang.Object)
com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateBroadcastReceiver:  void  <init>(com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData)	com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  void  <init>(android.content.Context)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.fragment.PoiListFragment$DiningListener)	com.mobileforming.android.te2.grupo.DiningFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.tracker.location.LocationTracker$5:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initGeofenceTracker(android.content.Context)
com.mobileforming.te2.core.model.Message:  void  setVenueId(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setHighlightPois(java.util.List,boolean)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOfferForType(com.mobileforming.te2.core.model.MessageType,com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  fetchWalkingTime(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  initializeFields()	com.mobileforming.android.te2.maps.MapsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.events.EventsActivity:  void  loadDefaultEventModuleConfig()	com.mobileforming.android.te2.events.EventsActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataInfo(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.te2.core.entity.GeofenceEntity:  float  getAccuracy()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.te2.core.model.InfoLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLink$1:  com.mobileforming.te2.core.model.InfoLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  executeInUiThread(java.lang.Runnable)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupDining()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel[]  newArray(int)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.util.List  access$500(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  startMonitoringRegisteredBeacons()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  onBeaconServiceConnect()
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  scheduleCachePurge()	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  initializeSdk(android.app.Application)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  java.lang.Object  compute()
com.mobileforming.android.te2.maps.sdk.PayloadCachedRequestExecutor:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.RequestExecutor  getPayloadExecutor()
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  double  access$300(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.te2.core.model.EmailLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EmailLink$1:  com.mobileforming.te2.core.model.EmailLink  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.PaymentType:  int  getTintImageId()	com.mobileforming.te2.core.view.PaymentImageView:  void  updateBackground()
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  <init>(android.app.Application)	com.mobileforming.android.te2.tracker.location.BeaconTracker:  com.mobileforming.android.te2.tracker.location.BeaconTracker  getInstance(android.content.Context)
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getSunday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.te2.core.model.DisplayType$1:  com.mobileforming.te2.core.model.DisplayType[]  newArray(int)	com.mobileforming.te2.core.model.DisplayType$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logRejectedLocationUpdate(android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  logRejectedLocationUpdate(android.location.Location,java.lang.String)
com.mobileforming.android.te2.messages.OffersListFragment:  boolean  access$002(com.mobileforming.android.te2.messages.OffersListFragment,boolean)	com.mobileforming.android.te2.messages.OffersListFragment$1:  void  onReceive(android.content.Context,android.content.Intent)
com.mobileforming.android.te2.grupo.NavigationActivity$9:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEvents(java.lang.String,java.lang.String)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder,com.mobileforming.android.te2.maps.sdk.model.Event$1)	com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  com.mobileforming.android.te2.maps.sdk.model.Event  build()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  com.mobileforming.android.te2.events.fragment.EventsListFragment  newInstance(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.infos.fragment.LoggerFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.infos.fragment.LoggerFragment$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.infos.fragment.LoggerFragment$2:  void  <init>(com.mobileforming.android.te2.infos.fragment.LoggerFragment)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.te2.core.dialog.FullScreenDialogFragment:  void  onBackPressed()	com.mobileforming.te2.core.dialog.FullScreenDialogFragment$1:  void  onBackPressed()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isDistanceGreater(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence,float)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isLocationOutsideFence(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence)
com.mobileforming.android.te2.tracker.system.network.NetworkDetailsLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.system.network.NetworkDetailsRepository:  com.mobileforming.android.te2.tracker.system.network.NetworkDetailsLiveData  getNetworkDetailsLiveData(android.content.Context)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  com.mobileforming.te2.core.ModuleConfig  build()	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig  build()
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  content(java.lang.String)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)
com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$2002(com.mobileforming.android.te2.tracker.TrackerConfig,long)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setForegroundBetweenScanPeriod(long)
com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,android.widget.ProgressBar)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  run()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  buildOkHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$12:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,double,double)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchVenueInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getEventsByVenueIdAndDateStart(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.model.Barcode$Type:  com.mobileforming.te2.core.model.Barcode$Type[]  values()	com.mobileforming.android.te2.messages.view.BarcodeView$2:  void  <clinit>()
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createPostRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  okhttp3.Request  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.messages.MessagesModuleActivity:  android.content.Intent  createIntent(android.content.Context)	com.mobileforming.android.te2.messages.MessagesModule:  android.content.Intent  createModuleIntent(android.content.Context)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.Observer  access$1200(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.TrackerConfig:  int  getUploadDelay()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  com.mobileforming.android.te2.infos.fragment.LoggerFragment  newInstance(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  setupInfoModules(com.mobileforming.android.te2.infos.logger.LoggerInteractor)
com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData  getInstance(android.content.Context)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$12:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.MessageLinkTappedEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchWalkingTimeLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  fetchWalkingTime()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setFromSearch(boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showMapView(boolean)
com.mobileforming.te2.core.model.InfoCategory$1:  com.mobileforming.te2.core.model.InfoCategory  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoCategory$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  java.util.List  compute()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  java.lang.Object  compute()
com.mobileforming.te2.core.api.app.AppRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getPoiStatus(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  android.content.Intent  startEventIntent(android.content.Context,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  requestHandleMessageAction(com.mobileforming.te2.core.model.MessageTriggeredAction,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  getShowsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsWithDayRange(java.lang.String,java.util.Date,boolean,boolean,int)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  com.google.gson.Gson  getGson()	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.NetworkManager)
com.mobileforming.android.te2.grupo.NavigationActivity$6:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showMaps(java.lang.String,boolean,java.lang.String)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.support.v4.app.Fragment,java.lang.String,android.widget.ImageView,com.bumptech.glide.request.RequestListener)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  getShowsByVenueIdAndDateStart(java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsAfterStartDate(java.lang.String,java.util.Date,boolean,boolean)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$2:  void  <init>(com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.venue.VenueModule:  java.lang.String  getVenueId()	com.mobileforming.android.te2.venue.VenueModule:  void  getVenueDetail(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.DiningFragment$1:  void  onChanged(java.util.List)	com.mobileforming.android.te2.grupo.DiningFragment$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl[]  newArray(int)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  void  unfilterLoggerEvents()	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.te2.core.model.CommerceSchedule$1:  com.mobileforming.te2.core.model.CommerceSchedule[]  newArray(int)	com.mobileforming.te2.core.model.CommerceSchedule$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.fragment.InfoListFragment$2:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoListFragment)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  hideLoadingContainer()
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  bottomButton(java.lang.String)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  bottomButton(int)
com.mobileforming.android.te2.messages.MessagesModule:  android.app.Application  access$000(com.mobileforming.android.te2.messages.MessagesModule)	com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.util.List)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  java.lang.String  getDefaultModuleSetId()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1402(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setPushDeviceToken(java.lang.String)
com.mobileforming.te2.core.entity.GeofenceEntity:  double  getLongitude()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.te2.core.api.BaseWebService$1$1$2:  void  <init>(com.mobileforming.te2.core.api.BaseWebService$1$1)	com.mobileforming.te2.core.api.BaseWebService$1$1:  io.reactivex.SingleSource  apply(retrofit2.adapter.rxjava2.Result)
com.mobileforming.te2.core.form.FormLinearLayout:  void  access$000(com.mobileforming.te2.core.form.FormLinearLayout)	com.mobileforming.te2.core.form.FormLinearLayout$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.MapsModule:  void  <init>(android.app.Application)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.MapsModule  getInstance(android.app.Application)
com.mobileforming.te2.core.model.PathData:  void  setDestinationX(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.te2.core.model.Status$1:  com.mobileforming.te2.core.model.Status[]  newArray(int)	com.mobileforming.te2.core.model.Status$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.grupo.DiningFragment:  com.mobileforming.android.te2.grupo.DiningFragment  newInstance(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupDining()
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawTopLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  java.lang.String  access$200(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository  getInstance(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.infos.logger.models.FilterModel:  java.lang.String  getTextToShow()	com.mobileforming.android.te2.infos.adapter.FilterAdapter:  android.view.View  getCustomView(int,android.view.View,android.view.ViewGroup)
com.mobileforming.android.te2.grupo.RefApplication:  java.util.List  access$700(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.String)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.lang.String)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoListString(java.util.List)	com.mobileforming.android.te2.grupo.RefApplication:  void  onGeofencesTransactionComplete(java.util.List)
com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getAppId()	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getPassword()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener:  void  <init>(android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsModuleInteractor)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$000(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.messages.MessagesModule$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesModule)	com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()
com.mobileforming.te2.core.model.Event:  void  setCategories(java.util.List)	com.mobileforming.te2.core.model.Event:  void  updateEventTimesCategories()
com.mobileforming.te2.core.view.TileView:  int  getTitleTextColor()	com.mobileforming.te2.core.view.TileView:  void  setChecked(boolean)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.model.Event:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Event$1:  com.mobileforming.te2.core.model.Event  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setTransitionType(int)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder,com.mobileforming.android.te2.maps.sdk.model.LogEntry$1)	com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry  build()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$10:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  access$300(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$2:  void  run()
com.mobileforming.android.te2.maps.sdk.model.MapData:  void  <init>(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.Image,int,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.maps.sdk.MapDataManager$16:  java.util.List  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapDataManager$16:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseFailure(java.lang.String,okhttp3.Response)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setPassword(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$102(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  java.lang.String  access$002(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  areHeadingSensorsAvailable()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  boolean  areHeadingSensorsAvailable()
com.mobileforming.android.te2.infos.InfoModuleFragment$1$2:  void  <init>(com.mobileforming.android.te2.infos.InfoModuleFragment$1)	com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onError(java.lang.Throwable)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getNormalLocationUpdates()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$000(com.mobileforming.android.te2.tracker.location.LocationTracker,boolean)	com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.model.EventDetail:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventDetail$1:  com.mobileforming.te2.core.model.EventDetail  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.NetworkManager)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)
com.mobileforming.te2.core.model.PurchaseDetail$1:  com.mobileforming.te2.core.model.PurchaseDetail  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetail$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  long  access$200(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEvents(java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleUri(android.net.Uri,android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.Map  access$002(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.util.Map)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()
com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(android.net.Uri)	com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.MutableLiveData  access$1102(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,android.arch.lifecycle.MutableLiveData)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType:  com.mobileforming.te2.core.util.RoundedCornersTransformation$CornerType[]  values()	com.mobileforming.te2.core.util.RoundedCornersTransformation$1:  void  <clinit>()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.ArrayList  extractBeaconInfos(com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.ArrayList  access$600(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  void  access$000(com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter,android.content.Context,com.mobileforming.te2.core.model.EventFilter,android.widget.ImageButton)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5$1:  void  onMapReady()	com.mobileforming.android.te2.maps.view.MapView:  void  onReady()
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  saveLog()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  shareLoggerEvents(java.util.List)
com.mobileforming.te2.core.util.BottomNavigationViewHelper:  void  disableShiftMode(android.support.design.widget.BottomNavigationView)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUi()
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setLongitude(double)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.te2.core.model.Message$1:  com.mobileforming.te2.core.model.Message  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Message$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.venue.VenueWebService:  void  init(android.content.Context,java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.venue.VenueWebService:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.infos.InfoModuleFragment$1$1:  void  <init>(com.mobileforming.android.te2.infos.InfoModuleFragment$1)	com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.util.List)
com.mobileforming.te2.core.util.Logger:  void  v(java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadCouponMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder,com.mobileforming.android.te2.maps.sdk.model.LogEntry$1)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  access$700(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call()
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getMonday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$100(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$1:  void  run()
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  java.util.concurrent.atomic.AtomicInteger  access$000(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  java.lang.String  access$300(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder,com.mobileforming.android.te2.maps.sdk.model.Fence$1)	com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  com.mobileforming.android.te2.maps.sdk.model.Fence  build()
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupListView()	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.view.TileView:  void  setCheckedEnabled(boolean)	com.mobileforming.te2.core.view.MenuTileView:  void  init()
com.mobileforming.te2.core.model.ProductSelection:  java.lang.String  getName()	com.mobileforming.te2.core.model.ProductSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.android.te2.events.activity.EventsDetailActivity:  void  setModuleListener(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.EventsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.te2.core.analytics.AnalyticsHelper:  com.mobileforming.te2.core.analytics.AnalyticsListener  getAnalyticsListener(android.content.Context)	com.mobileforming.te2.core.analytics.AnalyticsHelper:  void  registerAnalyticsEvent(android.content.Context,com.mobileforming.te2.core.analytics.AnalyticsEvent,java.lang.String,java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6,java.util.List)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  onData(java.util.List)
com.mobileforming.te2.core.model.Time$1:  com.mobileforming.te2.core.model.Time  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Time$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.ArrayList  access$402(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.ArrayList)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.Action$1:  com.mobileforming.te2.core.model.Action[]  newArray(int)	com.mobileforming.te2.core.model.Action$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  postBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.TestDevice$libraryInfo:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.TestDevice:  void  addLibraryInfo(java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  void  processMessage(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.offers.OfferViewModel:  void  <init>(com.mobileforming.te2.core.model.Message,android.content.Context)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchMenus(java.lang.String,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  populateUI(android.view.LayoutInflater)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  clear()	com.mobileforming.te2.core.auth.AuthManager:  void  logout()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$15:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$15:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.util.List  access$700(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  access$500(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.GeofencingRequest  createAddGeofenceRequest(java.util.List,int)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)	com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileView$MenuTileItem  createItem(java.lang.String)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  boolean  access$600(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)
com.mobileforming.te2.core.model.TransactionResponse$1:  com.mobileforming.te2.core.model.TransactionResponse  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.TransactionResponse$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.te2.core.model.BeaconConfig:  float  getInsideVenueBackgroundScanPeriod()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.venue.VenueDataManager:  boolean  isRetrievingVenue(java.lang.String)	com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  access$600(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager$12:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.util.WaitTimeUtils:  java.util.List  updateRideWaitTimes(java.util.List,java.util.List,boolean)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  updateWaitTimes(java.util.List)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8,java.lang.Long)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onData(java.lang.Long)
com.mobileforming.te2.core.model.Detail$1:  com.mobileforming.te2.core.model.Detail  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Detail$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.android.te2.maps.sdk.model.VenuePayload:  java.lang.String  getName()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.messages.MessagesDetailFragment$3$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment$3)	com.mobileforming.android.te2.messages.MessagesDetailFragment$3:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  access$000(com.mobileforming.android.te2.maps.sdk.RequestExecutor,rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  call(rx.Subscriber)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  int  getExpirationTextColor()	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getLocationLiveData()	com.mobileforming.android.te2.infos.logger.LoggerViewModel:  android.arch.lifecycle.LiveData  getCurrentLocation()
com.mobileforming.android.te2.infos.logger.LoggerActivity$2:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawBottomLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.grupo.NavigationActivity$12:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEnableLocationServicesDialog(android.app.Activity)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository,com.mobileforming.te2.core.entity.LocationPermissionsEntity,com.mobileforming.te2.core.db.AppDatabase,android.content.Context)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$2:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$2:  void  call(java.lang.Object)
com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  <init>(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$HiddenListListener)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()
com.mobileforming.android.te2.maps.MapsModuleFragment$4:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  <init>()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  onData(java.lang.Object)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$6:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackGeofenceEnterExit(java.lang.String,boolean,com.mobileforming.te2.core.model.RegionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  runWaitTimeTimerUpdate()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  onActive()
com.mobileforming.android.te2.maps.sdk.DataItemImpl:  void  <init>(java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseSuccess(java.lang.String,okhttp3.Response)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  java.util.List  access$002(com.mobileforming.android.te2.infos.logger.LoggerActivity,java.util.List)	com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  onChanged(java.util.List)
com.mobileforming.te2.core.entity.GeofenceEntity:  java.util.Date  getDateOfLog()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.android.te2.maps.MapsModuleViewModel$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleViewModel$1:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  isLocationOutOfVenue(double,double,float)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.te2.core.model.Location$1:  com.mobileforming.te2.core.model.Location  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Location$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.PositionTracker:  android.content.Context  access$200(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter$1:  void  <init>(com.mobileforming.android.te2.maps.adapter.PoiListAdapter,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$10:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchPoiAllBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  triggerLastLocationEvent()
com.mobileforming.te2.core.model.PlatformUrl$1:  com.mobileforming.te2.core.model.PlatformUrl[]  newArray(int)	com.mobileforming.te2.core.model.PlatformUrl$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.messages.offers.FooterListItem:  void  <init>(int)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  showOffers(java.util.Collection)
com.mobileforming.te2.core.auth.cache.UserAuthCache:  void  <init>(android.content.Context)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$4:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig:  com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache  getMapsModuleCache()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.te2.core.model.AppConfig:  com.mobileforming.te2.core.model.LocationUpdateConfig  getMapModeLocationUpdates()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.te2.core.fragment.WebViewFragment:  void  access$200(com.mobileforming.te2.core.fragment.WebViewFragment,java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment$1:  void  onLoadResource(android.webkit.WebView,java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$12:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.util.List)	com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.ProductSelection:  java.lang.String  getLineItemId()	com.mobileforming.te2.core.model.ProductSelection:  boolean  equals(java.lang.Object)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  showLoading()	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  access$200(com.mobileforming.android.te2.messages.FeaturedMessageFragment)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getUsername()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.te2.core.model.Product$1:  com.mobileforming.te2.core.model.Product  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Product$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  cacheMapDecision(java.lang.String,com.mobileforming.android.te2.maps.sdk.MapDecision,long)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  call(rx.Subscriber)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  call(java.lang.Object)
com.mobileforming.android.te2.api.commerce.model.OfferResponse:  java.lang.String  getFinePrint()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.tracker.TrackerModule$7:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule,com.mobileforming.android.te2.tracker.TrackerConfig,android.content.Context)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.model.Payment$Builder:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$Builder$1:  com.mobileforming.te2.core.model.Payment$Builder  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  createDataCallback()	com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  access$300(com.mobileforming.te2.core.auth.AuthManager)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiStatus(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$4:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  sortPoiList(java.util.List)
com.mobileforming.te2.core.model.BeaconConfig:  float  getInsideVenueForegroundScanPeriod()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor:  java.util.List  access$000(com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor)	com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  accept(com.mobileforming.te2.core.AnalyticsEvent)
com.mobileforming.te2.core.model.EventWrapper$1:  com.mobileforming.te2.core.model.EventWrapper  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventWrapper$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.DeviceInfo:  void  setDisplayWidth(int)	com.mobileforming.android.te2.tracker.system.SystemTracker:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()
com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService$1:  void  <init>(com.mobileforming.te2.core.api.messages.MessagesRetrofitService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  fetchAllUserMessages(com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  updateWaitTimes(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.auth.AuthManager$5$1:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$5,com.mobileforming.te2.core.auth.model.AuthResponse)	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.te2.core.auth.AuthManager:  void  access$700(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$2:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$2:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.MessageAction$1:  com.mobileforming.te2.core.model.MessageAction  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.MessageAction$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  okhttp3.OkHttpClient  createOkHttpClient(okhttp3.Interceptor)	com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchWalkingTime(android.location.Location,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchWalkingTime(android.location.Location,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Message:  void  setId(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  transition(com.bumptech.glide.TransitionOptions)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  transition(com.bumptech.glide.TransitionOptions)
com.mobileforming.android.te2.events.activity.EventsDetailActivity:  android.content.Intent  createIntent(android.content.Context,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventSelected(com.mobileforming.te2.core.model.EventWrapper)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$100(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.te2.core.db.AppDatabase_Impl:  java.util.List  access$600(com.mobileforming.te2.core.db.AppDatabase_Impl)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  getProducts(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.util.InfoModuleUtils:  com.google.android.gms.tasks.Task  retrieveVenueOpeninghours(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onData(java.lang.Long)	com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupMainTabLayout()
com.mobileforming.te2.core.view.CustomCheckBox:  void  init(android.content.Context)	com.mobileforming.te2.core.view.CustomCheckBox:  void  <init>(android.content.Context)
com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData:  void  <init>()
com.mobileforming.android.te2.maps.sdk.model.TE2Beacon:  void  <init>(java.lang.String,int,int,com.mobileforming.android.te2.maps.sdk.model.TE2Beacon$1)	com.mobileforming.android.te2.maps.sdk.model.TE2Beacon$Builder:  com.mobileforming.android.te2.maps.sdk.model.TE2Beacon  build()
com.mobileforming.te2.core.model.Value$1:  com.mobileforming.te2.core.model.Value[]  newArray(int)	com.mobileforming.te2.core.model.Value$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  <init>()
com.mobileforming.android.te2.grupo.UserFragment:  boolean  access$300(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isLocationOn()	com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isLocationOn()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)
com.mobileforming.android.te2.maps.MapsModule:  void  registerMapsDataProvider(android.app.Application,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  setUpTestDevice(java.lang.String,java.lang.String,java.util.List,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2$1:  void  <init>(com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  com.mobileforming.te2.core.entity.VenueMonitorEntity  compute()
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  hideLoadingContainer()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  access$000(com.mobileforming.android.te2.infos.InfoModuleFragment)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  setInVenue(boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)
com.mobileforming.te2.core.model.ModifierSelection:  java.lang.String  getUid()	com.mobileforming.te2.core.model.ModifierSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.GetWalkingPathEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  java.util.concurrent.atomic.AtomicReference  access$100(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$3:  void  run()
com.mobileforming.android.te2.maps.MapsModuleViewModel$4:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleViewModel$4:  void  onData(java.lang.Object)
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setAppVersion(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  double  access$300(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.GeofenceHelper:  void  addGeofences(java.util.List)	com.mobileforming.android.te2.maps.sdk.GeofenceHelper:  void  updateGeofences(java.util.List,java.util.List)
com.mobileforming.android.te2.venue.VenueModule$1:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.venue.VenueModule:  void  initVenue(java.lang.String,com.mobileforming.android.te2.venue.VenueEventListener)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService$2:  void  <init>(com.mobileforming.te2.core.api.messages.MessagesRetrofitService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  fetchAllUserMessagesByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.EventAction:  void  setLabel(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  java.util.List  call()	com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  java.lang.Object  call()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache$3:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  initializeCacheManagers()
com.mobileforming.te2.core.model.PathData:  void  setDestinationY(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  com.mobileforming.android.te2.maps.sdk.model.ModelCache  buildModelCache(com.mobileforming.android.te2.maps.sdk.CacheRepository)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache)	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  initializeCacheManagers()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$4:  void  onData(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$4:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.TransactionResponse:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.TransactionResponse$1:  com.mobileforming.te2.core.model.TransactionResponse  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.TransactionResponse$1:  com.mobileforming.te2.core.model.TransactionResponse[]  newArray(int)	com.mobileforming.te2.core.model.TransactionResponse$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager$15:  rx.Observable  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapDataManager$15:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  setHighlightedPoi(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPois(com.mobileforming.te2.core.model.Category,java.util.List)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  parseFromCache(com.mobileforming.android.te2.maps.sdk.model.CacheItem)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  getFromCache()
com.mobileforming.te2.core.view.TileView:  int  access$100(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.TileView$1:  void  run()
com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(android.location.Location)	com.mobileforming.android.te2.tracker.TrackerModule$8:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.util.ImageUtils$2:  void  <init>(android.widget.ImageView)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,int)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  onHandleResponseFailure(java.lang.String,okhttp3.Response)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseFailure(java.lang.String,okhttp3.Response)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LoggerEventsEntity)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  call(java.lang.Object)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadDefaultCategories(com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  void  <init>(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter,com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)
com.mobileforming.te2.core.model.PathData:  float  getDeviceLongitude()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$8:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.network.AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.RequestData:  com.mobileforming.te2.core.network.RequestData  create(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  double  access$700(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.model.Entry$1:  com.mobileforming.te2.core.model.Entry[]  newArray(int)	com.mobileforming.te2.core.model.Entry$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  com.mobileforming.android.te2.maps.sdk.MapManager  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.venue.VenueModule$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.InfoListAdapter$InfoListListener)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupListView()
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getVenueModules(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadCategoriesByModuleId(com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.filters.EventFilterUtil:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  getEventFilterConfiguration(java.util.Map)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  fetchEventsModuleConfig()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  com.mobileforming.te2.core.model.Link  getCachedLink(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5:  void  run()
com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)
com.mobileforming.te2.core.model.CommerceSchedule:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.CommerceSchedule$1:  com.mobileforming.te2.core.model.CommerceSchedule  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.PoiPayload$Location:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.PoiPayload)	com.mobileforming.android.te2.maps.sdk.model.PoiPayload:  void  <init>()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendPOIEntry(android.location.Location,java.lang.String)
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  com.mobileforming.android.te2.infos.configuration.AboutInfoConfig  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyMapDataCallback(boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapDataManager,boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  downloadMapImage(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  java.lang.Boolean  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$9:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getPOIById(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.infos.adapter.InfoListAdapter$HeaderViewHolder,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  onBindHeaderViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.te2.core.model.InfoCategory:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.InfoCategory$1:  com.mobileforming.te2.core.model.InfoCategory  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerModule$6:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.tracker.TrackerModule$6:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getDefaultMapImagePreview(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  fetchMapImagePreviewUri(java.lang.String)
com.mobileforming.android.te2.messages.MessagesModule:  void  removeUiDelegate(com.mobileforming.android.te2.messages.MessagesUiDelegate)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onDetach()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$4:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processRemoveTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.SDKConfig  access$200(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$3:  rx.Observable  call(java.lang.Long)
com.mobileforming.android.te2.maps.MapsModuleRepository:  com.mobileforming.android.te2.maps.MapsModuleRepository  getInstance(android.app.Application)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  <init>(android.app.Application)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchPoiAllBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchPoiAllBeacons(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$RefreshRunnable:  void  cancel()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  stopRefreshingWaitTimes()
com.mobileforming.te2.core.network.RequestData:  java.lang.String  encodeCredentials(java.lang.String,java.lang.String)	com.mobileforming.te2.core.network.RequestData:  com.mobileforming.te2.core.network.RequestData  create(java.lang.String,java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  getInfoLinkTitle(java.lang.String)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onInfoLinkSelected(com.mobileforming.te2.core.model.InfoLinkData)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideCacheInterceptor(int)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,java.lang.String,int,int)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconEntry(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)
com.mobileforming.android.te2.tracker.dataprovider.BasicAuthenticationInterceptor:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.te2.core.api.BaseWebService$1:  void  <init>(com.mobileforming.te2.core.api.BaseWebService)	com.mobileforming.te2.core.api.BaseWebService:  io.reactivex.SingleTransformer  getSingleErrorTransformer()
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$300(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.te2.core.entity.GeofenceEntity:  long  getUid()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setUsername(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.te2.core.auth.AuthManager:  boolean  isUserSignedIn(com.mobileforming.te2.core.auth.model.CredentialType)	com.mobileforming.te2.core.auth.AuthManager:  void  persistResponse(com.mobileforming.te2.core.auth.model.AuthResponse,com.mobileforming.te2.core.auth.model.CredentialType)
com.mobileforming.android.te2.events.util.EventsUtility$1:  void  <init>(android.widget.ImageView,com.mobileforming.android.te2.events.filters.EventsCategoriesConfig,com.mobileforming.te2.core.model.Event,com.bumptech.glide.RequestManager)	com.mobileforming.android.te2.events.util.EventsUtility:  void  loadEventImageThumbnail(android.content.Context,com.mobileforming.te2.core.model.Event,com.mobileforming.android.te2.events.filters.EventsCategoriesConfig,android.widget.ImageView)
com.mobileforming.android.te2.maps.dataprovider.MapInfo:  java.lang.String  getUrl()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.location.LocationTracker$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerModule$1:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.TrackerModule$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  initializeCacheManagers()
com.mobileforming.te2.core.db.AppDatabase_Impl:  void  access$400(com.mobileforming.te2.core.db.AppDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.te2.core.model.PurchaseDetailLink$1:  com.mobileforming.te2.core.model.PurchaseDetailLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetailLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  initializeAppUserId()	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.ConfigRepository)
com.mobileforming.te2.core.entity.GeofenceEntity:  double  getLatitude()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  int  access$902(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,int)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  boolean  isNetworkAvailable()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  addGeofence(com.mobileforming.te2.core.model.GeofenceInfo)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  handleGeofenceDataCallback(java.util.List)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  com.mobileforming.android.te2.infos.fragment.InfoDetailFragment  newInstance(com.mobileforming.te2.core.model.InfoLink,com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.infos.activity.InfoDetailActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  getLocationPermissionsMutableLiveData()	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$002(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)	com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.android.te2.infos.activity.InfoDetailActivity:  void  setModuleListener(com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.infos.InfoModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  hideWaitTimes()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()
com.mobileforming.te2.core.auth.model.error.IncorrectCredentialsException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  com.mobileforming.te2.core.auth.model.error.AuthException  'from'(retrofit2.Response)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  access$300(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawTopRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)
com.mobileforming.te2.core.model.Payment:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.PaymentType,java.lang.String,java.lang.String)	com.mobileforming.te2.core.model.Payment:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.PaymentType,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Payment$1)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingError(java.lang.String)	com.mobileforming.android.te2.messages.MessagesModule$1:  void  onError(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$5:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  com.mobileforming.android.te2.infos.dataprovider.InfoModuleInteractor  getInfoModuleInteractor()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  restart()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  restart()
com.mobileforming.te2.core.form.FormLinearLayout:  void  handleInternalClick()	com.mobileforming.te2.core.form.FormLinearLayout:  void  access$000(com.mobileforming.te2.core.form.FormLinearLayout)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  call(java.lang.Throwable)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setTrackerModuleInteractor(com.mobileforming.android.te2.tracker.dataprovider.TrackerModuleInteractor)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.te2.core.analytics.processor.AnalyticsPattern:  java.util.List  getAnalyticsSteps()	com.mobileforming.te2.core.analytics.processor.AnalyticsPattern:  boolean  evaluate(com.mobileforming.te2.core.AnalyticsEvent)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$RefreshRunnable:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.poi.PoiStatusLiveData)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  startRefreshingWaitTimes()
com.mobileforming.te2.core.model.PathData:  void  setDeviceY(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  access$200(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.MutableLiveData  access$1300(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconTrackerStarted()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  start()
com.mobileforming.te2.core.model.Status$1:  com.mobileforming.te2.core.model.Status  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Status$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  setDialogStyleTheme(int)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder  setDialogStyleTheme(int)
com.mobileforming.android.te2.venue.VenueModule:  void  start(java.util.List,com.mobileforming.android.te2.venue.VenueEventListener)	com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()
com.mobileforming.te2.core.model.EventTriggeredAction:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  long  access$100(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$8:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.lang.String  getDensity()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.lang.String  selectImageUrl(java.util.List)
com.mobileforming.android.te2.tracker.TrackerModule:  void  setTrackerEventListener(com.mobileforming.android.te2.tracker.TrackerEventListener)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$6:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$6:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  findNextHours(java.util.List,java.util.Date)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  access$100(java.util.List,java.util.Date)
com.mobileforming.android.te2.tracker.system.network.NetworkUtils:  boolean  hasWifiStatePermission(android.content.Context)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.messages.OffersListFragment$1:  void  <init>(com.mobileforming.android.te2.messages.OffersListFragment)	com.mobileforming.android.te2.messages.OffersListFragment:  void  <init>()
com.mobileforming.te2.core.model.EmailLink:  java.lang.String  getBody()	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)
com.mobileforming.te2.core.model.Category$1:  com.mobileforming.te2.core.model.Category[]  newArray(int)	com.mobileforming.te2.core.model.Category$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.MapsModuleFragment$20$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$20)	com.mobileforming.android.te2.maps.MapsModuleFragment$20:  void  run()
com.mobileforming.android.te2.grupo.RefApplication:  biz.te2.guestsurvey.config.SurveyModuleConfig  access$602(com.mobileforming.android.te2.grupo.RefApplication,biz.te2.guestsurvey.config.SurveyModuleConfig)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.android.te2.maps.sdk.ServerConfig:  java.lang.String  getUsername()	com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  addPositionEventListener(com.mobileforming.android.te2.tracker.location.PositionEventListener)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$6:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.venue.VenueWebService:  void  getVenueInfo(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUser()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()
com.mobileforming.te2.core.auth.cache.AuthTokenCache:  void  <init>(android.content.Context)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.MessagesBadgeUpdater:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$1:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyCouponMessagesAvailable(java.util.List)	com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapManager:  long  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository:  void  logGeofenceExit(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.entity.GeofenceEntity,boolean)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener  access$100(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$2:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  itemId(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.auth.api.AuthTokenWebService$1:  void  <init>(com.mobileforming.te2.core.auth.api.AuthTokenWebService,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  acquireToken(com.mobileforming.te2.core.auth.model.TE2AuthRequest,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$6:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$6:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  fetchWalkingTime(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.List  access$800(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  java.util.TimeZone  access$202(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.TimeZone)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.util.TimeZone)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.model.CacheItem:  boolean  isStale()	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  parseFromCache(com.mobileforming.android.te2.maps.sdk.model.CacheItem)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  resetBeaconManager()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  start()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$1:  void  <init>(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  id(java.lang.String)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)
com.mobileforming.te2.core.util.WebArrayList:  long  extractTtl(java.util.Map)	com.mobileforming.te2.core.util.WebArrayList:  void  setTtl(java.util.Map)
com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getName()	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  lon(double)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.model.WebLink:  void  setUrl(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  showRecenterFab()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hidePoiPeek()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  initGlideIfNull()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment,boolean)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  displayWaitTimeMessage(boolean)
com.mobileforming.te2.core.model.LocationLink$1:  com.mobileforming.te2.core.model.LocationLink[]  newArray(int)	com.mobileforming.te2.core.model.LocationLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.model.PaymentType$1:  com.mobileforming.te2.core.model.PaymentType[]  newArray(int)	com.mobileforming.te2.core.model.PaymentType$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.TrackerConfig:  float  access$2302(com.mobileforming.android.te2.tracker.TrackerConfig,float)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationAccuracyThreshold(float)
com.mobileforming.te2.core.entity.BeaconsEntity:  int  getMinor()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.te2.core.auth.model.error.AccountLockedException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  com.mobileforming.te2.core.auth.model.error.AuthException  'from'(retrofit2.Response)
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.device.DeviceRetrofitWebService,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  sendUserTag(com.google.gson.JsonObject,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Place$1:  com.mobileforming.te2.core.model.Place[]  newArray(int)	com.mobileforming.te2.core.model.Place$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.logger.LoggerViewModel:  android.arch.lifecycle.LiveData  getCurrentLocation()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  com.mobileforming.android.te2.messages.FeaturedMessageFragment  newInstance()	com.mobileforming.android.te2.messages.MessagesModule:  android.support.v4.app.Fragment  fetchFeaturedMessageFragment()
com.mobileforming.te2.core.model.EmailLink:  void  setSubject(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.te2.core.model.Message:  java.lang.String  linkType()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$8:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconServiceConnect()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  onBeaconServiceConnect()
com.mobileforming.android.te2.events.util.EventsUtility$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.events.util.EventsUtility$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionEvent$Action)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendGeofenceEntry(android.location.Location,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  java.util.List  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.MessageLinkTappedEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  postMessageLinkTapped(com.mobileforming.te2.core.model.Message,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.infos.logger.LoggerActivity$1:  void  onChanged(android.location.Location)	com.mobileforming.android.te2.infos.logger.LoggerActivity$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$11:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$14:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  storePoiInstance(java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$300(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,java.util.List)
com.mobileforming.android.te2.events.EventsActivity:  void  setModuleListener(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.EventsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository:  void  monitorNewVenue(com.mobileforming.te2.core.db.AppDatabase,java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  long  access$200(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)	com.mobileforming.android.te2.maps.sdk.model.CacheItem:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder)
com.mobileforming.te2.core.auth.cache.AuthTokenCache:  java.lang.String  fetchRefreshToken()	com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.auth.AuthTokenServiceInterceptor:  java.lang.String  getEncodedCredentials()	com.mobileforming.te2.core.auth.AuthTokenServiceInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackDeviceInformationEvent(com.mobileforming.te2.core.model.DeviceInformationEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$4:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapDataManager,boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  void  filterLoggerEvents(java.lang.String[])	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$HiddenListListener  access$000(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener:  void  unregisterLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onAttachedToWindow()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$900(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapDataManager$25:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.fragment.WebViewFragment$1:  void  <init>(com.mobileforming.te2.core.fragment.WebViewFragment)	com.mobileforming.te2.core.fragment.WebViewFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.te2.core.model.WebLink$1:  com.mobileforming.te2.core.model.WebLink[]  newArray(int)	com.mobileforming.te2.core.model.WebLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  java.util.Map  getEventFilters()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  fetchEventsModuleConfig()
com.mobileforming.android.te2.maps.view.MapView$PoiState:  com.mobileforming.android.te2.maps.view.MapView$PoiState[]  values()	com.mobileforming.android.te2.maps.view.MapView$2:  void  <clinit>()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.model.SpecialStatus:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.SpecialStatus$1:  com.mobileforming.te2.core.model.SpecialStatus  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.MutableLiveData  getBeaconsInRangeLiveData()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  <init>(android.app.Application)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$16:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.model.Menu:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Menu$1:  com.mobileforming.te2.core.model.Menu  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.NavigationActivity$4:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMessagesModule()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  deleteMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  access$000(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  com.mobileforming.te2.core.entity.LocationHistoryEntity  compute()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.MapDataManager$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)
com.mobileforming.android.te2.messages.OffersListFragment:  void  access$100(com.mobileforming.android.te2.messages.OffersListFragment,java.util.List)	com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onData(java.util.List)
com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueList(java.util.List,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule$4:  void  run()
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  android.graphics.Bitmap  transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)	com.mobileforming.te2.core.util.BitmapTransformation:  com.bumptech.glide.load.engine.Resource  transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)
com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  java.lang.String  getVenueIdIfInLocation(android.location.Location)	com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  onChanged(android.location.Location)
com.mobileforming.te2.core.view.TileView:  int  access$000(com.mobileforming.te2.core.view.TileView)	com.mobileforming.te2.core.view.TileView$1:  void  run()
com.mobileforming.android.te2.messages.MessagesModuleConfig:  com.mobileforming.android.te2.messages.dataprovider.MessagesModuleInteractor  getMessagesModuleInteractor()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)
com.mobileforming.android.te2.api.commerce.model.Barcode:  java.lang.String  getFormat()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$2:  void  <init>(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int,android.content.Context)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadInfoMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.grupo.RefApplication:  void  createModules()	com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.util.List  access$600(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.messages.MessagesModule:  boolean  hasRedeemedOffer()	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onResume()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.android.te2.tracker.TrackerModule$4:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.api.app.AppRetrofitWebService$5:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getAllPoi(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  java.lang.String  getLanguageTag()	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  accuracy(double)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.form.FormData:  void  <init>(java.util.Map)	com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  parseMenus(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadMenus(java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.EventAction:  void  setIconResourceId(int)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  setBackgroundMode(boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  access$200(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule,boolean)
com.mobileforming.android.te2.grupo.RefApplication$4:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication,com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  <init>(com.mobileforming.android.te2.infos.InfoModuleFragment)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  loadCategories()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPosition(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  access$000(com.mobileforming.android.te2.maps.sdk.RequestExecutor,rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  java.util.Date  access$002(com.mobileforming.android.te2.maps.poi.PoiStatusLiveData,java.util.Date)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationInsideVenue(double,double,float,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationInsideVenue(java.lang.String,double,double,float)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadMenus(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$5:  void  run()
com.mobileforming.te2.core.model.BeaconInfo$1:  com.mobileforming.te2.core.model.BeaconInfo[]  newArray(int)	com.mobileforming.te2.core.model.BeaconInfo$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.location.PositionTracker:  double  access$902(com.mobileforming.android.te2.tracker.location.PositionTracker,double)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)
com.mobileforming.android.te2.maps.MapsModuleRepository$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleRepository$1:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchBeacons(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.DeviceInfo:  void  setDisplayHeight(int)	com.mobileforming.android.te2.tracker.system.SystemTracker:  com.mobileforming.te2.core.model.DeviceInfo  fetchDeviceInfo()
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$29:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.exception.DataException)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postNotifyPositionFailure(com.mobileforming.android.te2.maps.sdk.exception.DataException)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$100(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.messages.MessagesListFragment:  com.mobileforming.android.te2.messages.MessagesListFragment  newInstance()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMessagesModule()
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  onPreExecuteRequest()	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$13:  void  call(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$13:  void  call(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10,java.lang.StringBuilder)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  access$200(com.mobileforming.android.te2.maps.fragment.PoiListFragment,boolean,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$2$2:  void  run()
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  double  access$600(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  loadCategories()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.te2.core.model.Position:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Position$1:  com.mobileforming.te2.core.model.Position  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.te2.core.model.LocationLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.LocationLink$1:  com.mobileforming.te2.core.model.LocationLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.lang.String  access$100(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.DiningFragment,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.grupo.UserFragment:  biz.te2.guestsurvey.listeners.SurveyModuleListener  access$200(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$900(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.List,java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.LocationConfigManager  access$1000(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.Object)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.lang.Object)
com.mobileforming.android.te2.maps.fragment.DiningFragment$1:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.DiningFragment$1:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$12:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  setUpTestDevice(java.lang.String,java.lang.String,java.util.List,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  void  setAppDatabase(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener  getModuleListener()	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModuleFragment  getEventsModuleFragment()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  initBarcode(com.mobileforming.te2.core.model.Barcode)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)
com.mobileforming.android.te2.maps.view.SubCategoryTabView:  void  init(java.lang.CharSequence)	com.mobileforming.android.te2.maps.view.SubCategoryTabView:  void  <init>(android.content.Context,java.lang.CharSequence)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$ItemViewHolder,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.te2.core.model.EventWrapper:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventWrapper$1:  com.mobileforming.te2.core.model.EventWrapper  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$3:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$3:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.PurchaseDetail:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetail$1:  com.mobileforming.te2.core.model.PurchaseDetail  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.form.FormEditText:  com.mobileforming.te2.core.form.FormEditTextInputManager  access$000(com.mobileforming.te2.core.form.FormEditText)	com.mobileforming.te2.core.form.FormEditText$1:  void  onFocusChange(android.view.View,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupHome()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()
com.mobileforming.te2.core.entity.VenueMonitorEntity:  void  setUid(long)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  com.mobileforming.te2.core.entity.VenueMonitorEntity  compute()
com.mobileforming.android.te2.tracker.multivenue.observers.BeaconSetObserver:  void  onChanged(java.util.Set)	com.mobileforming.android.te2.tracker.multivenue.observers.BeaconSetObserver:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager$22:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyMapDataCallback(boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment$2)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy$PositionMarkerWithDistance[]  findNearestMarkersWithPosition(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.android.te2.maps.sdk.model.LatLon  convertPositionToLatLon(com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)
com.mobileforming.android.te2.maps.MapsModuleActivity:  void  setModuleListener(com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.maps.MapsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawOtherBottomLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.te2.core.model.Barcode$1:  com.mobileforming.te2.core.model.Barcode[]  newArray(int)	com.mobileforming.te2.core.model.Barcode$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.db.AppDatabase_Impl:  java.util.List  access$000(com.mobileforming.te2.core.db.AppDatabase_Impl)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onCreate(android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  setupImageView()	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  requestUrl(java.lang.String)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupListView()	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  refreshPoisLiveData()	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchPoisLiveData()
com.mobileforming.android.te2.maps.util.MapFileUtils:  int  calculateSampleSize(android.graphics.BitmapFactory$Options,int,int)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  cacheMap(java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapInfo)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  void  <init>(int[][])	com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupListView()	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$1:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$1:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.model.MessageType$1:  com.mobileforming.te2.core.model.MessageType[]  newArray(int)	com.mobileforming.te2.core.model.MessageType$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.AppConfig:  int  getMaxAgeInSeconds()	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  cleanup()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  <init>(com.mobileforming.android.te2.messages.FeaturedMessageFragment$1)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)
com.mobileforming.te2.core.model.ProductSelection:  java.util.List  getModifierSelections()	com.mobileforming.te2.core.model.ProductSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.android.te2.messages.offers.OfferListItem:  void  unbind(android.view.View)	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  unbind(java.lang.Object)
com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  void  <init>(java.lang.String,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.caching.CacheManager)	com.mobileforming.android.te2.venue.VenueCache:  void  cacheVenue(java.lang.String,com.mobileforming.te2.core.model.Venue,java.util.Map)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  logTag(java.lang.String)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.Payment:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.PaymentType,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Payment$1)	com.mobileforming.te2.core.model.Payment$Builder:  com.mobileforming.te2.core.model.Payment  build()
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  restart()	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  setMapModeEnabled(boolean)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  java.util.List  access$400(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  <init>(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$LoggerListListener,android.util.DisplayMetrics)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  setupList(android.view.View)
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getWednesday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)	com.mobileforming.android.te2.venue.VenueModule:  void  <init>(com.mobileforming.android.te2.venue.VenueModuleConfig,android.content.Context)
com.mobileforming.te2.core.model.EventTime$1:  com.mobileforming.te2.core.model.EventTime  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventTime$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  com.mobileforming.android.te2.maps.sdk.MapIdentifier  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$3:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerModule$8:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule:  void  setupLogger()
com.mobileforming.te2.core.form.FormSubmitButton:  android.view.View$OnClickListener  access$000(com.mobileforming.te2.core.form.FormSubmitButton)	com.mobileforming.te2.core.form.FormSubmitButton$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.PreferencesRepository:  void  writeDownloadTimestamp(long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onVenueDataReady()
com.mobileforming.android.te2.grupo.NavigationActivity:  biz.te2.guestsurvey.utils.SurveyRunnable  access$102(com.mobileforming.android.te2.grupo.NavigationActivity,biz.te2.guestsurvey.utils.SurveyRunnable)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.events.activity.EventsDetailActivity:  void  onLocationClick(com.mobileforming.te2.core.model.EventVenue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.tracker.TrackerModule:  void  beaconsInRange(java.util.List)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  beaconsInRange(java.util.List)
com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  launchNativeApp(java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  access$100(com.mobileforming.te2.core.fragment.WebViewFragment,java.lang.String)
com.mobileforming.te2.core.model.Sticker$1:  com.mobileforming.te2.core.model.Sticker  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Sticker$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Message:  java.lang.String  couponId()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  java.util.List  compute()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  onData(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isValidTrackerConfig(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawOtherTopLeftRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$800(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showPoiDetails(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1000(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showTargetCategory(boolean,java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showMaps(java.lang.String,boolean,java.lang.String)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.api.commerce.model.Barcode:  java.lang.String  getData()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.grupo.user.VenueRepository$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.user.VenueRepository$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager:  void  access$400(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUi()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView,int)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView)
com.mobileforming.te2.core.model.Order$1:  com.mobileforming.te2.core.model.Order  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Order$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  onDialogDateSet(int,int,int)	com.mobileforming.te2.core.view.Te2DatePickerDialog:  void  onDateSet(android.widget.DatePicker,int,int,int)
com.mobileforming.te2.core.model.TestDevice:  void  setAppId(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  long  fetchMaxDate()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl$2:  void  <init>(int)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideOfflineCacheInterceptor(int)
com.mobileforming.te2.core.model.Section:  void  setDescription(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()
com.mobileforming.te2.core.util.JsonUtil$1:  void  <init>(com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.util.JsonUtil:  void  fetchJsonResponseFromUrl(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$4:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$4:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  getWaitTimes()
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1202(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setVersion(java.lang.String)
com.mobileforming.te2.core.model.EmailLink:  java.lang.String  getSubject()	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$19:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.model.InfoEmailDetailItem:  java.lang.String  getSubject()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  <init>(com.mobileforming.android.te2.maps.poi.PoiStatusLiveData)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  refreshWaitTimes()
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker$1:  void  <init>(com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker)	com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  postMessageLinkTapped(com.mobileforming.te2.core.model.Message,int)
com.mobileforming.te2.core.model.EventDetail$1:  com.mobileforming.te2.core.model.EventDetail  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventDetail$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$22:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  buildOkHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context)
com.mobileforming.android.te2.maps.sdk.NetworkType:  com.mobileforming.android.te2.maps.sdk.NetworkType  fromNetworkInfo(android.net.NetworkInfo)	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  notifyNetworkStateChangeEvent(boolean,android.net.NetworkInfo)
com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.system.SystemTracker$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  android.content.Intent  access$502(com.mobileforming.android.te2.messages.FeaturedMessageFragment,android.content.Intent)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(android.content.Intent)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$3:  void  onSuccess(java.lang.Void)
com.mobileforming.te2.core.model.Order$1:  com.mobileforming.te2.core.model.Order[]  newArray(int)	com.mobileforming.te2.core.model.Order$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.model.VenuePayload:  com.mobileforming.android.te2.maps.sdk.model.VenueLocation  getLocation()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.te2.core.model.User$1:  com.mobileforming.te2.core.model.User  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.User$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.MapsModuleFragment:  int  access$502(com.mobileforming.android.te2.maps.MapsModuleFragment,int)	com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.util.List)
com.mobileforming.te2.core.util.WebArrayList:  java.util.Map  extractHeader(okhttp3.Headers)	com.mobileforming.te2.core.util.WebArrayList:  void  setTtl(okhttp3.Headers)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onSuccess(java.lang.Object,java.util.Map)
com.mobileforming.te2.core.util.CropTransformation:  android.graphics.Bitmap  transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)	com.mobileforming.te2.core.util.BitmapTransformation:  com.bumptech.glide.load.engine.Resource  transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupListView()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  access$200(com.mobileforming.android.te2.messages.MessagesListFragment)
com.mobileforming.android.te2.maps.MapsModuleFragment:  java.util.List  access$302(com.mobileforming.android.te2.maps.MapsModuleFragment,java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener:  void  <init>(com.mobileforming.te2.core.form.FormCheckBox$1)	com.mobileforming.te2.core.form.FormCheckBox:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  com.mobileforming.android.te2.maps.sdk.model.Fence$State  access$600(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1:  void  run()
com.mobileforming.te2.core.model.PaymentType:  int  getImageId()	com.mobileforming.te2.core.view.PaymentImageView:  void  updateBackground()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(java.lang.Object,java.util.Map)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMessagesModule()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  parsePoiStatus(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onNetworkAvailabilityUpdated(boolean,boolean)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackNetworkState()
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.Object,long)
com.mobileforming.te2.core.model.ModifierSelection:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.ModifierSelection$1:  com.mobileforming.te2.core.model.ModifierSelection  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5$1:  void  onMapLoaded()	com.mobileforming.android.te2.maps.view.MapView:  void  onImageLoaded()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$6:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setCompassBearingUpdateFrequency(int)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)
com.mobileforming.android.te2.tracker.TrackerModule:  android.arch.lifecycle.LiveData  getLocationLiveData()	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getLocationLiveData()
com.mobileforming.te2.core.view.CustomButton:  java.lang.Object  access$600(com.mobileforming.te2.core.view.CustomButton)	com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.TE2SDKGsonBuilder:  com.google.gson.Gson  buildGsonInstance()	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.android.te2.maps.sdk.HeadingProcessor$CachedArrays:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingProcessor$1)	com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.model.Message:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Message$1:  com.mobileforming.te2.core.model.Message  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.network.RequestInterceptor$1:  void  <init>(com.mobileforming.te2.core.network.RequestInterceptor,java.util.concurrent.BlockingQueue)	com.mobileforming.te2.core.network.RequestInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  messageFromPoiChildToParent()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.te2.core.model.Time:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Time$1:  com.mobileforming.te2.core.model.Time  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.model.EventTriggeredAction:  java.lang.String  getKey()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventActionClick(com.mobileforming.te2.core.model.EventTriggeredAction)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  getEventsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsWithDayRange(java.lang.String,java.util.Date,boolean,boolean,int)
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onInfoLinkSelected(com.mobileforming.te2.core.model.InfoLinkData)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  boolean  access$000()	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl$2:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  updateMessageState()	com.mobileforming.android.te2.messages.MessagesListFragment:  void  onResume()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  boolean  isWebLink(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  boolean  access$600(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.lang.String)
com.mobileforming.te2.core.model.EventAction:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventAction$1:  com.mobileforming.te2.core.model.EventAction  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.util.DateStringUtil:  java.lang.String  getLocalDateTime(android.content.Context,java.util.TimeZone,java.util.Date)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$HeaderViewHolder,int)
com.mobileforming.te2.core.model.ModifierSelection$1:  com.mobileforming.te2.core.model.ModifierSelection  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ModifierSelection$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpCache(okhttp3.OkHttpClient$Builder,android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.OkHttpClient  buildOkHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$4:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData$1:  void  <init>(com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData)	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  runWaitTimeTimerUpdate()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <init>(android.os.Parcel,com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.te2.core.listeners.LocationUpdateListener)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  onResume()
com.mobileforming.te2.core.model.Message:  void  setThumbnailImageUrl(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$600(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.messages.MessagesModule:  void  offerRedemptionCancelled()	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onResume()
com.mobileforming.te2.core.model.Poi$1:  com.mobileforming.te2.core.model.Poi  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Poi$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  calculateAndNotifyPosition(double,double)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationChanged(double,double,float)
com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.auth.cache.AuthTokenCache  access$200(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.auth.AuthManager$1:  void  run()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.entity.LocationHistoryEntity:  long  getEventId()	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)
com.mobileforming.android.te2.grupo.NavigationActivity:  com.mobileforming.android.te2.infos.InfoModuleListener  getInfoModuleListener()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onAttach(android.content.Context)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  setGeofenceEventListener(com.mobileforming.android.te2.tracker.location.GeofenceEventListener)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initGeofenceTracker(android.content.Context)
com.mobileforming.te2.core.view.CustomTextView:  void  init(android.content.Context)	com.mobileforming.te2.core.view.CustomTextView:  void  <init>(android.content.Context)
com.mobileforming.te2.core.api.messages.model.MessageInfo:  int  getType()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.activity.PoiDetailActivity:  void  setMapsDataProvider(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.MapsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackFailure(com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$300(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.lang.Throwable)
com.mobileforming.te2.core.model.EventVenue$1:  com.mobileforming.te2.core.model.EventVenue  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventVenue$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager$21:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyMapDataCallback(boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyMessagesAvailable(java.util.List)	com.mobileforming.android.te2.messages.MessagesModule$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.activity.PoiDetailActivity:  void  setModuleListener(com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.maps.MapsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$5:  void  call(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  access$500(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,java.util.List)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1:  void  run()
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  com.mobileforming.te2.core.model.MessageAction  getMessageAction(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1100(com.mobileforming.android.te2.maps.MapsModuleFragment,java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$5:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$5:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus  convertStatus(com.mobileforming.te2.core.model.NetworkStatus)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()	com.mobileforming.android.te2.tracker.TrackerModule:  void  postAppNotificationState()
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache$1:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleCache)	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  initializeCacheManagers()
com.mobileforming.te2.core.util.Logger:  void  e(java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  onError(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupModules()
com.mobileforming.android.te2.messages.offers.OfferListView:  void  showOffers(java.util.Collection)	com.mobileforming.android.te2.messages.OffersListFragment:  void  handleSuccessfulMessagesResponse(java.util.List)
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  infoDetailsPageViewed(com.mobileforming.te2.core.model.Link)	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)
com.mobileforming.te2.core.view.PaymentImageView:  void  setPaymentType(com.mobileforming.te2.core.model.PaymentType)	com.mobileforming.te2.core.view.PaymentImageView:  void  init()
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getImageUri()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.te2.core.model.PurchaseDetailLink$1:  com.mobileforming.te2.core.model.PurchaseDetailLink[]  newArray(int)	com.mobileforming.te2.core.model.PurchaseDetailLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.view.MapView:  float  getNormalizedScale(float)	com.mobileforming.android.te2.maps.view.MapView:  float  getNormalizedScale()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$4:  void  <init>(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int,android.content.Context)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadPoiImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.fragment.EventsListFragment$7:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  access$300(com.mobileforming.te2.core.model.openinghours.Day)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  setCurrentVenue(java.lang.String)
com.mobileforming.te2.core.model.InfoLinkData$1:  com.mobileforming.te2.core.model.InfoLinkData[]  newArray(int)	com.mobileforming.te2.core.model.InfoLinkData$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  void  <init>(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)
com.mobileforming.android.te2.maps.activity.PoiDetailActivity:  int  getThemedColor(int)	com.mobileforming.android.te2.maps.activity.PoiDetailActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1700(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initGeofenceTracker(android.content.Context)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.grupo.NavigationActivity$16$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity$16,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.te2.core.model.Product:  java.lang.String  getPurchaseLink()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onLaunchWebView(com.mobileforming.te2.core.model.Product,boolean)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$3:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$3:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl[]  newArray(int)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.view.MenuTileView:  void  openMenu()	com.mobileforming.te2.core.view.MenuTileView:  void  onClick(android.view.View)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  java.util.List  setFiltersData()	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  initCustomSpinner(android.view.View)
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  downloadOnly()	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  downloadOnly()
com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.lang.String  getSubTitle()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  updateBadgeCounter(android.view.MenuItem)	com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  onPrepareOptionsMenu(android.view.Menu)
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  startRefreshingWaitTimes()	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  onActive()
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  float  access$800(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  setupInfoModules(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getDefaultMapImage(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  java.lang.String  getMapImageUri(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$500(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.infos.logger.models.FilterModel:  java.lang.String  getKey()	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getLocalAllMapsUrl(java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  access$500(java.lang.String)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.auth.AuthInterceptor$1:  void  onData(java.lang.String)	com.mobileforming.te2.core.auth.AuthInterceptor$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  deleteMaps()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleIntent(android.content.Intent)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onNewIntent(android.content.Intent)
com.mobileforming.android.te2.maps.sdk.MapDataManager$14:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.tracker.system.location.LocationStateReceiver:  void  <init>(com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData)	com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  onActive()
com.mobileforming.te2.core.model.HoursLink$1:  com.mobileforming.te2.core.model.HoursLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.HoursLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isStarted()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onRequestPermissionsResult(int,java.lang.String[],int[])
com.mobileforming.android.te2.maps.sdk.RxUtil:  void  checkOnUiThread()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)
com.mobileforming.te2.core.entity.GeofenceEntity:  void  setAccuracy(float)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  com.mobileforming.te2.core.entity.GeofenceEntity  compute()
com.mobileforming.te2.core.util.ColorUtil:  int  getStatusBarColor(int)	com.mobileforming.android.te2.grupo.RefApplication:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  as(java.lang.Class)	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  as(java.lang.Class)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  postStop()	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadAndSaveMap()
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  void  <init>(com.mobileforming.te2.core.model.Message,android.content.res.Resources)	com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.android.te2.grupo.DiningFragment:  void  diningFilterApplied(com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setCategory(com.mobileforming.te2.core.model.Category)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$6:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getShowsByVenueIdAndDateStartWithDayRange(java.lang.String,java.lang.String,java.lang.Integer,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.model.EmailLink$1:  com.mobileforming.te2.core.model.EmailLink[]  newArray(int)	com.mobileforming.te2.core.model.EmailLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.messages.util.DateTimeUtil:  long  getExpirationWindowInMillis()	com.mobileforming.android.te2.messages.util.DateTimeUtil:  boolean  isMessageExpiring(java.util.Date,long)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$1:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)
com.mobileforming.te2.core.auth.model.error.AccountLockoutWarningException:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.model.error.AuthException:  com.mobileforming.te2.core.auth.model.error.AuthException  'from'(retrofit2.Response)
com.mobileforming.android.te2.venue.VenueModule$3:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  getVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setMapsModuleFragmentListener(com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()
com.mobileforming.android.te2.messages.offers.OfferViewModel:  boolean  isMobileOnly()	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)
com.mobileforming.android.te2.maps.MapsModuleFragment$15$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$15$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  shareLoggerEvents(java.util.List)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  boolean  onOptionsItemSelected(android.view.MenuItem)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.util.List,java.util.Map)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onSuccess(java.lang.Object,java.util.Map)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$18:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  assignViewReferences()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.detail.OfferDetailContract$Presenter)
com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  handleBackPressed()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onBackPressed()
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  clearFilterEvents()	com.mobileforming.android.te2.events.EventsModuleFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$13:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  calculateAndNotifyPosition(double,double)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  com.mobileforming.android.te2.maps.fragment.PoiListFragment  newInstance(java.util.List,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackLocationAccessEvent(com.mobileforming.te2.core.model.LocationAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getBodyText()	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)
com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  float  getMagneticNorthBearing(android.location.Location)	com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  processHeadingFromLocation(android.location.Location)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  resumeState(int)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,com.mobileforming.android.te2.maps.view.MapView,java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  showWalkingPathForPoi(java.util.List)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setLocationEventListener(com.mobileforming.android.te2.tracker.location.LocationEventListener)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onSuccess(com.mobileforming.te2.core.model.UserInterfaceDisplayCategorization,java.util.Map)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  access$000(com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository,java.util.LinkedList)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyMapDataCallback(boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.model.Product$1:  com.mobileforming.te2.core.model.Product[]  newArray(int)	com.mobileforming.te2.core.model.Product$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.model.InfoLink$1:  com.mobileforming.te2.core.model.InfoLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  long  access$1000(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.messages.OffersListFragment$2:  void  <init>(com.mobileforming.android.te2.messages.OffersListFragment)	com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.te2.core.DataCallback  createDataCallback()
com.mobileforming.te2.core.model.Sticker:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Sticker$1:  com.mobileforming.te2.core.model.Sticker  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$7:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  appState(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.ModifierSelection$1:  com.mobileforming.te2.core.model.ModifierSelection[]  newArray(int)	com.mobileforming.te2.core.model.ModifierSelection$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.maps.adapter.PoiListAdapter$PoiListListener,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData  getInstance(android.content.Context)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.RefApplication$4:  void  run()
com.mobileforming.android.te2.maps.sdk.HeadingProcessor$CachedArrays:  void  resetMatrix()	com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  onSensorChanged(android.hardware.SensorEvent)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails  build()	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier,rx.Observable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getLocalMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1,java.lang.String)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1:  void  run()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode)	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$1)
com.mobileforming.android.te2.maps.sdk.ServerConfig:  java.lang.String  getBaseUrl()	com.mobileforming.android.te2.maps.sdk.RequestFactory:  java.lang.String  buildUrl(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  int  getDialogStyleTheme()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.MapDataManager$21:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapDataManager$21:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  com.mobileforming.android.te2.maps.sdk.MapManager  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onDialogDismissed()	com.mobileforming.android.te2.messages.offers.OfferRedeemedDialogFragment:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.MapsModuleActivity:  void  setMapsDataProvider(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.MapsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  onClick(android.view.View)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.te2.core.form.FormLinearLayout$1:  void  <init>(com.mobileforming.te2.core.form.FormLinearLayout)	com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$1:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processNextTransaction()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$4:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchAppConfig(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.MutableLiveData  access$1302(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,android.arch.lifecycle.MutableLiveData)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$7:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getPOIsByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$12:  rx.Observable  call(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapDataManager$12:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$14:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.model.Event:  void  setName(java.lang.String)	com.mobileforming.te2.core.model.Event:  void  updateEventTimesCategories()
com.mobileforming.te2.core.network.RequestInterceptor:  void  <init>(java.util.Map,java.util.Map,com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  void  initializeClientIfNull()
com.mobileforming.te2.core.caching.GsonFileCache$1:  void  <init>(com.mobileforming.te2.core.caching.GsonFileCache)	com.mobileforming.te2.core.caching.GsonFileCache:  void  <init>(android.content.Context,java.lang.String)
com.mobileforming.android.te2.tracker.TrackerConfig:  android.app.PendingIntent  access$1802(com.mobileforming.android.te2.tracker.TrackerConfig,android.app.PendingIntent)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setPendingIntent(android.app.PendingIntent)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$4:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onFailure(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.AppUserIdFactory:  java.lang.String  generateDefault(android.content.Context,java.lang.String)	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  updateAppUserId(java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.te2.core.model.Event  access$102(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  onData(java.util.List)
com.mobileforming.te2.core.model.InfoLinkData$1:  com.mobileforming.te2.core.model.InfoLinkData  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLinkData$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  cacheMap(java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapInfo)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.te2.core.model.Alarm:  com.mobileforming.te2.core.model.Time  getEndTime()	com.mobileforming.te2.core.model.Alarm:  java.util.Date  getEndTimeAsDate()
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder,com.mobileforming.android.te2.maps.sdk.model.Poi$1)
com.mobileforming.android.te2.maps.MapsModuleFragment$17$2:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$17)	com.mobileforming.android.te2.maps.MapsModuleFragment$17:  void  onError(java.lang.Throwable)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  java.util.List  createWrapperList(java.util.List)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.InfoListAdapter$InfoListListener)
com.mobileforming.android.te2.maps.util.DateStringUtil:  boolean  isToday(java.util.Calendar,java.util.Date)	com.mobileforming.android.te2.maps.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.android.te2.maps.util.DateStringUtil$Mode)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3,java.lang.Throwable)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$3:  void  onFailure(java.lang.Throwable)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  showExpirationMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createPutRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  okhttp3.Request  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.RequestConfig:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,okhttp3.OkHttpClient,com.google.gson.Gson)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  initializeCacheManagers()	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleConfig)
com.mobileforming.android.te2.tracker.location.BeaconRepository$2:  void  onChanged(java.util.Map)	com.mobileforming.android.te2.tracker.location.BeaconRepository$2:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.model.Venue:  java.util.List  getGeofences()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.MapDataManager$20:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getLocalDefaultMapData(java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$4:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackBluetoothAccessEvent(com.mobileforming.te2.core.model.BluetoothAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(com.mobileforming.android.te2.maps.dataprovider.MapInfo)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.GeofenceEntity[])	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$2:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  onBackPressed()	com.mobileforming.te2.core.dialog.FullScreenDialogFragment$1:  void  onBackPressed()
com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$8:  void  call(java.lang.Object)
com.mobileforming.te2.core.model.PathData:  float  getDeviceX()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.app.Activity,java.lang.String,android.widget.ImageView)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  insertInCache(java.lang.String,long)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onResponseParseSuccess(java.lang.String,okhttp3.Response,java.lang.Object)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  java.util.List  createGeofences(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.android.te2.maps.MapsModuleFragment$1)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.MutableLiveData  access$1100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.location.BeaconRepository:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.BeaconRepository:  com.mobileforming.android.te2.tracker.location.BeaconRepository  getInstance(android.content.Context)
com.mobileforming.te2.core.view.CustomButton:  boolean  access$300(com.mobileforming.te2.core.view.CustomButton)	com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)
com.mobileforming.te2.core.model.DeviceInfo:  int  getDisplayHeight()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)
com.mobileforming.te2.core.entity.VenueMonitorEntity:  long  getEventId()	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.android.te2.messages.view.BarcodeView:  android.graphics.Bitmap  renderBarcodeData(java.lang.String,com.google.zxing.BarcodeFormat,int,int)	com.mobileforming.android.te2.messages.view.BarcodeView:  android.graphics.Bitmap  access$100(com.mobileforming.android.te2.messages.view.BarcodeView,java.lang.String,com.google.zxing.BarcodeFormat,int,int)
com.mobileforming.android.te2.venue.VenueModule$2:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule$2:  void  onData(java.lang.Object)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  showInfoList()	com.mobileforming.android.te2.infos.InfoModuleFragment$1$1:  void  run()
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository:  android.arch.lifecycle.LiveData  getSurveyAnswersLiveData()	com.mobileforming.android.te2.grupo.user.UserFragmentViewModel:  android.arch.lifecycle.LiveData  getSurveyAnswersLiveData()
com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  int  compare(com.mobileforming.te2.core.model.Tag,com.mobileforming.te2.core.model.Tag)	com.mobileforming.android.te2.maps.util.TagUtil$CustomTagComparator:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  webRequestSuccess()	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  access$000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getCode()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$302(com.mobileforming.android.te2.tracker.TrackerConfig,long)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyTimeLow(long)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7,com.mobileforming.android.te2.maps.dataprovider.MapInfo)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7:  void  onData(com.mobileforming.android.te2.maps.dataprovider.MapInfo)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.view.MapView  getMapView()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setMapZoomConfigurations(float,float,float)
com.mobileforming.android.te2.maps.MapsModuleRepository:  com.google.android.gms.tasks.Task  getCategoriesTask()	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$10:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueDataReady()
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchShowsLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.tracker.system.network.NetworkUtils:  boolean  hasNetworkStatePermission(android.content.Context)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.maps.view.MapView:  void  hideWalkingPath()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  hideWalkingDirections()
com.mobileforming.android.te2.maps.sdk.LocationUtils:  java.util.List  buildFencesList(java.util.List,java.util.List,java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  java.util.List  createFences()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  onData(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.MapsModuleFragment$8:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$4:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.lifecycle.LiveData  getFilteredEvents(java.lang.String[])
com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  access$300(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.auth.AuthManager$1:  void  run()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO  loggerLocationPermissionsDAO()
com.mobileforming.te2.core.model.Message:  void  setSavingsLabel(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.caching.CacheConfiguration:  boolean  isFileCacheEnabled()	com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)
com.mobileforming.te2.core.model.EventAction:  java.lang.String  getLabel()	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.TrackerModule$7:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.android.te2.tracker.TrackerModule$7:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  access$000(com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setId(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.te2.core.model.InfoLinkData  getLinkItem(int)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  handleDownloadCategoriesFailure(com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  access$000(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager,com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.util.List)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1602(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setMessage(java.lang.String)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  int  access$908(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onError(java.lang.Throwable)
com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor$1:  void  <init>(com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor)	com.mobileforming.te2.core.analytics.processor.AnalyticsProcessor:  void  registerAnalyticsInput(io.reactivex.Observable)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationOutsideVenue(java.lang.String,double,double,float)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry  build()	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  int  getDayLimit()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  android.arch.lifecycle.LiveData  getFilteredLoggerEventsLiveData()	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onResume()
com.mobileforming.te2.core.model.Category:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Category$1:  com.mobileforming.te2.core.model.Category  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$11:  void  onSuccess(com.mobileforming.android.te2.maps.poi.CategoriesPoisPair)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$11:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.model.Tag:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Tag$1:  com.mobileforming.te2.core.model.Tag  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.User$1:  com.mobileforming.te2.core.model.User[]  newArray(int)	com.mobileforming.te2.core.model.User$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  com.google.gson.JsonObject  generateRegistrationRequest(java.lang.String,java.lang.String)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  processHeadingFromLocation(android.location.Location)	com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  onLocationUpdate(android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.util.ImageUtils$3:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.util.ImageUtils$3:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  onItemClick(android.view.View,int)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$1:  void  onClick(android.view.View)
com.mobileforming.te2.core.form.FormEditTextInputManager:  void  <init>(com.mobileforming.te2.core.form.FormEditText)	com.mobileforming.te2.core.form.FormEditText:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,boolean)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,boolean,com.mobileforming.te2.core.view.MenuTileView$1)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)
com.mobileforming.android.te2.venue.VenueCache:  void  initializeCacheManager()	com.mobileforming.android.te2.venue.VenueCache:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.auth.AuthTokenServiceInterceptor:  void  <init>(java.lang.String,java.lang.String)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createGetRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String,okhttp3.CacheControl)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  okhttp3.Request  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.te2.core.network.RequestInterceptor$1:  void  onData(java.lang.String)	com.mobileforming.te2.core.network.RequestInterceptor$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForVenue(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForCurrentVenue()
com.mobileforming.te2.core.model.Payment$Builder$1:  com.mobileforming.te2.core.model.Payment$Builder[]  newArray(int)	com.mobileforming.te2.core.model.Payment$Builder$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter$1:  void  <init>(com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter,com.mobileforming.te2.core.model.EventFilter,android.view.ViewGroup,android.widget.ImageButton)	com.mobileforming.android.te2.events.adapter.EventFilterGridViewAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.view.CustomButton:  boolean  access$000(com.mobileforming.te2.core.view.CustomButton)	com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$20:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$4:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$4:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$2:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call()	com.mobileforming.android.te2.maps.sdk.MapDataManager$28:  java.lang.Object  call()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  int  getThemedColor(int)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  noImageSetup()
com.mobileforming.android.te2.venue.VenueWebService$1:  void  <init>(com.mobileforming.android.te2.venue.VenueWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.venue.VenueWebService:  void  getVenueInfo(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.util.CropTransformation$CropType:  com.mobileforming.te2.core.util.CropTransformation$CropType[]  values()	com.mobileforming.te2.core.util.CropTransformation$1:  void  <clinit>()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  cleanup()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setTitle(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.maps.sdk.AppConfig:  void  setAppUserId(java.lang.String)	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  updateAppUserId(java.lang.String)
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getThursday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.te2.core.model.InfoCategory$1:  com.mobileforming.te2.core.model.InfoCategory[]  newArray(int)	com.mobileforming.te2.core.model.InfoCategory$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setHasWifiStatePermission(boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity$13:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEnableLocationServicesDialog(android.app.Activity)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$500(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.EmailLink:  void  setToAddress(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.android.te2.messages.offers.OfferRedeemedDialogFragment:  void  setDialogListener(com.mobileforming.android.te2.messages.offers.OfferRedeemedDialogFragment$OnDialogDismissedListener)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  launchOfferRedeemedDialog()
com.mobileforming.android.te2.events.filters.FilterConfig$1:  com.mobileforming.android.te2.events.filters.FilterConfig  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.FilterConfig$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.logger.LoggerActivity$1:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.location.PositionTracker$2:  void  <init>(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker:  void  postStop()
com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.auth.api.AuthTokenWebService  access$600(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  access$000(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  apply(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.sdk.RequestFactory:  okhttp3.Request  createGetRequest(com.mobileforming.android.te2.maps.sdk.ServerConfig,java.lang.String)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  okhttp3.Request  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.te2.core.model.CouponActionEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.CouponActionEvent$Action)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackCouponAction(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  addVenueDataCallback(com.mobileforming.android.te2.maps.sdk.LocationSdkManager$DataCallback)
com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  boolean  hasPromotedEvents()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  onData(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  com.mobileforming.android.te2.infos.configuration.AboutInfoConfig[]  newArray(int)	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$14:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackAppNotificationState(com.mobileforming.te2.core.model.AppNotificationStateEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.messages.MessagesListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  showLoading()	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onRedeemOptionSelected(int)
com.mobileforming.android.te2.maps.MapsModuleFragment$20:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  hideWalkingTimeFab()
com.mobileforming.te2.core.model.GetWalkingPathEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,float,float,float,float,float,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  updateUI()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsListFragment)
com.mobileforming.te2.core.model.Tax$1:  com.mobileforming.te2.core.model.Tax  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Tax$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6,com.mobileforming.te2.core.model.Link)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$6:  void  onResponse(okhttp3.Call,okhttp3.Response)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  boolean  isConnected(android.content.Context)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.te2.core.model.EmailLink$1:  com.mobileforming.te2.core.model.EmailLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EmailLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  android.arch.lifecycle.LiveData  getUnfilteredLoggerEventsLiveData()	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawOtherTopRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  getMapInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.MessagesDetailActivity$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailActivity)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onMessageActionClick(com.mobileforming.te2.core.model.MessageTriggeredAction)
com.mobileforming.android.te2.tracker.TrackerModule$5:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.GeofenceDAO  geofenceDAO()
com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  <init>(java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.MapsModule:  void  registerModuleListener(android.app.Application,com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  android.arch.lifecycle.LiveData  getCurrentLocationsPermissions()	com.mobileforming.android.te2.infos.logger.LoggerViewModel:  android.arch.lifecycle.LiveData  getCurrentLocationPermissions()
com.mobileforming.te2.core.auth.AuthManager$4$2:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$4,java.lang.Throwable)	com.mobileforming.te2.core.auth.AuthManager$4:  void  onError(java.lang.Throwable)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$1100(com.mobileforming.android.te2.maps.MapsModuleFragment,java.util.List)
com.mobileforming.te2.core.model.BeaconConfig:  float  getInsideVenueForegroundBetweenScanPeriod()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getNameText()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.tracker.location.OrientationLiveData:  void  updateOrientationAngles()	com.mobileforming.android.te2.tracker.location.OrientationLiveData$1:  void  onSensorChanged(android.hardware.SensorEvent)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$26:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  onLocationUpdate(android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.WebLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.WebLink$1:  com.mobileforming.te2.core.model.WebLink  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$15:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.GetWalkingPathEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  java.lang.Void  doInBackground(java.lang.Void[])	com.mobileforming.android.te2.venue.VenueCache$CacheAsyncTask:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.events.view.FilterTabView:  void  init(int)	com.mobileforming.android.te2.events.view.FilterTabView:  void  <init>(android.content.Context,int)
com.mobileforming.android.te2.infos.util.InfoModuleUtils$1:  void  <init>(com.google.android.gms.tasks.TaskCompletionSource)	com.mobileforming.android.te2.infos.util.InfoModuleUtils:  com.google.android.gms.tasks.Task  retrieveVenueOpeningHours(com.mobileforming.te2.core.model.VenueDetail)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$002(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setContentVersion(java.lang.String)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getEventsByVenueId(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.te2.core.caching.GsonFileCache:  void  <init>(android.content.Context,java.lang.String,java.lang.reflect.Type)	com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  clearEvents()	com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Void  doInBackground(java.lang.Void[])
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$3:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.google.android.gms.tasks.Task  getMessagesForVenue(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  android.os.Handler  access$700(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Throwable)
com.mobileforming.te2.core.model.Tag$1:  com.mobileforming.te2.core.model.Tag  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Tag$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.messages.OffersListFragment:  void  handleFailedMessagesRequest()	com.mobileforming.android.te2.messages.OffersListFragment:  void  access$200(com.mobileforming.android.te2.messages.OffersListFragment)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addTagViews(android.view.ViewGroup,int)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$600(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.ViewGroup,int)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$16:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchConfig(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  topButton(java.lang.String)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder  topButton(int)
com.mobileforming.android.te2.maps.util.DateStringUtil:  long  getNumberOfHours(long)	com.mobileforming.android.te2.maps.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.LiveData  createBeaconWatcherLiveData(java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$18:  java.util.List  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$18:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.events.EventsActivity:  android.content.Intent  createIntent(android.content.Context)	com.mobileforming.android.te2.events.EventsModule:  void  startModule(android.app.Activity)
com.mobileforming.android.te2.maps.view.CustomTagView$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.view.CustomTagView$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setDefaultMapFilterEnabled(boolean)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupMapsModule()
com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  setupScrollingBehavior(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.util.CropTransformation:  float  getTop(float)	com.mobileforming.te2.core.util.CropTransformation:  android.graphics.Bitmap  transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$7:  void  call(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$7:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  call(java.lang.Object)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(java.lang.String,double,double,float,long)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)
com.mobileforming.android.te2.grupo.UserFragment:  java.util.List  access$402(com.mobileforming.android.te2.grupo.UserFragment,java.util.List)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.VenueLocation:  double  getRadius()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment$MapsModuleFragmentParentTabListener:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.android.te2.maps.MapsModuleFragment$1)
com.mobileforming.te2.core.model.LocationAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackLocationAccess(boolean,boolean,boolean,boolean)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$9:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.model.InfoLinkData:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.InfoLinkData$1:  com.mobileforming.te2.core.model.InfoLinkData  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.detail.OfferDetailContract$Presenter)	com.mobileforming.android.te2.messages.OfferDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  setupList(android.view.View)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.model.EventCategory$1:  com.mobileforming.te2.core.model.EventCategory[]  newArray(int)	com.mobileforming.te2.core.model.EventCategory$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  setModuleListener(com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.infos.InfoModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository:  void  logRequestPermissionsData(com.mobileforming.te2.core.db.AppDatabase,android.content.Context)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.maps.fragment.DiningFragment$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.DiningFragment,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  hideLoading()	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  access$000(com.mobileforming.android.te2.messages.MessagesDetailActivity)
com.mobileforming.android.te2.infos.util.InfoModuleUtils$1$1:  void  <init>(com.mobileforming.android.te2.infos.util.InfoModuleUtils$1)	com.mobileforming.android.te2.infos.util.InfoModuleUtils$1:  void  onResponse(okhttp3.Call,okhttp3.Response)
com.mobileforming.te2.core.model.Schedule$1:  com.mobileforming.te2.core.model.Schedule[]  newArray(int)	com.mobileforming.te2.core.model.Schedule$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  assignViewReferences()	com.mobileforming.android.te2.messages.offers.OfferListView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showProductView(java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  handleUri(android.net.Uri,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.LocationHeadingProcessor:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)
com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  boolean  isEndTimeAfterMidnight()	com.mobileforming.te2.core.model.takeover.TakeoverPeriod:  int  getLatestHour(int)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  setPoiStatusLiveData(com.mobileforming.android.te2.maps.poi.PoiStatusLiveData)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onResume()
com.mobileforming.android.te2.messages.MessagesModule:  void  setMessagesModuleAnalytics(com.mobileforming.android.te2.messages.MessagesModuleAnalytics)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()
com.mobileforming.android.te2.maps.sdk.model.Fence:  float  getRadius()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isLocationOutsideFence(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence)
com.mobileforming.android.te2.events.activity.EventsDetailActivity:  void  setDataProvider(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.EventsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  registerListener(android.hardware.Sensor,int)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  boolean  attemptRegisterListener(android.hardware.Sensor,int)
com.mobileforming.android.te2.messages.OffersListFragment:  void  onOfferSelected(com.mobileforming.android.te2.messages.offers.BaseOfferViewModel)	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails:  java.lang.String  getBssid()	com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.te2.core.view.TileView:  int  getContentTextColor()	com.mobileforming.te2.core.view.TileView:  void  setChecked(boolean)
com.mobileforming.android.te2.maps.util.DateStringUtil:  boolean  isLeapYear(int)	com.mobileforming.android.te2.maps.util.DateStringUtil:  int  getNumberOfDaysInYear(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  android.content.Intent  startVenueHomeIntent(android.content.Context,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  startVenueHomePage(android.support.v4.app.FragmentActivity,java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder,com.mobileforming.android.te2.maps.sdk.model.Event$1)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  maxAge(long)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)
com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,android.content.Context,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoList(java.lang.String,android.content.Context)
com.mobileforming.android.te2.maps.sdk.DataRequest:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataRequest$Method,java.lang.String,java.lang.String,java.lang.Class,java.lang.reflect.Type,com.mobileforming.android.te2.maps.sdk.model.RequestPayload,com.mobileforming.android.te2.maps.sdk.model.ModelCache,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.DataRequest$1)	com.mobileforming.android.te2.maps.sdk.DataRequest$Builder:  com.mobileforming.android.te2.maps.sdk.DataRequest  build()
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  poiItemSelected(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onData(java.lang.Void)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$7:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isValidTrackerConfig(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$302(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)	com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener  access$000(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.grupo.RefApplication$2:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()
com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getHighlightedPoiLiveData()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider  access$100(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.util.GlideApp:  com.mobileforming.te2.core.util.GlideRequests  'with'(android.support.v4.app.Fragment)	com.mobileforming.te2.core.util.ImageUtils:  void  loadImage(android.support.v4.app.Fragment,java.lang.String,int,android.widget.ImageView)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsAfterStartDate(java.lang.String,java.util.Date,boolean,boolean)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)
com.mobileforming.android.te2.maps.MapsModuleActivity:  android.content.Intent  createIntent(android.content.Context)	com.mobileforming.android.te2.maps.MapsModule:  void  startMapModuleActivity(android.app.Activity)
com.mobileforming.android.te2.venue.VenueModule$4:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,java.util.List,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  getVenues(java.util.List,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  getDownloadOnlyRequest()	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  getDownloadOnlyRequest()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$2:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$1$2:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  updatePoi(java.util.List)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onResume()
com.mobileforming.te2.core.ModuleConfig:  long  access$500()	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  void  <init>()
com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  <init>(com.mobileforming.android.te2.infos.InfoModuleFragment)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onInfoLinkSelected(com.mobileforming.te2.core.model.InfoLinkData)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getLegalText()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  unregisterLocationUpdateListener(com.mobileforming.te2.core.listeners.LocationUpdateListener)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  onPause()
com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessAction:  void  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.DataManager$CallbackSuccessAction:  void  call(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setUploadDelay(int)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  rx.Observable  call(rx.Observable)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.google.android.gms.tasks.TaskCompletionSource,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.google.android.gms.tasks.Task  fetchCategories()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,android.widget.TextView)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setMultipleTimesText(android.widget.TextView)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$2:  void  <init>(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$11:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapData(com.mobileforming.android.te2.maps.sdk.MapDecision,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$5:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.model.DisplayType:  com.mobileforming.te2.core.model.DisplayType  valueOf(java.lang.String)	com.mobileforming.te2.core.model.DisplayType$1:  com.mobileforming.te2.core.model.DisplayType  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.SpecialStatus$1:  com.mobileforming.te2.core.model.SpecialStatus  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.SpecialStatus$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Place$1:  com.mobileforming.te2.core.model.Place  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Place$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1,com.mobileforming.android.te2.maps.sdk.model.VenuePayload)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.maps.poi.MapPoiWrapper:  void  setBitmap(android.graphics.Bitmap)	com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition)
com.mobileforming.te2.core.model.WebLink$1:  com.mobileforming.te2.core.model.WebLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.WebLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getFederatedProvider()	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.infos.InfoModule:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)	com.mobileforming.android.te2.infos.InfoModule:  com.mobileforming.android.te2.infos.InfoModule  getInstance(android.app.Application,com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig)
com.mobileforming.te2.core.model.Section:  void  setTitle(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()
com.mobileforming.android.te2.events.EventsModule:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.EventsModule:  com.mobileforming.android.te2.events.EventsModule  getInstance(android.app.Application,com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)	com.mobileforming.android.te2.events.fragment.EventsListFragment$1:  void  onClick(android.view.View)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackLocationAccessEvent(com.mobileforming.te2.core.model.LocationAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  com.mobileforming.te2.core.model.Message  getModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.Object  getModel()
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  android.arch.lifecycle.LiveData  getFilteredEvents(java.lang.String[])	com.mobileforming.android.te2.infos.logger.loggerevents.LoggerEventsViewModel:  void  filterLoggerEvents(java.lang.String[])
com.mobileforming.te2.core.model.Schedule:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Schedule$1:  com.mobileforming.te2.core.model.Schedule  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.AppNotificationStateEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackAppNotificationState()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.util.TagUtil$1:  void  <init>(android.widget.TextView,com.mobileforming.android.te2.maps.view.CustomTagView)	com.mobileforming.android.te2.maps.util.TagUtil:  void  checkForEllipsis(android.widget.TextView,com.mobileforming.android.te2.maps.view.CustomTagView)
com.mobileforming.android.te2.events.util.DateStringUtil:  boolean  isToday(java.util.Calendar,java.util.Date)	com.mobileforming.android.te2.events.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.TimeZone,java.util.Calendar,java.util.Date,com.mobileforming.android.te2.events.util.DateStringUtil$Mode)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventDayFilterSelected(java.util.Calendar)	com.mobileforming.android.te2.events.fragment.EventsListFragment$8:  void  onDialogDateSet(int,int,int)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.SDKConfig,android.content.Context,com.mobileforming.android.te2.maps.sdk.SystemEventNotifier)
com.mobileforming.te2.core.model.LocationTechnology:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.LocationTechnology$1:  com.mobileforming.te2.core.model.LocationTechnology  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.caching.PersistenceObject:  void  <init>(java.lang.Object)	com.mobileforming.te2.core.caching.MemoryCache:  void  store(java.lang.String,java.lang.Object)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository:  void  monitorVenueExit(com.mobileforming.te2.core.db.AppDatabase,java.lang.String,boolean)
com.mobileforming.te2.core.api.device.DeviceInformation:  java.lang.String  getAppUserId()	com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)
com.mobileforming.android.te2.venue.VenueCache:  long  getTimestamp(java.lang.String)	com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  stop()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  stopBeaconTracker()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$4:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  rx.Observable  getLastLocation()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  triggerLastLocationEvent()
com.mobileforming.android.te2.infos.adapter.FilterAdapter:  void  <init>(android.content.Context,java.util.List)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  initCustomSpinner(android.view.View)
com.mobileforming.te2.core.model.openinghours.Week:  int  getLatestHour(int)	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  int  getLatestHour(int)
com.mobileforming.android.te2.events.util.EventsUtility:  void  loadImage(android.support.v4.app.Fragment,java.lang.String,com.bumptech.glide.request.RequestListener,android.widget.ImageView)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$9:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  showLoader()
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  com.mobileforming.te2.core.model.MessageActionEvent$Action  convertEnum(com.mobileforming.te2.core.model.MessageActionState)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionState)
com.mobileforming.te2.core.caching.CacheConfiguration:  boolean  isMemoryCacheEnabled()	com.mobileforming.te2.core.caching.CacheManager:  void  <init>(android.content.Context,com.mobileforming.te2.core.caching.CacheConfiguration,java.lang.String,java.lang.reflect.Type)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.lang.String  access$200(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$10:  void  call(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$10:  void  call(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.form.FormEditText:  com.mobileforming.te2.core.form.FormViewParent  getFormViewParent()	com.mobileforming.te2.core.form.FormEditTextInputManager:  void  handleError()
com.mobileforming.te2.core.form.FormCheckBox:  com.mobileforming.te2.core.form.FormCheckBox$FormOnCheckedChangeListener  access$100(com.mobileforming.te2.core.form.FormCheckBox)	com.mobileforming.te2.core.form.FormCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.te2.core.model.Category$1:  com.mobileforming.te2.core.model.Category  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Category$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.maps.sdk.MapDataManager$23:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapDataManager$23:  void  call(java.lang.Object)
com.mobileforming.te2.core.model.LocationTechnology$1:  com.mobileforming.te2.core.model.LocationTechnology  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LocationTechnology$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.ProductSelection:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.ProductSelection$1:  com.mobileforming.te2.core.model.ProductSelection  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  java.lang.Object  compute()
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  poiListIsReady()
com.mobileforming.android.te2.events.fragment.EventsListFragment$6:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupTabView()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$2:  void  run()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$3:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$3:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository,android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  getMultiVenuePlaceLiveDataFromWeb(android.content.Context,java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$5:  int  compare(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$5:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  onChanged(android.location.Location)	com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$Builder  getInstance()	com.mobileforming.te2.core.ModuleConfig$Builder:  com.mobileforming.te2.core.ModuleConfig$BaseBuilder  getInstance()
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onPostExecute(android.graphics.Bitmap)	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  onPostExecute(java.lang.Object)
com.mobileforming.te2.core.auth.AuthManager$5$2:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$5,java.lang.Throwable)	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.api.commerce.model.OfferResponse:  com.mobileforming.android.te2.api.commerce.model.Barcode  getBarcode()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onAttach(android.content.Context)
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  <init>(com.mobileforming.android.te2.venue.VenueDataManager,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.android.te2.venue.VenueDataManager:  void  requestVenueById(java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.MessagesModule:  void  setIsRedeemingOffer(boolean)	com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(android.content.Intent)
com.mobileforming.te2.core.view.CustomCheckBox:  boolean  access$300(com.mobileforming.te2.core.view.CustomCheckBox)	com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.te2.core.view.TileView$1:  void  <init>(com.mobileforming.te2.core.view.TileView,com.mobileforming.te2.core.model.Image)	com.mobileforming.te2.core.view.TileView:  void  setContentImage(com.mobileforming.te2.core.model.Image)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  sendMessageClickedEvent(com.mobileforming.te2.core.model.MessageAction)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  access$100(com.mobileforming.android.te2.messages.MessagesDetailFragment,com.mobileforming.te2.core.model.MessageAction)
com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  java.util.ArrayList  getTriggeringGeofences(java.util.List)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$5:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getShowsByVenueIdAndDateStart(java.lang.String,java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  showLoadingContainer()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onInfoLinkSelected(com.mobileforming.te2.core.model.InfoLinkData)
com.mobileforming.te2.core.model.openinghours.Day:  java.lang.String  getStatus()	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$2:  void  run()
com.mobileforming.te2.core.model.openinghours.Day:  java.util.Date  getOpenTime()	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  boolean  isTakeoverNext(com.mobileforming.te2.core.model.openinghours.Day)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService$1:  void  <init>(com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService,com.mobileforming.android.te2.api.commerce.webservice.DataCallback)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  fetchOfferByIdForVenue(java.lang.String,java.lang.String,com.mobileforming.android.te2.api.commerce.webservice.DataCallback)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  id(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.Barcode:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Barcode$1:  com.mobileforming.te2.core.model.Barcode  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Intro:  java.lang.String  getDescription()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  onData(java.lang.Object)
com.mobileforming.android.te2.grupo.DiningFragment:  void  diningDetailsViewed(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  poiItemSelected(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.sdk.RxUtil$1:  void  <init>(java.util.concurrent.Callable)	com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.Observable  makeObservable(java.util.concurrent.Callable)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  float  access$400(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(byte[])	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(byte[])
com.mobileforming.android.te2.maps.util.DateStringUtil:  long  getNumberOfMinutes(long)	com.mobileforming.android.te2.maps.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  boolean  isHidden()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setChildTabTitles(int)
com.mobileforming.android.te2.maps.util.ImageUtils$2:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.util.ImageUtils$2:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.io.File)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.io.File)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  java.util.List  compute()	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  java.lang.Object  compute()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$9:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.form.FormEditText:  void  setErrorEnabled(boolean)	com.mobileforming.te2.core.form.FormEditTextInputManager:  void  handleError()
com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  hasWifiStatePermission()	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onNetworkAvailabilityUpdated(boolean,boolean)
com.mobileforming.android.te2.maps.util.ImageUtils:  float  convertDpToPixel(float,android.content.Context)	com.mobileforming.android.te2.maps.util.ImageUtils:  float  access$000(float,android.content.Context)
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  forceLocationUpdate()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  start()
com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  populateScrollView(android.view.ViewGroup)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$ExponentialRetryWithDelay:  long  getRetryDelay(int,long)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$1:  void  run()
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  double  access$400(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  populateScrollView()	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.model.Action$1:  com.mobileforming.te2.core.model.Action  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Action$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventById(java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showEvents(java.lang.String,java.lang.String)
com.mobileforming.te2.core.db.AppDatabase_Impl:  java.util.List  access$500(com.mobileforming.te2.core.db.AppDatabase_Impl)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.android.te2.grupo.user.UserFragmentViewModel:  android.arch.lifecycle.LiveData  getSurveyAnswersLiveData()	com.mobileforming.android.te2.grupo.UserFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1$1:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1:  void  run()
com.mobileforming.android.te2.maps.MapsModuleFragment$19:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showWalkingTimeFab()
com.mobileforming.android.te2.maps.MapsModuleViewModel$4:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleViewModel)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  void  refreshPoisLiveData()
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setSsid(java.lang.String)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.te2.core.model.Position$1:  com.mobileforming.te2.core.model.Position[]  newArray(int)	com.mobileforming.te2.core.model.Position$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  java.util.List  wrapEvents(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  java.util.List  access$100(java.util.List)
com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setMessage(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.te2.core.auth.api.AuthTokenWebService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor,java.util.concurrent.ExecutorService)
com.mobileforming.android.te2.grupo.RefApplication$1:  void  <init>(com.mobileforming.android.te2.grupo.RefApplication)	com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()
com.mobileforming.te2.core.model.Payment:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$1:  com.mobileforming.te2.core.model.Payment  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.EventActionType$1:  com.mobileforming.te2.core.model.EventActionType[]  newArray(int)	com.mobileforming.te2.core.model.EventActionType$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventSelected(com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$2:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  onChanged(java.lang.Integer)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setInBackground(boolean)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  access$000(com.mobileforming.android.te2.tracker.location.LocationTracker,boolean)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  boolean  linksContainPoi(java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.MessageType  getMessageType(int,java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.reflect.Type  access$600(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager$27:  java.util.List  call()
com.mobileforming.android.te2.grupo.NavigationActivity:  void  userPageViewed()	com.mobileforming.android.te2.grupo.UserFragment:  void  onResume()
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ListItemWrapper:  java.lang.CharSequence  toSpannableString()	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder,int)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupUI(android.view.ViewGroup)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  registerMapUpdateListener(com.mobileforming.android.te2.maps.dataprovider.MapUpdateListener)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onAttach(android.content.Context)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  boolean  access$302(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,boolean)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  onChanged(java.util.List)
com.mobileforming.te2.core.model.PlatformUrl:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.PlatformUrl$1:  com.mobileforming.te2.core.model.PlatformUrl  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.ProductSelection:  java.lang.String  getUid()	com.mobileforming.te2.core.model.ProductSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.maps.adapter.PoiListAdapter$ViewHolder,int)	com.mobileforming.android.te2.maps.adapter.PoiListAdapter:  void  onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.location.LocationTracker$2:  void  onData(java.util.List)	com.mobileforming.android.te2.tracker.location.LocationTracker$2:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.SpecialStatus$1:  com.mobileforming.te2.core.model.SpecialStatus[]  newArray(int)	com.mobileforming.te2.core.model.SpecialStatus$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.caching.CacheConfiguration:  void  <init>(boolean,boolean,java.util.Map)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  lon(double)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.maps.sdk.MapDataManager$23:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyMapDataCallback(boolean,android.content.Context,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,boolean,com.mobileforming.te2.core.view.MenuTileView$1)	com.mobileforming.te2.core.view.MenuTileView:  com.mobileforming.te2.core.view.MenuTileView$MenuTileItem  createItem(java.lang.String,boolean)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.VenueMonitorDAO  venueMonitorDAO()
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1500(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getInstructionsText()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.grupo.NavigationActivity$6:  void  onChanged(android.util.Pair)	com.mobileforming.android.te2.grupo.NavigationActivity$6:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesListFragment)	com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.messages.OffersListFragment:  com.mobileforming.android.te2.messages.OffersListFragment  newInstance()	com.mobileforming.android.te2.messages.MessagesModuleFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.te2.core.model.Position  getCurrentPosition()	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchWalkingTimeLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository:  void  monitorVenueEnter(com.mobileforming.te2.core.db.AppDatabase,java.lang.String,boolean)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  thumbnail(com.bumptech.glide.RequestBuilder)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  thumbnail(com.bumptech.glide.RequestBuilder)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  mergeStatusWithPoiInCache(java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadPoiStatus()
com.mobileforming.te2.core.view.MenuTileView:  android.graphics.Point  createShowAtPoint()	com.mobileforming.te2.core.view.MenuTileView:  void  openMenu()
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  double  access$300(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  tagLocationSettings(boolean)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  tagLocationSettings(boolean)
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setCacheConfiguration(com.mobileforming.te2.core.caching.CacheConfiguration)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.te2.core.auth.Te2Authenticator:  void  <init>(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  void  initializeClientIfNull()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.fragment.EventsListFragment$10:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.te2.core.model.Message:  void  setPublishedTime(java.util.Date)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.te2.core.api.app.AppRetrofitWebService$3:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDisplayCategories(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoList(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  double  access$100(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.TE2SDKInternal)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  onAppStateEvent(com.mobileforming.android.te2.maps.sdk.model.AppStateEvent)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$1:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchBeacons(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchCategories(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  loadCategories()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.events.fragment.EventsListFragment$3:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment,android.support.v7.widget.SearchView)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onPrepareOptionsMenu(android.view.Menu)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.view.MapView:  void  initialize()	com.mobileforming.android.te2.maps.view.MapView:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  initLiveData(java.util.LinkedList)	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository:  void  access$000(com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueHistoryRepository,java.util.LinkedList)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$13:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.venue.VenueCache$1:  void  <init>(com.mobileforming.android.te2.venue.VenueCache)	com.mobileforming.android.te2.venue.VenueCache:  void  initializeCacheManager()
com.mobileforming.te2.core.util.DateStringUtil:  boolean  isLeapYear(int)	com.mobileforming.te2.core.util.DateStringUtil:  int  getNumberOfDaysInYear(int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$900(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$11:  void  call(rx.Subscriber)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  access$200(com.mobileforming.android.te2.messages.FeaturedMessageFragment)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  onClick(android.view.View)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  com.mobileforming.te2.core.entity.VenueMonitorEntity  compute()	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  java.lang.Object  compute()
com.mobileforming.te2.core.model.MessageAction:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.MessageAction$1:  com.mobileforming.te2.core.model.MessageAction  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.view.CustomButton:  java.lang.String  access$200(com.mobileforming.te2.core.view.CustomButton)	com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.TrackerModule$3:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getTuesday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.te2.core.api.BaseWebService$1$1$1:  void  <init>(com.mobileforming.te2.core.api.BaseWebService$1$1,retrofit2.adapter.rxjava2.Result)	com.mobileforming.te2.core.api.BaseWebService$1$1:  io.reactivex.SingleSource  apply(retrofit2.adapter.rxjava2.Result)
com.mobileforming.android.te2.maps.sdk.MapDataManager$6:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapDataManager$6:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.model.PathData:  void  setMapId(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setVersion(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$100(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$5:  void  run()
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$600(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.te2.core.model.GeofenceInfo:  java.lang.String  getName()	com.mobileforming.te2.core.util.Logger:  java.lang.String  createGeofenceInfoString(com.mobileforming.te2.core.model.GeofenceInfo)
com.mobileforming.android.te2.messages.MessagesListFragment$1$2:  void  <init>(com.mobileforming.android.te2.messages.MessagesListFragment$1)	com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  onError(java.lang.Throwable)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$3:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment)	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  updateWaitTimesMessage(boolean,com.mobileforming.te2.core.model.Category)
com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl,boolean)	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  notifyBluetoothStateChangeEvent(boolean)
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  <init>(com.mobileforming.android.te2.tracker.system.network.NetworkDetailsLiveData)	com.mobileforming.android.te2.tracker.system.network.NetworkDetailsLiveData:  void  onActive()
com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  boolean  shouldRetrieveEvents()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.te2.core.model.Alarm:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Alarm$1:  com.mobileforming.te2.core.model.Alarm  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(java.lang.Object)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  stopModule(android.os.Bundle,java.lang.Throwable)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.List  access$202(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onPoiSelected(com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.view.MapView$1:  boolean  onSingleTapConfirmed(android.view.MotionEvent)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  java.io.File  getCacheDirectory(android.content.Context)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpCache(okhttp3.OkHttpClient$Builder,android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(java.util.List,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$3:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPois(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  java.lang.String  getEventKey()	com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  boolean  equals(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestConfig)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  <init>(android.os.Parcel,com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.Map  access$000(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$1:  void  run()
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setAppUserId(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  payload(com.mobileforming.android.te2.maps.sdk.model.RequestPayload)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2,java.lang.Throwable)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$2:  void  onFailure(java.lang.Throwable)
com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$202(com.mobileforming.android.te2.maps.MapsModuleFragment,boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  poiListIsReady()
com.mobileforming.android.te2.maps.MapsModuleViewModel$3:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleViewModel)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getVenueTimeZoneLiveData()
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.LocationEventManager)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  <init>(android.content.Context,com.mobileforming.android.te2.maps.sdk.TE2ModuleManager,com.mobileforming.android.te2.maps.sdk.LocationConfigManager,com.mobileforming.android.te2.maps.sdk.SDKConfig,com.mobileforming.android.te2.maps.sdk.LocationServerAPI,com.mobileforming.android.te2.maps.sdk.LocationRepository,com.mobileforming.android.te2.maps.sdk.LocationEventManager,com.mobileforming.android.te2.maps.sdk.PreferencesRepository)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$11:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.model.openinghours.Week:  com.mobileforming.te2.core.model.openinghours.Day  getSaturday()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.Date)
com.mobileforming.te2.core.view.Te2DatePickerDialog:  com.mobileforming.te2.core.view.Te2DatePickerDialog  newInstance(long,int)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  access$200(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$1:  void  onData(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity$14:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  eventActionTriggered(com.mobileforming.te2.core.model.EventTriggeredAction)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  getCategoriesInstance()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$100(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2$1:  void  <init>(com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  com.mobileforming.te2.core.entity.GeofenceEntity  compute()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.model.Event:  java.util.List  getEventActions()	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  com.mobileforming.te2.core.model.Position  getCurrentLocation()	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchWalkingTimeLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$5:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapInfoManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.android.te2.grupo.UserFragment:  void  access$800(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$2:  void  onData(java.lang.Long)	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$2:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$13:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.LiveData  access$1002(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,android.arch.lifecycle.LiveData)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getRefreshTimeLiveData()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.model.Event:  void  setVenues(java.util.List)	com.mobileforming.te2.core.model.Event:  void  updateEventTimesCategories()
com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder,com.mobileforming.android.te2.maps.sdk.model.Poi$1)	com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  com.mobileforming.android.te2.maps.sdk.model.Poi  build()
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  void  checkPayload()	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.events.fragment.EventsListFragment$4:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onPrepareOptionsMenu(android.view.Menu)
com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker$2:  void  <init>(com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker)	com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionEvent$Action)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackMessageAction(com.mobileforming.te2.core.model.MessageActionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.messages.tracker.MessagesModuleTracker:  void  postMessageAction(com.mobileforming.te2.core.model.Message,com.mobileforming.te2.core.model.MessageActionEvent$Action)
com.mobileforming.android.te2.maps.sdk.model.VenueLocation:  float  getRadius()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$3:  com.mobileforming.te2.core.entity.LocationPermissionsEntity  compute()
com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder,com.mobileforming.android.te2.maps.sdk.model.Fence$1)
com.mobileforming.android.te2.maps.MapsModuleFragment:  android.support.v7.app.ActionBar  getSupportActionBar()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  updateActionBar(boolean,int,boolean)
com.mobileforming.te2.core.model.Payment$1:  com.mobileforming.te2.core.model.Payment[]  newArray(int)	com.mobileforming.te2.core.model.Payment$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.model.UserInterfaceDisplayCategorization:  java.util.List  getCategories()	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  parseCategories(com.mobileforming.te2.core.model.UserInterfaceDisplayCategorization,java.util.List)
com.mobileforming.te2.core.model.Message:  void  setFinePrint(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.tracker.location.PositionTracker:  long  access$502(com.mobileforming.android.te2.tracker.location.PositionTracker,long)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$LoggerListListener  access$000(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$2:  void  onClick(android.view.View)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  setMenuModuleFragmentListener(com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.MessageType  getMessageType(int,java.util.List)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$600(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.ViewGroup,int)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7$1:  void  onGlobalLayout()
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  lat(double)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  showBackButton()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  access$000(com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService,okhttp3.Headers,java.util.Map)	com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService$1:  void  onResponse(retrofit2.Call,retrofit2.Response)
com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  onData(java.util.List)	com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  registerNetworkCallback()	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  registerNetworkUpdates()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  boolean  onStartJob(com.firebase.jobdispatcher.JobParameters)
com.mobileforming.te2.core.model.MessageType$1:  com.mobileforming.te2.core.model.MessageType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.MessageType$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$300(com.mobileforming.android.te2.tracker.system.SystemTracker)	com.mobileforming.android.te2.tracker.system.SystemTracker$NetworkStateReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$4:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.DataCallback,java.util.List)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  parseCategories(java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.model.Fence:  double  getLat()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  boolean  isDistanceGreater(android.location.Location,com.mobileforming.android.te2.maps.sdk.model.Fence,float)
com.mobileforming.android.te2.maps.view.CategoryTabLayout:  void  setTabIcons(android.graphics.drawable.Drawable[])	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setParentTabIcons()
com.mobileforming.android.te2.tracker.TrackerConfig:  com.mobileforming.te2.core.db.AppDatabase  access$1002(com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setAppDatabase(com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.te2.core.model.DeviceInformationEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)
com.mobileforming.te2.core.util.Logger:  java.lang.String  createBeaconInfoListString(java.util.List)	com.mobileforming.android.te2.grupo.RefApplication:  void  beaconsInRange(java.util.List)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.fragment.Te2MapFragment  newInstance(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$Te2MapFragmentListener,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  boolean  hasCacheExpired(long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.te2.core.model.EventAction:  void  setEventActionType(com.mobileforming.te2.core.model.EventActionType)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  updateConfig(com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$9:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchBeacons(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  void  <init>(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository  getInstance(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  setupImageView()	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker,com.mobileforming.android.te2.tracker.location.GeofenceTracker$1)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  submitGeofenceRequest(java.util.List,boolean)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  double  access$400(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$300(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.maps.sdk.SDKConfig:  java.util.List  getVenueIds()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LocationHistoryDAO  locationDAO()
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  java.util.concurrent.CopyOnWriteArraySet  access$100(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$3:  void  run()
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$2:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapDataManager  getMapDataManager(com.mobileforming.android.te2.maps.sdk.SDKConfig)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1$1:  void  <init>(com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1,com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(android.net.Uri)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(android.net.Uri)
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setPassword(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.android.te2.tracker.location.GeofenceTracker$2:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  processAddTransaction(com.mobileforming.android.te2.tracker.location.GeofenceTracker$PendingGeofenceTransaction)
com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8$1:  void  run()
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  int  toPixels(android.content.Context,int)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)
com.mobileforming.te2.core.util.CropTransformation:  java.lang.String  key()	com.mobileforming.te2.core.util.BitmapTransformation:  void  updateDiskCacheKey(java.security.MessageDigest)
com.mobileforming.android.te2.maps.MapsModuleFragment$15:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  selectPoiById(java.lang.String)
com.mobileforming.te2.core.view.MenuTileView:  void  closeMenu()	com.mobileforming.te2.core.view.MenuTileView:  void  onDismiss()
com.mobileforming.android.te2.tracker.location.PositionTracker:  float  access$1002(com.mobileforming.android.te2.tracker.location.PositionTracker,float)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)
com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository$1:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.geofence.GeofenceRepository:  void  logGeofenceEnter(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.entity.GeofenceEntity,boolean)
com.mobileforming.android.te2.maps.view.CustomTagView:  boolean  isWaitTimeTag(com.mobileforming.te2.core.model.Tag)	com.mobileforming.android.te2.maps.view.CustomTagView:  void  setTagContent(com.mobileforming.te2.core.model.Tag)
com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getContentVersion()	com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  access$000(com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter,com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$ViewHolder,com.mobileforming.te2.core.model.Event)	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter$1:  boolean  onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawBottomRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setHasError(boolean)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.android.te2.maps.sdk.MapDataManager$13:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapObservable(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.te2.core.model.Icon$1:  com.mobileforming.te2.core.model.Icon[]  newArray(int)	com.mobileforming.te2.core.model.Icon$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository$1:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.model.Sticker$1:  com.mobileforming.te2.core.model.Sticker[]  newArray(int)	com.mobileforming.te2.core.model.Sticker$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.location.LocationTracker$2:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setHasNetworkPermission(boolean)
com.mobileforming.te2.core.model.EventWrapper$1:  com.mobileforming.te2.core.model.EventWrapper[]  newArray(int)	com.mobileforming.te2.core.model.EventWrapper$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.MapDataManager$18:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getDefaultMapData(boolean,android.content.Context,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.messages.MessagesListFragment$MessagesListFragmentListener)	com.mobileforming.android.te2.messages.MessagesListFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.grupo.UserFragment:  com.mobileforming.android.te2.grupo.UserFragment  newInstance(com.mobileforming.android.te2.grupo.UserFragment$UserFragmentListener,biz.te2.guestsurvey.listeners.SurveyModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupUser()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1:  void  run()
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  long  getModulesTtl()	com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  void  cacheModules(java.lang.String,java.util.List,long)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder  responseType(java.lang.reflect.Type)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiWithDayRange()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$000(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.MapsModuleRepository$2:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleRepository)	com.mobileforming.android.te2.maps.MapsModuleRepository:  com.google.android.gms.tasks.Task  getCategoriesTask()
com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  void  setupScrollingBehavior(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoHiddenDetailFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.model.TE2Beacon:  void  <init>(java.lang.String,int,int)	com.mobileforming.android.te2.maps.sdk.model.TE2Beacon:  void  <init>(java.lang.String,int,int,com.mobileforming.android.te2.maps.sdk.model.TE2Beacon$1)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  downdLoadOffLineCategoriesPois(com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  handleDownloadCategoriesFailure(com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.util.List)
com.mobileforming.android.te2.maps.sdk.MapDataManager$10:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy,android.content.Context)
com.mobileforming.android.te2.maps.view.MapView:  void  setCurrentPositionOrientation(float)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onOrientationUpdate(float)
com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onEventActionClick(com.mobileforming.te2.core.model.EventTriggeredAction)
com.mobileforming.te2.core.model.Event:  void  setEventActions(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.te2.core.caching.PersistenceObject:  void  <init>(long,java.lang.Object)	com.mobileforming.te2.core.caching.GsonFileCache:  com.mobileforming.te2.core.caching.PersistenceObject  retrieve(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$14:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$14:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onVenueInitialized(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  boolean  shouldRetrieveShows()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.android.te2.tracker.TrackerConfig:  float  access$202(com.mobileforming.android.te2.tracker.TrackerConfig,float)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setLocationUpdateFrequencyDistance(float)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$5:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  queueTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.lang.String  getBody()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig[]  newArray(int)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventVenues(com.mobileforming.te2.core.model.Event,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.venue.VenueModule$2:  void  <init>(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.venue.VenueModule:  void  getCurrentVenue(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.MapsModuleFragment$12:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.grupo.DiningFragment:  void  access$000(com.mobileforming.android.te2.grupo.DiningFragment,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.DiningFragment$1$1:  void  run()
com.mobileforming.te2.core.model.LocationUpdateConfig:  int  getFastestInterval()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  java.util.List  access$302(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  <init>()
com.mobileforming.te2.core.model.DeviceInfo:  java.lang.String  manufacturer()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)
com.mobileforming.android.te2.grupo.UserFragment:  com.mobileforming.android.te2.grupo.NavigationActivity  access$100(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$2:  void  onChanged(com.mobileforming.android.te2.tracker.system.location.LocationState)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapManager:  long  getWalkingTime(java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$24:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder  timestamp(long)	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)
com.mobileforming.te2.core.model.PaymentType:  com.mobileforming.te2.core.model.PaymentType  valueOf(java.lang.String)	com.mobileforming.te2.core.model.PaymentType$1:  com.mobileforming.te2.core.model.PaymentType  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.te2.core.model.EventAction:  void  setKey(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails:  void  <init>(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails  build()
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  sendUserTag(com.google.gson.JsonObject,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  sendLanguageTag(java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.CacheItem$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheItem  build()	com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.String,long)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  com.mobileforming.android.te2.events.filters.FilterConfig  access$002(com.mobileforming.android.te2.events.filters.EventFilterConfiguration,com.mobileforming.android.te2.events.filters.FilterConfig)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration$Builder  setFilterConfig(com.mobileforming.android.te2.events.filters.FilterConfig)
com.mobileforming.te2.core.model.ExternalLink$1:  com.mobileforming.te2.core.model.ExternalLink[]  newArray(int)	com.mobileforming.te2.core.model.ExternalLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logRejectedVenueExit(android.location.Location,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  logRejectedVenueExit(android.location.Location,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  addViewBehaviors(android.view.View)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])	com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.infos.InfoModule:  com.mobileforming.android.te2.infos.InfoModule  getInstance(android.app.Application)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()
com.mobileforming.android.te2.tracker.location.PositionTracker:  long  access$500(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  float  access$500(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.te2.core.view.MenuTileView:  void  access$500(com.mobileforming.te2.core.view.MenuTileView)	com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  call(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode[]  values()	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor$1:  void  <clinit>()
com.mobileforming.android.te2.tracker.location.GeofenceAction:  void  setErrorMessage(java.lang.String)	com.mobileforming.android.te2.tracker.location.GeofenceIntentService:  void  onHandleIntent(android.content.Intent)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$5:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackNetworkAccessEvent(com.mobileforming.te2.core.model.NetworkAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.te2.core.model.LineItem:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.LineItem$1:  com.mobileforming.te2.core.model.LineItem  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData:  com.mobileforming.android.te2.tracker.system.bluetooth.BluetoothStateLiveData  getInstance(android.content.Context)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$2:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$2:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.auth.AuthManager$2:  void  <init>(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.auth.model.AuthResponse)	com.mobileforming.te2.core.auth.AuthManager:  void  fetchFromApi(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.InfoModuleActivity:  com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider  getInfoDataProvider()	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onAttach(android.content.Context)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper:  void  <init>(android.location.Location,java.lang.String,java.lang.String,boolean)	com.mobileforming.android.te2.maps.sdk.model.LocationWrapper:  void  <init>(android.location.Location,java.lang.String,java.lang.String,boolean,com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$1)
com.mobileforming.te2.core.model.BeaconInfo$1:  com.mobileforming.te2.core.model.BeaconInfo  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.BeaconInfo$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.eventslist.EventsListViewModel:  android.arch.lifecycle.LiveData  getEventsListLiveData(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,java.lang.String,int,int)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendBeaconExit(com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  java.lang.String  access$500(com.mobileforming.android.te2.tracker.location.GeofenceTracker)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$2:  void  onFailure(java.lang.Exception)
com.mobileforming.te2.core.view.MenuTileView:  int  access$000(com.mobileforming.te2.core.view.MenuTileView)	com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)	com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.model.MessageAction$1:  com.mobileforming.te2.core.model.MessageAction[]  newArray(int)	com.mobileforming.te2.core.model.MessageAction$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  notifyModuleStartError(boolean)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)
com.mobileforming.te2.core.model.ProductSelection$1:  com.mobileforming.te2.core.model.ProductSelection  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ProductSelection$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  float  access$500(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.te2.core.api.BaseWebService$1$1:  io.reactivex.SingleSource  apply(retrofit2.adapter.rxjava2.Result)	com.mobileforming.te2.core.api.BaseWebService$1$1:  java.lang.Object  apply(java.lang.Object)
com.mobileforming.te2.core.model.PathData:  void  setDeviceLongitude(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.tracker.location.PositionTracker:  long  access$300(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker$LocationUpdateListener:  void  onLocationChanged(android.location.Location)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  ensureDeviceRegistration(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  startGuestSurvey()
com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$2102(com.mobileforming.android.te2.tracker.TrackerConfig,long)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setBackgroundScanPeriod(long)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  launchNativeApp(java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  boolean  access$100(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment,java.lang.String)
com.mobileforming.te2.core.model.EventAction$1:  com.mobileforming.te2.core.model.EventAction  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventAction$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupTabView()	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.messages.FeaturedMessageFragment:  boolean  access$400(com.mobileforming.android.te2.messages.FeaturedMessageFragment)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(android.content.Intent)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5$1:  void  <init>(com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  tokenCreated(java.lang.String)
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  hiddenSettingsPageViewed()	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  com.mobileforming.android.te2.infos.adapter.InfoListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchVenueInfo(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchVenueInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.EventVenue$1:  com.mobileforming.te2.core.model.EventVenue[]  newArray(int)	com.mobileforming.te2.core.model.EventVenue$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.model.ProductStatus$1:  com.mobileforming.te2.core.model.ProductStatus[]  newArray(int)	com.mobileforming.te2.core.model.ProductStatus$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  setBeaconEventListener(com.mobileforming.android.te2.tracker.location.BeaconEventListener)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  initBeaconTracker(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$17:  void  call(java.lang.Object)
com.mobileforming.te2.core.model.InfoEmailDetailItem:  java.lang.String  getTo()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.Link  parseLinkInfo(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.model.InfoDetailItem)
com.mobileforming.te2.core.util.DateStringUtil:  long  getNumberOfHours(long)	com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.maps.sdk.LocationDataSchedulerService:  void  startEventScheduler(android.content.Context)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  scheduleOnConnectDownloadRetry()
com.mobileforming.te2.core.model.DisplayType$1:  com.mobileforming.te2.core.model.DisplayType  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.DisplayType$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.RefApplication:  void  pushTokenGenerated()	com.mobileforming.android.te2.grupo.defaults.InstanceIdService:  void  onTokenRefresh()
com.mobileforming.android.te2.infos.InfoModuleFragment:  void  setFragmentListener(com.mobileforming.android.te2.infos.InfoModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showInfo()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setLandmarkPoi(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  bindingCategories(java.util.List)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity:  void  setModuleListener(com.mobileforming.android.te2.maps.MapsModuleListener)	com.mobileforming.android.te2.maps.MapsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.te2.core.model.Message:  void  setDescription(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlacesLiveData  access$000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService$1:  void  onResponse(retrofit2.Call,retrofit2.Response)
com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  void  <init>(java.lang.String,int,int,int,int,boolean,double,double,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.TE2BeaconModel:  void  <init>(java.lang.String,int,int,int,int,double,double,java.lang.String)
com.mobileforming.te2.core.entity.BeaconsEntity:  int  getMajor()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.android.te2.grupo.NavigationActivity$8:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()
com.mobileforming.te2.core.model.Value$1:  com.mobileforming.te2.core.model.Value  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Value$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  lat(double)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.defaults.DefaultsModuleInteractorImpl:  void  fetchAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  access$000(com.mobileforming.android.te2.maps.fragment.PoiListFragment)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$1:  void  onChanged(java.lang.Integer)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$1:  void  <init>(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter,java.util.List,java.util.List)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  setLoggerEventsList(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.Observer  access$1202(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,android.arch.lifecycle.Observer)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.events.util.DateStringUtil:  long  getNumberOfMinutes(long)	com.mobileforming.android.te2.events.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.android.te2.maps.util.ImageUtils$1:  void  <init>(android.widget.ImageView,android.graphics.drawable.Drawable)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadRoundedImage(com.bumptech.glide.RequestManager,java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  <init>(com.mobileforming.android.te2.maps.sdk.DataManager,com.mobileforming.android.te2.maps.sdk.CacheRepository,android.content.Context)
com.mobileforming.android.te2.maps.MapsModuleRepository:  void  <init>(android.app.Application)	com.mobileforming.android.te2.maps.MapsModuleRepository:  com.mobileforming.android.te2.maps.MapsModuleRepository  getInstance(android.app.Application)
com.mobileforming.android.te2.tracker.TrackerMonitoringService$1:  void  <init>(com.mobileforming.android.te2.tracker.TrackerMonitoringService)	com.mobileforming.android.te2.tracker.TrackerMonitoringService:  int  onStartCommand(android.content.Intent,int,int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  startGuestSurvey()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onAttachFragment(android.support.v4.app.Fragment)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setPoiListReadyCallback(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.MapsModuleFragment$15:  void  run()
com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.NavigationActivity$16:  void  onData(java.lang.Object)
com.mobileforming.android.te2.events.filters.EventsCategoriesConfig:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.events.filters.EventsCategoriesConfig$1:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.PurchaseDetail$1:  com.mobileforming.te2.core.model.PurchaseDetail[]  newArray(int)	com.mobileforming.te2.core.model.PurchaseDetail$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration:  com.mobileforming.android.te2.events.filters.EventsCategoriesConfig  getCategoriesConfig()	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)
com.mobileforming.te2.core.view.CustomButton$1:  void  <init>(com.mobileforming.te2.core.view.CustomButton)	com.mobileforming.te2.core.view.CustomButton:  void  initAnalytics(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.model.Payment$1:  com.mobileforming.te2.core.model.Payment  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  onData(java.util.List)	com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1$1:  void  onSuccess(java.util.List)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1$1$1:  void  onSuccess(java.lang.Object)
com.mobileforming.te2.core.model.Position$1:  com.mobileforming.te2.core.model.Position  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Position$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  void  getMapInfo(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapInfoAndData(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  call(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  call(java.lang.Object)
com.mobileforming.android.te2.infos.fragment.LoggerFragment$1:  void  onChanged(java.util.List)	com.mobileforming.android.te2.infos.fragment.LoggerFragment$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(com.mobileforming.te2.core.model.EventWrapper,com.mobileforming.te2.core.model.EventWrapper)	com.mobileforming.android.te2.events.fragment.EventsListFragment$11:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$4:  void  onChanged(java.lang.Long)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$4:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$9:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.messages.MessagesListFragment:  java.util.List  access$100(com.mobileforming.android.te2.messages.MessagesListFragment)	com.mobileforming.android.te2.messages.MessagesListFragment$1$1:  void  run()
com.mobileforming.te2.core.view.CustomCheckBox:  boolean  access$000(com.mobileforming.te2.core.view.CustomCheckBox)	com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  int  access$008(com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData)	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData$1:  void  run()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.util.List,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  registerTestDevice(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  buildMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo,java.util.List)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails:  boolean  isHasWifiStatePermission()	com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchCategories(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getLocalMapDataUrl(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  access$700(java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.te2.core.model.Info$1:  com.mobileforming.te2.core.model.Info[]  newArray(int)	com.mobileforming.te2.core.model.Info$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$8:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchHomePageEvents(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.PhoneLink$1:  com.mobileforming.te2.core.model.PhoneLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PhoneLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataInfo(java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl$3:  void  <init>(com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl,int,float)	com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  postCallback(int,float)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1$1:  java.util.Map  call(java.util.List,java.lang.Integer)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8$1$1:  java.lang.Object  call(java.lang.Object,java.lang.Object)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.NetworkUtils:  long  getCacheMaxAge(okhttp3.Response,long)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onResponseParseSuccess(java.lang.String,okhttp3.Response,java.lang.Object)
com.mobileforming.te2.core.model.LineItem$1:  com.mobileforming.te2.core.model.LineItem[]  newArray(int)	com.mobileforming.te2.core.model.LineItem$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.venue.VenueWebService:  void  access$000(com.mobileforming.android.te2.venue.VenueWebService,okhttp3.Headers,java.util.Map)	com.mobileforming.android.te2.venue.VenueWebService$1:  void  onResponse(retrofit2.Call,retrofit2.Response)
com.mobileforming.te2.core.model.Message:  int  compareTo(com.mobileforming.te2.core.model.Message)	com.mobileforming.te2.core.model.Message:  int  compareTo(java.lang.Object)
com.mobileforming.te2.core.auth.AuthManager$1$1:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$1,java.lang.String)	com.mobileforming.te2.core.auth.AuthManager$1:  void  run()
com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  java.lang.Boolean  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$11:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadPoiImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$6:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.api.device.DeviceInformation:  void  setAppVersion(java.lang.String)	com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postDeviceInformation(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.view.MapView:  void  scaleMap(boolean,float)	com.mobileforming.android.te2.maps.view.MapView:  void  centerMapToCurrentPosition(boolean,java.util.Map,java.util.Map,java.lang.String)
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleException(java.lang.Exception)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.model.MapGrid:  void  setInsertionIndex(int)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  addIfNotFound(com.mobileforming.android.te2.maps.sdk.model.MapGrid,float)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$000(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$2:  void  run()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5$1:  void  <init>(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5,com.mobileforming.te2.core.model.Link)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5:  void  run()
com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  trackNetworkState(android.content.Context)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.Poi$Builder:  java.util.List  access$700(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)	com.mobileforming.android.te2.maps.sdk.model.Poi:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Poi$Builder)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.net.Uri  buildPhoneUri(java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)
com.mobileforming.android.te2.messages.MessagesModule:  void  setHasRedeemedOffer(boolean)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  launchOfferRedeemedDialog()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  dispatchJob(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  webRequestFailed(android.content.Context,java.lang.String)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$14:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  showLoader()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.BeaconsDAO  beaconsDAO()
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)
com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl$1:  void  <init>(int)	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  okhttp3.Interceptor  provideCacheInterceptor(int)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.lang.Integer)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.lang.Integer)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.List  access$200(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$3:  void  onData(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setupDetailView(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$500(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$5:  void  run()
com.mobileforming.te2.core.model.EventAction$1:  com.mobileforming.te2.core.model.EventAction[]  newArray(int)	com.mobileforming.te2.core.model.EventAction$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$2:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAndShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOffer(com.mobileforming.te2.core.api.messages.model.MessageInfo)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.api.commerce.model.OfferResponse  fetchOfferForType(com.mobileforming.te2.core.model.MessageType,com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  thumbnail(float)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  thumbnail(float)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  shutdown()	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)
com.mobileforming.te2.core.model.MessageActionState:  com.mobileforming.te2.core.model.MessageActionState[]  values()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$16:  void  <clinit>()
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$200(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.util.Date)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$5:  void  run()
com.mobileforming.android.te2.tracker.location.LocationRepository:  void  initLocationLiveData(android.content.Context)	com.mobileforming.android.te2.tracker.location.LocationRepository:  void  <init>(android.content.Context)
com.mobileforming.android.te2.maps.sdk.model.MapDataPayload:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$LocalLinearTransformStrategy  getLocalLinearTransformStrategy()	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  timeout(int,java.util.concurrent.TimeUnit)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  void  initializeClientIfNull()
com.mobileforming.te2.core.model.Poi:  void  setMenus(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadMenus(java.lang.String,java.lang.String)
com.mobileforming.te2.core.dialog.alert.AlertDialogViewHolder:  void  <init>(android.view.View)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$LinearRetryWithDelay:  void  <init>(int,long)	com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.functions.Func1  linearBackoff(int,long)
com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$1:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackEvent(com.mobileforming.te2.core.model.TrackerEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.events.eventslist.EventsRepository:  android.arch.lifecycle.LiveData  getEventList(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.eventslist.EventsListViewModel:  android.arch.lifecycle.LiveData  getEventsListLiveData(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.messages.util.SharedPrefsUtils:  boolean  isMessageRead(android.content.Context,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  onResume()
com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  showOfferDetail(com.mobileforming.android.te2.messages.offers.detail.BaseOfferDetailViewModel)
com.mobileforming.android.te2.maps.sdk.model.CacheStrategy:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Mode,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$1)	com.mobileforming.android.te2.maps.sdk.model.CacheStrategy$Builder:  com.mobileforming.android.te2.maps.sdk.model.CacheStrategy  build()
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  initCustomSpinner(android.view.View)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.model.Icon$1:  com.mobileforming.te2.core.model.Icon  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Icon$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(android.content.Intent)	com.mobileforming.android.te2.messages.FeaturedMessageFragment$1$1:  void  onData(java.lang.Object)
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.concurrent.ExecutorService)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String)	com.mobileforming.android.te2.maps.MapsModule:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$23:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$8:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  hideLoader()
com.mobileforming.android.te2.maps.sdk.model.Fence:  java.lang.String  getId()	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayload(java.lang.String,java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.te2.core.model.PathData:  float  getDestinationY()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.maps.sdk.BeaconConfig:  boolean  uuidForVenueEntryEnabled()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  processOnVenueDataReady()
com.mobileforming.te2.core.db.AppDatabase_Impl:  java.util.List  access$100(com.mobileforming.te2.core.db.AppDatabase_Impl)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onCreate(android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate)	com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig)
com.mobileforming.android.te2.tracker.TrackerModule$6:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule,com.mobileforming.android.te2.tracker.TrackerConfig,android.content.Context,boolean,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.api.commerce.webservice.CommerceRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(com.mobileforming.android.te2.messages.MessagesModuleConfig)
com.mobileforming.te2.core.model.PathData:  java.lang.String  getMapId()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackMessageLinkTapped(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.tracker.TrackerModule:  void  postMessageLinkTapped(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadAndSaveMap()	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.lang.String  fetchMapImageUri()
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  double  access$200(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.maps.sdk.model.MapDataPayload$Param:  java.util.List  getPositionMarkers()	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  com.mobileforming.android.te2.maps.sdk.MapManager  buildMapManager(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawDiagonalFromTopRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  long  access$700(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.tracker.TrackerModule$4:  void  onChanged(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.TrackerModule$4:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.events.EventsModule:  void  registerModuleListener(android.app.Application,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupAnalytics()
com.mobileforming.te2.core.api.device.DeviceRetrofitWebService:  void  postBeaconEnterExit(boolean,com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  postBeaconEvent(com.mobileforming.te2.core.model.BeaconEvent,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  int  loadStoredMapVersion(java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  boolean  isMapCached(java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapInfo)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$2:  void  <init>(com.mobileforming.te2.core.dialog.alert.AlertDialogFragment)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  android.arch.lifecycle.LiveData  apply(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.grupo.user.SurveyAnswersRepository$1:  java.lang.Object  apply(java.lang.Object)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadProductImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.te2.core.model.EventVenue:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventVenue$1:  com.mobileforming.te2.core.model.EventVenue  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  java.util.Set  getChangeOfDayIndicesSet()	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  jumpToEvent(java.util.Calendar)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  getBaseUrl()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  <init>(com.mobileforming.android.te2.tracker.TrackerConfig)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  getInfoLinkTitle(java.lang.String)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onInfoLinkSelected(com.mobileforming.te2.core.model.InfoLinkData)
com.mobileforming.te2.core.api.BaseWebService$1$1$4:  void  <init>(com.mobileforming.te2.core.api.BaseWebService$1$1,retrofit2.Response)	com.mobileforming.te2.core.api.BaseWebService$1$1:  io.reactivex.SingleSource  apply(retrofit2.adapter.rxjava2.Result)
com.mobileforming.te2.core.model.ProductStatus$1:  com.mobileforming.te2.core.model.ProductStatus  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ProductStatus$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.entity.LocationHistoryEntity:  java.util.Date  getDateOfLog()	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.LocationHistoryEntity)
com.mobileforming.android.te2.maps.MapsModuleFragment:  int  access$400(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment$3$1:  void  run()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  call(java.lang.Long)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$9:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  access$000(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$5:  void  run()
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalMapDataPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier,android.content.Context)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupUI(android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase_Impl,int)	com.mobileforming.te2.core.db.AppDatabase_Impl:  android.arch.persistence.db.SupportSQLiteOpenHelper  createOpenHelper(android.arch.persistence.room.DatabaseConfiguration)
com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDisplayCategories(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  downloadCategories(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager,java.util.List,com.mobileforming.android.te2.maps.sdk.MapDecision,java.util.List,java.lang.String,com.google.android.gms.tasks.TaskCompletionSource)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  com.google.android.gms.tasks.Task  downloadCategories(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8$2:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$8:  void  onError(java.lang.Throwable)
com.mobileforming.te2.core.util.DateStringUtil:  long  getNumberOfMinutes(long)	com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getTimeFormatted(android.content.Context,long)
com.mobileforming.te2.core.form.FormViewParentHolder:  void  <init>(android.view.ViewGroup)	com.mobileforming.te2.core.form.FormLinearLayout:  void  onFinishInflate()
com.mobileforming.te2.core.view.Te2DatePickerDialog:  void  setOnDateSetListener(com.mobileforming.te2.core.view.Te2DatePickerDialog$Te2DatePickerDialogListener)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  startDatePickerDialog(int)
com.mobileforming.android.te2.maps.view.SubCategoryTabLayout:  void  show()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setChildTabTitles(int)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  messageFromPoiChildToParent()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet:  void  <init>(com.mobileforming.android.te2.maps.sdk.PathFinderAStar$1)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  com.mobileforming.android.te2.maps.sdk.model.MapGrid[]  findPath(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)
com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  void  <init>(java.lang.String,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsPayload)	com.mobileforming.te2.core.AnalyticsEvent:  com.mobileforming.te2.core.AnalyticsEvent  create(java.lang.String,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType,com.mobileforming.te2.core.AnalyticsEvent$AnalyticsPayload)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  boolean  isMapCached(java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapInfo)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  void  <init>(int[][],com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy)	com.mobileforming.android.te2.maps.sdk.MapManager:  void  <init>(int[][],java.util.List,int)
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothAvailable()	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$000(com.mobileforming.android.te2.tracker.system.SystemTracker)
com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment:  void  access$200(com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoWebViewFragment$1:  void  onLoadResource(android.webkit.WebView,java.lang.String)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadInfoMessage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadMessageImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailFragment)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  com.mobileforming.te2.core.model.Info  getLinkItem(int)	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$10:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.entity.BeaconsEntity:  long  getUid()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.BeaconsEntity)
com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  searchSelected()	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  displaySearch()
com.mobileforming.android.te2.events.filters.EventFilterManager:  void  <init>(java.util.Collection,java.util.Collection)	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.observers.GPSLocationObserver:  void  <init>(java.util.ArrayList)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.util.ImageUtils$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.maps.util.ImageUtils$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.te2.core.model.Status:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Status$1:  com.mobileforming.te2.core.model.Status  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  void  <init>(com.mobileforming.android.te2.messages.view.BarcodeView)	com.mobileforming.android.te2.messages.view.BarcodeView:  void  asyncBarcodeRefresh(com.mobileforming.te2.core.model.Barcode)
com.mobileforming.android.te2.maps.poi.MapPoiWrapperList:  java.util.ArrayList  getLandmarkPoiList()	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  extractAndDisplayLandmarkPoi(java.util.List)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  access$100(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.android.te2.tracker.TrackerConfig:  int  access$1702(com.mobileforming.android.te2.tracker.TrackerConfig,int)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setNotificationDrawableId(int)
com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.activity.WalkingDirectionsActivity$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.venue.VenueDataManager:  com.mobileforming.android.te2.venue.VenueCache  access$000(com.mobileforming.android.te2.venue.VenueDataManager)	com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$HeaderViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateHeaderViewHolder(android.view.ViewGroup)
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$1:  void  <init>(boolean,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository:  void  logBeaconEnter(com.mobileforming.te2.core.db.AppDatabase,com.mobileforming.te2.core.model.BeaconInfo,boolean)
com.mobileforming.android.te2.tracker.TrackerMonitoringService:  void  setDrawableId(int)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails:  java.lang.String  getSsid()	com.mobileforming.android.te2.tracker.system.SystemTracker$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.network.NetworkDetails)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawOtherBottomRightRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  onLocationUpdate(android.location.Location,java.lang.String)
com.mobileforming.te2.core.api.BaseWebService$2:  void  <init>(com.mobileforming.te2.core.api.BaseWebService,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.api.BaseWebService:  retrofit2.Callback  convertToRetrofitCallback(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$7:  void  onData(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$7:  void  onData(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  int  access$000(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.MapsModuleFragment$10$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$10$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.Throwable,java.lang.String)	com.mobileforming.android.te2.maps.sdk.exception.DataException:  void  <init>(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  float  getLocationUpdateAccuracyThreshold()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.events.util.DateStringUtil:  boolean  isLeapYear(int)	com.mobileforming.android.te2.events.util.DateStringUtil:  int  getNumberOfDaysInYear(int)
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  access$000(com.mobileforming.android.te2.messages.MessagesDetailFragment)	com.mobileforming.android.te2.messages.MessagesDetailFragment$2:  boolean  onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean)
com.mobileforming.android.te2.infos.logger.LoggerActivity$3:  void  <init>(com.mobileforming.android.te2.infos.logger.LoggerActivity)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  shareLoggerEvents(java.util.List)
com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$2:  void  <init>(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter,com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter:  void  onBindViewHolder(com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$ItemViewHolder,int)
com.mobileforming.android.te2.grupo.NavigationActivity$3:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onMessageSelected(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.grupo.DiningFragment$1:  void  <init>(com.mobileforming.android.te2.grupo.DiningFragment)	com.mobileforming.android.te2.grupo.DiningFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  getMultiVenuePlaceLiveDataFromWeb(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlacesLiveData  getMultiVenuePlaceLiveData(android.content.Context,java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.mobileforming.android.te2.maps.poi.PoiStatusLiveData  getPoiStatusLiveData(int)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.mobileforming.android.te2.maps.poi.PoiStatusLiveData  getPoiStatusLiveData()
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  startDownload()
com.mobileforming.te2.core.model.Event$1:  com.mobileforming.te2.core.model.Event  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Event$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  com.mobileforming.android.te2.maps.sdk.DataItem  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.MapDataManager$24:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$LinearRetryWithDelay:  long  getRetryDelay(int,long)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  rx.Observable  call(java.lang.Throwable)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  uploadStatus(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  com.mobileforming.te2.core.AnalyticsEvent$AnalyticsEventType  getEventType()	com.mobileforming.te2.core.AutoValue_AnalyticsEvent:  boolean  equals(java.lang.Object)
com.mobileforming.android.te2.messages.MessagesModule:  boolean  isRedeemingOffer()	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onResume()
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindHeaderViewHolder(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$HeaderViewHolder,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  onBindHeaderViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int)
com.mobileforming.te2.core.model.LocationTechnologyThreshold:  com.mobileforming.te2.core.model.LocationTechnologyThreshold  valueOf(java.lang.String)	com.mobileforming.te2.core.model.LocationTechnology:  void  <init>(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.GeofencingEventReceiver:  void  <init>(com.mobileforming.android.te2.tracker.location.GeofenceEventListener)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  start()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  fetchLinkDetails(com.mobileforming.te2.core.model.InfoLinkData,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  onInfoLinkSelected(com.mobileforming.te2.core.model.InfoLinkData)
com.mobileforming.te2.core.model.TestDevice:  void  setAppUserId(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$7$1:  void  onSuccess(com.mobileforming.te2.core.model.TestDevice,java.util.Map)
com.mobileforming.te2.core.api.venue.VenueRetrofitWebService$8:  void  <init>(com.mobileforming.te2.core.api.venue.VenueRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.venue.VenueRetrofitWebService:  void  getPOIStatus(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  <init>(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  <init>()
com.mobileforming.te2.core.view.CustomButton:  void  init(android.content.Context)	com.mobileforming.te2.core.view.CustomButton:  void  <init>(android.content.Context)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackNetworkAccessEvent(com.mobileforming.te2.core.model.NetworkAccessEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendPOIExit(android.location.Location,java.lang.String)
com.mobileforming.te2.core.view.PaymentImageView:  com.mobileforming.te2.core.model.PaymentType  getPaymentType()	com.mobileforming.te2.core.view.PaymentImageView:  void  setPaymentType(com.mobileforming.te2.core.model.PaymentType)
com.mobileforming.android.te2.maps.sdk.MapDataManager$9:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataPayload(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.te2.core.model.PhoneLink$1:  com.mobileforming.te2.core.model.PhoneLink[]  newArray(int)	com.mobileforming.te2.core.model.PhoneLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  com.mobileforming.android.te2.infos.configuration.AboutInfoConfig  createFromParcel(android.os.Parcel)	com.mobileforming.android.te2.infos.configuration.AboutInfoConfig$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  computeIfAbsent(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$3:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.maps.util.ImageUtils$3:  void  <init>(android.widget.ProgressBar)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadImage(android.content.Context,java.lang.String,android.widget.ImageView,android.widget.ProgressBar)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomDatabase)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  void  <init>(android.arch.persistence.room.RoomDatabase)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$15:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  displayWaitTimes()
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  onItemClick(android.view.View,int)	com.mobileforming.android.te2.infos.adapter.InfoListAdapter$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  double  access$200(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)
com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3$1:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.LoggerEventsDAO_Impl$3:  java.util.List  compute()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$4:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  updateMapImage(java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$13:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackCouponAction(com.mobileforming.te2.core.model.CouponActionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.tracker.TrackerModule$2:  void  <init>(com.mobileforming.android.te2.tracker.TrackerModule)	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.messages.MessagesModule:  void  addUiDelegate(com.mobileforming.android.te2.messages.MessagesUiDelegate)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onAttach(android.content.Context)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  void  initGridValues()	com.mobileforming.android.te2.maps.sdk.PathFinderAStar:  com.mobileforming.android.te2.maps.sdk.model.MapGrid[]  findPath(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)
com.mobileforming.android.te2.infos.logger.LoggerViewModel:  android.arch.lifecycle.LiveData  getCurrentLocationPermissions()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.model.Detail:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Detail$1:  com.mobileforming.te2.core.model.Detail  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.TestDevice:  java.lang.String  getRegistrationCode()	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  onEventsSearchTermApplied(java.lang.String)	com.mobileforming.android.te2.events.fragment.EventsListFragment$3$1:  void  run()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadCategoriesByModuleId(com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$400(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  void  throwFormattedException(java.lang.String)	com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  validateField(java.lang.String,java.lang.String)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  com.mobileforming.te2.core.entity.LocationHistoryEntity  compute()	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  java.lang.Object  compute()
com.mobileforming.android.te2.infos.InfoModuleFragment$3:  void  <init>(com.mobileforming.android.te2.infos.InfoModuleFragment)	com.mobileforming.android.te2.infos.InfoModuleFragment:  void  hideLoadingContainer()
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$5:  void  <init>(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  ensureDeviceRegistration(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.InfoModuleActivity:  void  setInfoDataProvider(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)	com.mobileforming.android.te2.infos.InfoModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository:  void  logLocationChange(android.location.Location,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.te2.core.model.Event:  void  setPromotionType(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.tracker.TrackerConfig:  long  access$1902(com.mobileforming.android.te2.tracker.TrackerConfig,long)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setForegroundScanPeriod(long)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  void  <init>(java.lang.String,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  <init>(android.content.Context,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.te2.core.caching.CacheConfiguration,okhttp3.Interceptor,okhttp3.Authenticator)
com.mobileforming.te2.core.model.PathData:  float  getDeviceLatitude()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  setupComplete(boolean)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,boolean)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$5:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback,java.util.Date)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsAfterStartDate(java.util.Date,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.infos.fragment.LoggerFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.LoggerFragment)	com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.mobileforming.te2.core.auth.model.AuthRequest:  java.lang.String  getProvider()	com.mobileforming.te2.core.auth.AuthManager$5:  void  run()
com.mobileforming.android.te2.infos.logger.LoggerViewModel:  void  setInteractor(com.mobileforming.android.te2.infos.logger.LoggerInteractor)	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setBssid(java.lang.String)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.tracker.TrackerModule:  com.mobileforming.android.te2.tracker.multivenue.CurrentVenueIdLiveData  getCurrentVenueIdLiveData()	com.mobileforming.android.te2.grupo.RefApplication:  void  onCreate()
com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  showExpirationMessage(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  setupDetailView(android.view.LayoutInflater)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapInfoAndData(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  downloadCategoriesAndPois(com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.form.FormData:  java.lang.String  getString(int)	com.mobileforming.te2.core.form.FormData:  boolean  getBoolean(int)
com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  initializeCacheManagers()	com.mobileforming.android.te2.events.dataprovider.EventsModuleCache:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.te2.core.model.EventFilter$1:  com.mobileforming.te2.core.model.EventFilter[]  newArray(int)	com.mobileforming.te2.core.model.EventFilter$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.model.PathData:  void  setWalkingPathGenerated(boolean)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getMapModeLocationUpdates()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  java.lang.String  toString()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6:  void  call(java.lang.Throwable)
com.mobileforming.te2.core.auth.AuthInterceptor$1:  void  <init>(com.mobileforming.te2.core.auth.AuthInterceptor,java.util.concurrent.BlockingQueue)	com.mobileforming.te2.core.auth.AuthInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache)	com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  initializeCacheManagers()
com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow$1:  void  <init>(com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow)	com.mobileforming.android.te2.maps.view.WalkingDirectionsPopupWindow:  void  initializeView()
com.mobileforming.android.te2.events.EventsModule:  void  registerEventsDataProvider(android.app.Application,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupEventsModule()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$700(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,android.view.LayoutInflater)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$14:  void  onChanged(java.util.List)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  com.mobileforming.te2.core.entity.BeaconsEntity  compute()	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  java.lang.Object  compute()
com.mobileforming.te2.core.model.AppConfig:  com.mobileforming.te2.core.model.LocationUpdateConfig  getNormalLocationUpdates()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  com.mobileforming.android.te2.infos.fragment.InfoDetailFragment  newInstance(com.mobileforming.te2.core.model.InfoLink,com.mobileforming.android.te2.infos.InfoModuleListener,com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory,com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  buildMapSession(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.te2.core.auth.AuthInterceptor:  java.lang.String  getEncodedCredentials()	com.mobileforming.te2.core.auth.AuthInterceptor:  okhttp3.Response  intercept(okhttp3.Interceptor$Chain)
com.mobileforming.te2.core.model.EventFilter:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.EventFilter$1:  com.mobileforming.te2.core.model.EventFilter  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)
com.mobileforming.android.te2.maps.sdk.model.VenuePayload:  java.lang.String  getId()	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.te2.core.form.FormSubmitButton$1:  void  <init>(com.mobileforming.te2.core.form.FormSubmitButton)	com.mobileforming.te2.core.form.FormSubmitButton:  void  init()
com.mobileforming.te2.core.model.Image$1:  com.mobileforming.te2.core.model.Image[]  newArray(int)	com.mobileforming.te2.core.model.Image$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  onData(java.lang.Object)
com.mobileforming.android.te2.grupo.RefApplication:  boolean  isInBackground()	com.mobileforming.android.te2.grupo.defaults.FcmService:  void  onMessageReceived(com.google.firebase.messaging.RemoteMessage)
com.mobileforming.android.te2.maps.sdk.model.Fence$Builder:  com.mobileforming.android.te2.maps.sdk.model.Fence$Type  access$100(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)	com.mobileforming.android.te2.maps.sdk.model.Fence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Fence$Builder)
com.mobileforming.android.te2.maps.dataprovider.MapsLocationListener:  void  registerLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  registerLocationUpdateListener(com.mobileforming.android.te2.maps.dataprovider.LocationUpdateListener)
com.mobileforming.android.te2.maps.sdk.AppConfig:  java.lang.String  getPushToken()	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  java.lang.String  getPushToken()
com.mobileforming.te2.core.model.ExternalLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.ExternalLink$1:  com.mobileforming.te2.core.model.ExternalLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconTrackerStopped()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  stop()
com.mobileforming.android.te2.tracker.system.SystemTracker:  void  onBluetoothUnavailable()	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  access$100(com.mobileforming.android.te2.tracker.system.SystemTracker)
com.mobileforming.te2.core.model.Info:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Info$1:  com.mobileforming.te2.core.model.Info  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.openinghours.VenueSchedule:  java.util.Date  getStartDate()	com.mobileforming.te2.core.model.openinghours.VenueSchedule:  boolean  isWithinSchedule(java.util.Date)
com.mobileforming.android.te2.maps.dataprovider.MapsModuleCache:  void  setVenueId(java.lang.String,java.lang.String,int)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  setCurrentVenue(java.lang.String,java.lang.String,int)
com.mobileforming.android.te2.infos.logger.LoggerActivity$2:  void  onChanged(com.mobileforming.te2.core.entity.LocationPermissionsEntity)	com.mobileforming.android.te2.infos.logger.LoggerActivity$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  long  access$900(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isBluetoothOn()	com.mobileforming.android.te2.tracker.TrackerModule:  boolean  isBluetoothOn()
com.mobileforming.android.te2.messages.MessagesModule:  void  notifyLoadingStarted()	com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()
com.mobileforming.android.te2.maps.sdk.model.Image:  void  <init>(int,int,com.mobileforming.android.te2.maps.sdk.model.Image$Resolution,java.lang.String)	com.mobileforming.android.te2.maps.sdk.model.Image:  void  <init>()
com.mobileforming.te2.core.model.Detail$1:  com.mobileforming.te2.core.model.Detail[]  newArray(int)	com.mobileforming.te2.core.model.Detail$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.api.BaseWebService$1$1:  void  <init>(com.mobileforming.te2.core.api.BaseWebService$1)	com.mobileforming.te2.core.api.BaseWebService$1:  io.reactivex.SingleSource  apply(io.reactivex.Single)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$602(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setUsername(java.lang.String)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onVenueDataReady()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$400(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.te2.core.model.Entry:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Entry$1:  com.mobileforming.te2.core.model.Entry  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.dialog.FullScreenDialogFragment$1:  void  <init>(com.mobileforming.te2.core.dialog.FullScreenDialogFragment,android.content.Context)	com.mobileforming.te2.core.dialog.FullScreenDialogFragment:  android.app.Dialog  onCreateDialog(android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onLocationOutsideVenue(double,double,float,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  onLocationOutsideVenue(java.lang.String,double,double,float)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$800(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$10:  void  onNext(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerModule$3:  void  onChanged(com.mobileforming.android.te2.tracker.system.location.LocationState)	com.mobileforming.android.te2.tracker.TrackerModule$3:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  updateAppUserId(java.lang.String)	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  initializeAppUserId()
com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)	com.mobileforming.te2.core.ModuleConfig:  void  copyInto(com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel)	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchWalkingTimeLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  java.lang.String  access$202(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,java.lang.String)	com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  access$500(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5$1:  void  run()
com.mobileforming.android.te2.maps.MapsModuleFragment$15$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$15)	com.mobileforming.android.te2.maps.MapsModuleFragment$15:  void  run()
com.mobileforming.te2.core.model.ModifierSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)	com.mobileforming.te2.core.model.ModifierSelection:  boolean  equals(java.lang.Object)
com.mobileforming.android.te2.messages.offers.OfferViewModel:  java.lang.String  getExpirationText()	com.mobileforming.android.te2.messages.offers.OfferListItem:  void  bind(android.view.View)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  android.arch.lifecycle.LiveData  access$1000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.util.TimeZone)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.grupo.user.VenueRepository$1:  void  <init>(com.mobileforming.android.te2.grupo.user.VenueRepository,android.arch.lifecycle.MutableLiveData)	com.mobileforming.android.te2.grupo.user.VenueRepository:  android.arch.lifecycle.MutableLiveData  getVenueLiveDataFromServer()
com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment  newInstance(com.mobileforming.te2.core.model.InfoLink)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.android.te2.messages.offers.detail.OfferDetailViewModel:  java.lang.String  getLegalSectionTitleText()	com.mobileforming.android.te2.messages.offers.detail.OfferDetailView:  void  bindViewModel()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.te2.core.model.PlatformUrl$1:  com.mobileforming.te2.core.model.PlatformUrl  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.PlatformUrl$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.view.MapView:  void  setSelectedPoiIconBackgroundColor(int)	com.mobileforming.android.te2.maps.view.MapView:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackDeviceInformationEvent(com.mobileforming.te2.core.model.DeviceInformationEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendVenueExit(android.location.Location,java.lang.String,java.lang.String)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackAppNotificationState(com.mobileforming.te2.core.model.AppNotificationStateEvent,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  sendTrackerEvent(java.lang.String,boolean,com.mobileforming.te2.core.model.TrackerEvent)
com.mobileforming.te2.core.entity.VenueMonitorEntity:  long  getUid()	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  restart()	com.mobileforming.android.te2.tracker.TrackerModule:  void  restart()
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  setRefreshDelay(int)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  com.mobileforming.android.te2.maps.poi.PoiStatusLiveData  getPoiStatusLiveData(int)
com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  subscribeTo(rx.Observable,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.DataManagerImpl:  void  executeRequest(com.mobileforming.android.te2.maps.sdk.DataRequest,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.util.DateStringUtil:  boolean  isTomorrow(java.util.Calendar,java.util.Date)	com.mobileforming.android.te2.maps.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.android.te2.maps.util.DateStringUtil$Mode)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showPermission()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$7:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  postNotifyLocationListeners(android.location.Location,java.lang.String)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1200(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.model.PathData:  void  setDeviceX(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.te2.core.model.ExternalLink$1:  com.mobileforming.te2.core.model.ExternalLink  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.ExternalLink$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Alarm:  com.mobileforming.te2.core.model.Time  getStartTime()	com.mobileforming.te2.core.model.Alarm:  java.util.Date  getStartTimeAsDate()
com.mobileforming.te2.core.model.Action:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Action$1:  com.mobileforming.te2.core.model.Action  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.view.MapView:  void  drawLocationMarker(android.graphics.Canvas,android.graphics.Bitmap,com.mobileforming.te2.core.model.Position,float)	com.mobileforming.android.te2.maps.view.MapView:  void  onDraw(android.graphics.Canvas)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil$2:  void  <init>(boolean,com.mobileforming.te2.core.model.openinghours.Day,io.te2.defaults.takeover.TakeoverListener,com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  void  updateUI(com.mobileforming.android.te2.grupo.NavigationActivity,com.mobileforming.te2.core.model.openinghours.Day,boolean,io.te2.defaults.takeover.TakeoverListener)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,android.widget.TextView)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setTimeText(android.widget.TextView)
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onBeaconMonitoringStarted(com.mobileforming.te2.core.model.BeaconInfo)	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  startMonitoringRegion(com.mobileforming.te2.core.model.BeaconInfo)
com.mobileforming.android.te2.tracker.TrackerModule:  void  setupLogger()	com.mobileforming.android.te2.tracker.TrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,boolean)
com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl$2:  void  <init>(com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl,boolean,com.mobileforming.android.te2.maps.sdk.NetworkType)	com.mobileforming.android.te2.maps.sdk.SystemEventManagerImpl:  void  notifyNetworkStateChangeEvent(boolean,android.net.NetworkInfo)
com.mobileforming.te2.core.model.Image:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Image$1:  com.mobileforming.te2.core.model.Image  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Poi:  java.lang.String  getType()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.te2.core.util.GlideRequest:  com.mobileforming.te2.core.util.GlideRequest  load(java.net.URL)	com.mobileforming.te2.core.util.GlideRequest:  com.bumptech.glide.RequestBuilder  load(java.net.URL)
com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.util.List)	com.mobileforming.android.te2.maps.MapsModuleFragment$13:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setLocationAccuracyThreshold(float)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(java.lang.Object)
com.mobileforming.android.te2.venue.VenueModule:  void  setCurrentVenue(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule:  void  access$000(com.mobileforming.android.te2.venue.VenueModule,com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.grupo.NavigationActivity:  android.support.design.widget.BottomNavigationView  getBottomNavigationView()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showDiningDetails(com.mobileforming.te2.core.model.Poi)
com.mobileforming.te2.core.model.BeaconInfo:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.BeaconInfo$1:  com.mobileforming.te2.core.model.BeaconInfo  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.AppConfig:  int  getMaxStaleInSeconds()	com.mobileforming.android.te2.maps.sdk.NetworkManagerImpl:  void  configureHttpClient(com.mobileforming.android.te2.maps.sdk.SDKConfig,okhttp3.OkHttpClient$Builder)
com.mobileforming.te2.core.db.AppDatabase_Impl:  com.mobileforming.te2.core.logger.dao.LocationHistoryDAO  locationDAO()	com.mobileforming.android.te2.tracker.logger.locationhistory.LocationHistoryRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationHistoryEntity[])
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  download(java.lang.Object)	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  download(java.lang.Object)
com.mobileforming.te2.core.util.DialogUtils:  android.app.Dialog  showIndeterminateLoadingDialog(android.content.Context)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  showLoading()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  downloadVenueData(java.util.List)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloaded(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.String)	com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.Object)
com.mobileforming.android.te2.grupo.user.VenueRepository:  android.arch.lifecycle.MutableLiveData  getVenueLiveDataFromServer()	com.mobileforming.android.te2.grupo.user.VenueRepository:  android.arch.lifecycle.LiveData  getVenueLiveData()
com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  void  <init>(android.os.Parcel)	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl$1:  com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Event:  void  setThumbnailImageUrl(java.lang.String)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  translateEvent(com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$3:  void  onData(java.lang.Object)
com.mobileforming.te2.core.model.Alarm$1:  com.mobileforming.te2.core.model.Alarm[]  newArray(int)	com.mobileforming.te2.core.model.Alarm$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdateEvent(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)
com.mobileforming.android.te2.grupo.NavigationActivity$1$1$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity$1$1,com.mobileforming.android.te2.grupo.RefApplication,biz.te2.guestsurvey.fragments.SurveyDialogFragment,biz.te2.guestsurvey.config.SurveyModuleConfig)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.messages.view.BarcodeView:  void  setBarcode(com.mobileforming.te2.core.model.Barcode)	com.mobileforming.android.te2.messages.MessagesDetailFragment:  void  initBarcode(com.mobileforming.te2.core.model.Barcode)
com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder:  com.mobileforming.android.te2.tracker.system.network.NetworkDetails$Builder  setNetworkStatus(com.mobileforming.te2.core.model.NetworkStatus)	com.mobileforming.android.te2.tracker.system.network.NetworkStateReceiver:  void  onNetworkAvailabilityUpdated(android.content.Context,boolean,boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showWalkingDirectionsPopupWindow(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  access$900(com.mobileforming.android.te2.maps.MapsModuleFragment,com.mobileforming.te2.core.model.Poi)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$1)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueGeofence  build()
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1300(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.te2.core.auth.AuthManager$4$1:  void  <init>(com.mobileforming.te2.core.auth.AuthManager$4,java.lang.String)	com.mobileforming.te2.core.auth.AuthManager$4:  void  onData(java.lang.String)
com.mobileforming.android.te2.maps.MapsModuleRepository$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleRepository)	com.mobileforming.android.te2.maps.MapsModuleRepository:  com.google.android.gms.tasks.Task  getCategoriesTask()
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  sendLocationUpdate(com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder)
com.mobileforming.android.te2.grupo.NavigationActivity$15:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showVenueSwitcher()
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  java.lang.String  getAppState()	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2$3:  void  <init>(com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$2:  void  run()
com.mobileforming.android.te2.grupo.NavigationActivity:  android.content.Intent  startProductIntent(android.content.Context,java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  requestHandleMessageAction(com.mobileforming.te2.core.model.MessageTriggeredAction,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  rx.Observable  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager$7:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay)	com.mobileforming.android.te2.maps.sdk.RxDelayUtil$AbsRetryWithDelay:  rx.Observable  call(rx.Observable)
com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  updateHeaderIndicesSet()	com.mobileforming.android.te2.events.adapter.EventsStickyHeadersListAdapter:  void  <init>(android.content.Context,java.util.List,com.mobileforming.android.te2.events.filters.EventFilterConfiguration,android.support.v4.app.Fragment,com.mobileforming.android.te2.events.fragment.EventsListFragment$EventsListFragmentListener)
com.mobileforming.android.te2.venue.VenueDataManager:  int  access$208(com.mobileforming.android.te2.venue.VenueDataManager)	com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5,java.util.List)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  onData(java.util.List)
com.mobileforming.te2.core.model.ModifierSelection:  java.lang.String  getLineItemId()	com.mobileforming.te2.core.model.ModifierSelection:  boolean  equals(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager$16:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Void  doInBackground(java.lang.String[])	com.mobileforming.android.te2.tracker.logger.venuemonitor.VenueMonitorRepository$3:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$27:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,android.location.Location)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  onLocationUpdate(android.location.Location,java.lang.String)
com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl$4:  void  <init>(com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.LoggerLocationPermissionsDAO_Impl:  android.arch.lifecycle.LiveData  getLastPermissionRecorded()
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  void  onItemClick(android.view.View,int)	com.mobileforming.android.te2.infos.adapter.LoggerListAdapter$2:  void  onClick(android.view.View)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$7:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackLocationUpdate(com.mobileforming.te2.core.model.RegionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.android.te2.grupo.defaults.RegistrationJobService:  void  access$000(android.content.Context)	com.mobileforming.android.te2.grupo.defaults.RegistrationJobService$2:  void  onFailure(java.lang.Exception)
com.mobileforming.android.te2.maps.view.MapView:  void  setOnMapMovedListener(com.mobileforming.android.te2.maps.view.MapView$OnMapMovedListener)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleConfig:  java.lang.String  getAppBuildNumber()	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  com.mobileforming.te2.core.model.InfoDetailItem  getAboutTheAppDetailItem()
com.mobileforming.android.te2.maps.view.MapView:  void  showPois(java.util.List)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  updatePoi(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$6$1:  void  run()
com.mobileforming.te2.core.db.AppDatabase:  void  destroyInstance()	com.mobileforming.android.te2.grupo.RefApplication:  void  onActivityDestroyed(android.app.Activity)
com.mobileforming.android.te2.maps.view.CategoryTabView:  void  init(android.graphics.drawable.Drawable)	com.mobileforming.android.te2.maps.view.CategoryTabView:  void  <init>(android.content.Context,android.graphics.drawable.Drawable)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  fetchPoiStatus(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData:  void  refreshWaitTimes()
com.mobileforming.te2.core.model.NetworkAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.te2.core.model.NetworkAccessEvent$NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackNetworkAccessChanged(com.mobileforming.te2.core.model.NetworkStatus,java.lang.String,java.lang.String,boolean,boolean)
com.mobileforming.android.te2.grupo.DiningFragment$2:  void  <init>(com.mobileforming.android.te2.grupo.DiningFragment,com.mobileforming.te2.core.model.Category)	com.mobileforming.android.te2.grupo.DiningFragment:  void  setupTablayout(com.mobileforming.te2.core.model.Category)
com.mobileforming.te2.core.view.MenuTileView:  int  getMenuTileItemLayoutId(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)	com.mobileforming.te2.core.view.MenuTileView:  android.view.View  inflateAndBindMenuItemView(com.mobileforming.te2.core.view.MenuTileView$MenuTileItem)
com.mobileforming.te2.core.fragment.WebViewFragment:  android.content.Intent  buildCallIntent(java.lang.String)	com.mobileforming.te2.core.fragment.WebViewFragment:  boolean  launchNativeApp(java.lang.String)
com.mobileforming.android.te2.tracker.location.LocationRepository:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.location.LocationRepository:  com.mobileforming.android.te2.tracker.location.LocationRepository  getInstance(android.content.Context)
com.mobileforming.android.te2.messages.MessagesListFragment$1$1:  void  <init>(com.mobileforming.android.te2.messages.MessagesListFragment$1,java.util.List)	com.mobileforming.android.te2.messages.MessagesListFragment$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder  type(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.android.te2.grupo.RefApplication:  void  setSurveyDisplayed(boolean)	com.mobileforming.android.te2.grupo.NavigationActivity$1$1$1:  void  showDialog()
com.mobileforming.android.te2.tracker.location.OrientationLiveData$1:  void  <init>(com.mobileforming.android.te2.tracker.location.OrientationLiveData)	com.mobileforming.android.te2.tracker.location.OrientationLiveData:  void  <init>(android.content.Context)
com.mobileforming.android.te2.tracker.TrackerModule:  void  logRequestPermissionsData()	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onRequestPermissionsResult(int,java.lang.String[],int[])
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setBaseUrl(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.List,java.util.Date)	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  findNextHours(java.util.List,java.util.Date)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$4:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate,okhttp3.Interceptor,okhttp3.Authenticator)	com.mobileforming.android.te2.messages.MessagesModule:  void  <init>(android.app.Application,com.mobileforming.android.te2.messages.MessagesModuleConfig,com.mobileforming.android.te2.messages.MessagesModuleDelegate)
com.mobileforming.android.te2.messages.MessagesModule:  boolean  isMessageExpired(com.mobileforming.te2.core.model.Message)	com.mobileforming.android.te2.messages.MessagesModule:  void  requestMessages()
com.mobileforming.android.te2.messages.OffersListFragment:  void  access$200(com.mobileforming.android.te2.messages.OffersListFragment)	com.mobileforming.android.te2.messages.OffersListFragment$2:  void  onError(java.lang.Throwable)
com.mobileforming.te2.core.model.EventCategory$1:  com.mobileforming.te2.core.model.EventCategory  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.EventCategory$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  onResponseParseSuccess(java.lang.String,okhttp3.Response,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseSuccess(java.lang.String,okhttp3.Response)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  setupRecyclerView()	com.mobileforming.android.te2.messages.offers.OfferListView:  void  <init>(android.view.View,com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$6:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapManagerFactory)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  retrieveLocalMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  webRequestFailed(android.content.Context,java.lang.String)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository,android.content.Context,java.lang.String)
com.mobileforming.android.te2.events.fragment.EventsListFragment:  java.util.List  access$100(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.grupo.NavigationActivity$1$1:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity$1)	com.mobileforming.android.te2.grupo.NavigationActivity$1:  void  onData(java.lang.Void)
com.mobileforming.te2.core.api.messages.MessagesRetrofitService:  java.util.List  fetchAllUserMessages(java.util.Map)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  void  getAllUserMessages(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.messages.view.BarcodeView:  android.graphics.Bitmap  access$100(com.mobileforming.android.te2.messages.view.BarcodeView,java.lang.String,com.google.zxing.BarcodeFormat,int,int)	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])
com.mobileforming.te2.core.model.AppConfig:  com.mobileforming.te2.core.model.BeaconConfig  getBeacon()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.te2.core.model.EventActionType:  com.mobileforming.te2.core.model.EventActionType  valueOf(java.lang.String)	com.mobileforming.te2.core.model.EventActionType$1:  com.mobileforming.te2.core.model.EventActionType  createFromParcel(android.os.Parcel)
com.mobileforming.te2.core.model.Message$1:  com.mobileforming.te2.core.model.Message[]  newArray(int)	com.mobileforming.te2.core.model.Message$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.EventsActivity:  void  setEventFilterConfiguration(com.mobileforming.android.te2.events.filters.EventFilterConfiguration)	com.mobileforming.android.te2.events.EventsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  storeCategoriesInstance(java.lang.String,java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  access$200(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.lang.String,java.util.List)
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.android.te2.messages.dataprovider.MessagesModuleInteractor  getMessagesModuleInteractor()	com.mobileforming.android.te2.messages.MessagesDetailFragment$3:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$5:  com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo  call(com.mobileforming.android.te2.maps.sdk.model.DefaultMapInfo)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$5:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.model.Place:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.Place$1:  com.mobileforming.te2.core.model.Place  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getDefaultMapDataInfo(java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapInfoPayloadFor(com.mobileforming.android.te2.maps.sdk.MapIdentifier)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$6:  void  onData(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$6:  void  onData(java.lang.Object)
com.mobileforming.te2.core.network.$AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)	com.mobileforming.te2.core.network.AutoValue_RequestData:  void  <init>(java.lang.String,java.lang.String,java.util.Map)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  onLocationTurnedOff()	com.mobileforming.android.te2.grupo.RefApplication:  void  locationAccessChanged(boolean)
com.mobileforming.android.te2.maps.sdk.NetworkUtils:  boolean  isNetworkIOException(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  handleVenueError(java.lang.Throwable)
com.mobileforming.android.te2.tracker.TrackerConfig:  void  setAppId(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  void  setupTracker(java.lang.String)
com.mobileforming.te2.core.auth.Te2Authenticator$1:  void  onData(java.lang.String)	com.mobileforming.te2.core.auth.Te2Authenticator$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  com.mobileforming.android.te2.maps.sdk.MapSession  getMapSession(java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$17:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingPath(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$300(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  setPresenter(com.mobileforming.android.te2.messages.offers.OffersContract$Presenter)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  setPresenter(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager$15:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapObservableCopy(java.lang.String,android.content.Context)
com.mobileforming.te2.core.model.Menu$1:  com.mobileforming.te2.core.model.Menu[]  newArray(int)	com.mobileforming.te2.core.model.Menu$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.events.fragment.EventsListFragment$5:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment,ca.barrenechea.widget.recyclerview.decoration.StickyHeaderAdapter,java.util.TimeZone)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  void  setupListView()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1$3:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$1:  void  onFailure(java.lang.Throwable)
com.mobileforming.android.te2.grupo.NavigationActivity$14:  void  onChanged(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.grupo.NavigationActivity$14:  void  onChanged(java.lang.Object)
com.mobileforming.te2.core.util.DateStringUtil:  boolean  isTomorrow(java.util.Calendar,java.util.Date)	com.mobileforming.te2.core.util.DateStringUtil:  java.lang.String  getStringForDate(android.content.Context,java.util.Calendar,java.util.Date,com.mobileforming.te2.core.util.DateStringUtil$Mode)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  onCompassBearingChanged(float)	com.mobileforming.android.te2.grupo.RefApplication:  void  onCompassBearingChanged(float)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$12:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  getMapData(com.mobileforming.android.te2.maps.sdk.MapDecision,com.mobileforming.te2.core.DataCallback,com.mobileforming.te2.core.DataCallback,java.lang.String)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  showLogger()	com.mobileforming.android.te2.infos.fragment.InfoHiddenFragment:  void  onItemClick(android.view.View,int)
com.mobileforming.te2.core.auth.AuthManager:  void  access$400(com.mobileforming.te2.core.auth.AuthManager,com.mobileforming.te2.core.DataCallback)	com.mobileforming.te2.core.auth.AuthManager$1:  void  run()
com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  onResponseParseSuccess(java.lang.String,okhttp3.Response,java.lang.Object)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  com.mobileforming.android.te2.maps.sdk.DataItem  handleResponseSuccess(java.lang.String,okhttp3.Response)
com.mobileforming.te2.core.entity.BeaconsEntity:  void  setUid(long)	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  com.mobileforming.te2.core.entity.BeaconsEntity  compute()
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$2:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoDetailFragment,android.view.View)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  setupScrollingBehavior(android.view.View)
com.mobileforming.te2.core.model.ModifierSelection:  java.util.List  getModifierSelections()	com.mobileforming.te2.core.model.ModifierSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)
com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2$1:  void  <init>(com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2,java.lang.String,java.lang.String[])	com.mobileforming.te2.core.logger.dao.BeaconsDAO_Impl$2:  com.mobileforming.te2.core.entity.BeaconsEntity  compute()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$4:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$4:  void  onData(java.lang.Object)
com.mobileforming.te2.core.auth.AuthManager:  boolean  access$000(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.auth.AuthManager$1:  void  run()
com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  com.mobileforming.android.te2.maps.sdk.MapSessionImpl  apply(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapDataManager$2:  java.lang.Object  apply(java.lang.Object)
com.mobileforming.android.te2.infos.logger.LoggerViewModel:  void  clearLogEvents()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  boolean  onOptionsItemSelected(android.view.MenuItem)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder:  com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder  venueId(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Void  doInBackground(com.mobileforming.te2.core.entity.LocationPermissionsEntity[])	com.mobileforming.android.te2.tracker.logger.locationpermission.PermissionStaticsLiveDataRepository$1:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.te2.core.util.ImageUtils$1:  boolean  onResourceReady(android.graphics.drawable.Drawable,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)	com.mobileforming.te2.core.util.ImageUtils$1:  boolean  onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean)
com.mobileforming.android.te2.infos.dataprovider.InfoModuleCache:  java.util.List  getCachedModules(java.lang.String)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.entity.VenueMonitorEntity:  java.util.Date  getDateOfLog()	com.mobileforming.te2.core.logger.dao.VenueMonitorDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.VenueMonitorEntity)
com.mobileforming.te2.core.model.PathData:  void  setDeviceLatitude(float)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  void  trackWalkingPath(com.mobileforming.te2.core.model.Position,boolean)
com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Void)	com.mobileforming.android.te2.tracker.location.GeofenceTracker$3:  void  onSuccess(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager$22:  com.mobileforming.android.te2.maps.sdk.model.MapData  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapDataManager$22:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule,com.mobileforming.android.te2.tracker.TrackerConfig)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity$7:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupInfoModule()
com.mobileforming.te2.core.model.Time$1:  com.mobileforming.te2.core.model.Time[]  newArray(int)	com.mobileforming.te2.core.model.Time$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  okHttpClientBuilder(okhttp3.OkHttpClient$Builder)	com.mobileforming.te2.core.network.RetrofitApiBuilder:  com.mobileforming.te2.core.network.RetrofitApiBuilder  timeout(int,java.util.concurrent.TimeUnit)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventSchedule(java.util.List)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$100(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.util.List)
com.mobileforming.te2.core.view.CustomEditText:  void  init(android.content.Context)	com.mobileforming.te2.core.view.CustomEditText:  void  <init>(android.content.Context)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List)
com.mobileforming.te2.core.model.HoursLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.HoursLink$1:  com.mobileforming.te2.core.model.HoursLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig:  com.mobileforming.android.te2.events.dataprovider.EventsModuleInteractor  getEventsModuleInteractor()	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsModuleConfig)
com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  onChanged(java.util.List)	com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$902(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setAppUserId(java.lang.String)
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asDrawable()	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asDrawable()
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  registerHeadingListener(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerHeadingListener(com.mobileforming.android.te2.maps.sdk.model.HeadingListener)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5$2:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  onError(java.lang.Throwable)
com.mobileforming.te2.core.view.CustomCheckBox:  java.lang.String  access$200(com.mobileforming.te2.core.view.CustomCheckBox)	com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.android.te2.grupo.NavigationActivity:  void  selectMenuItem(android.os.Bundle)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  boolean  access$200(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.te2.core.model.BluetoothAccessEvent:  void  <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackBluetoothAccessChanged(boolean,boolean)
com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  android.arch.lifecycle.LiveData  initLocationLiveData(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.tracker.logger.locationpermission.LocationPermissionsRepository:  void  <init>(android.content.Context,com.mobileforming.te2.core.db.AppDatabase)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  parseCategories(java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$200(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,java.util.List,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.sdk.RxDelayUtil$ExponentialRetryWithDelay:  void  <init>(int,long)	com.mobileforming.android.te2.maps.sdk.RxUtil:  rx.functions.Func1  exponentialBackoff(int,long)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  registerTestDevice(com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1:  boolean  onTouch(android.view.View,android.view.MotionEvent)
com.mobileforming.te2.core.util.GlideRequests:  com.mobileforming.te2.core.util.GlideRequest  asFile()	com.mobileforming.te2.core.util.GlideRequests:  com.bumptech.glide.RequestBuilder  asFile()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  setMultipleTimesText(android.widget.TextView)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$5:  void  onClick(android.view.View)
com.mobileforming.android.te2.events.eventslist.EventsRepository$1:  void  <init>(com.mobileforming.android.te2.events.eventslist.EventsRepository)	com.mobileforming.android.te2.events.eventslist.EventsRepository:  android.arch.lifecycle.LiveData  getEventList(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10$1:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$10:  void  onData(com.mobileforming.android.te2.maps.sdk.MapDecision)
com.mobileforming.te2.core.view.CustomButton:  java.lang.String  access$100(com.mobileforming.te2.core.view.CustomButton)	com.mobileforming.te2.core.view.CustomButton$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.grupo.NavigationActivity$11:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupDining()
com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  stopMonitoringAllRegions()	com.mobileforming.android.te2.tracker.location.BeaconTracker:  void  stop()
com.mobileforming.te2.core.view.CustomCheckBox:  java.lang.Object  access$600(com.mobileforming.te2.core.view.CustomCheckBox)	com.mobileforming.te2.core.view.CustomCheckBox$1:  void  onCheckedChanged(android.widget.CompoundButton,boolean)
com.mobileforming.android.te2.grupo.UserFragment:  void  displaySurveyDescription()	com.mobileforming.android.te2.grupo.UserFragment:  void  access$800(com.mobileforming.android.te2.grupo.UserFragment)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  access$100(com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData,java.lang.Object)	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData$1:  void  run()
com.mobileforming.te2.core.entity.GeofenceEntity:  long  getEventId()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$1:  void  bind(android.arch.persistence.db.SupportSQLiteStatement,com.mobileforming.te2.core.entity.GeofenceEntity)
com.mobileforming.android.te2.maps.view.MapView:  void  setImage(java.lang.String)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  setMapImage(java.lang.String,java.lang.String)
com.mobileforming.android.te2.grupo.UserFragment$1:  void  <init>(com.mobileforming.android.te2.grupo.UserFragment)	com.mobileforming.android.te2.grupo.UserFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder:  com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder  id(java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationUtils:  com.mobileforming.android.te2.maps.sdk.model.VenueData  createVenue(com.mobileforming.android.te2.maps.sdk.model.VenuePayload)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider$7:  void  <init>(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchEventsExcludeShows(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.view.CustomCheckBox$1:  void  <init>(com.mobileforming.te2.core.view.CustomCheckBox)	com.mobileforming.te2.core.view.CustomCheckBox:  void  initAnalytics(android.content.Context,android.util.AttributeSet)
com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  int  compare(com.mobileforming.android.te2.maps.sdk.model.MapGrid,com.mobileforming.android.te2.maps.sdk.model.MapGrid)	com.mobileforming.android.te2.maps.sdk.PathFinderAStar$OpenSet$1:  int  compare(java.lang.Object,java.lang.Object)
com.mobileforming.te2.core.model.TestDevice:  java.util.ArrayList  getLibraryVersions()	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$1$1:  void  onData(com.mobileforming.te2.core.model.TestDevice)
com.mobileforming.te2.core.api.device.DeviceInformation:  java.lang.String  getAppId()	com.mobileforming.android.te2.grupo.RefApplication:  void  setDeviceInfo(com.mobileforming.te2.core.api.device.DeviceInformation)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  android.support.v7.widget.RecyclerView$ViewHolder  onCreateViewHolder(android.view.ViewGroup,int)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo,long)	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  com.google.android.gms.location.Geofence  createGeofence(com.mobileforming.te2.core.model.GeofenceInfo)
com.mobileforming.android.te2.maps.sdk.MapManagerFactory$1:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapManagerFactory$1:  void  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  java.lang.String  getMapDataUrl(java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getMapDataPayloadItem(java.lang.String,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.CacheStrategy)
com.mobileforming.android.te2.events.EventsActivity:  void  setEventsDataProvider(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider)	com.mobileforming.android.te2.events.EventsModule:  void  onActivityCreated(android.app.Activity,android.os.Bundle)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$10:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  long  access$100(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  setWaitTimeData(java.util.List)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  java.util.List  access$600(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,java.util.List)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$4:  void  onMapReady()	com.mobileforming.android.te2.maps.view.MapView:  void  onReady()
com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1$1:  void  onData(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider$1$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  deliverHeading(android.hardware.Sensor,int,float)	com.mobileforming.android.te2.maps.sdk.HeadingProcessor:  void  onSensorChanged(android.hardware.SensorEvent)
com.mobileforming.android.te2.maps.MapsModuleViewModel$2:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleViewModel)	com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  fetchCategoriesLiveData()
com.mobileforming.android.te2.maps.sdk.HeadingControllerImpl:  void  unregisterHeadingListener()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  unregisterHeadingListener()
com.mobileforming.android.te2.tracker.TrackerModule$2:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.TrackerModule$2:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  com.mobileforming.android.te2.maps.sdk.model.MapDataPayload  call(com.mobileforming.android.te2.maps.sdk.DataItem)	com.mobileforming.android.te2.maps.sdk.MapDataManager$3:  java.lang.Object  call(java.lang.Object)
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService$11:  void  <init>(com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  trackMessageAction(com.mobileforming.te2.core.model.MessageActionEvent,com.mobileforming.te2.core.api.tracker.DataCallback)
com.mobileforming.te2.core.model.Payment$Builder$1:  com.mobileforming.te2.core.model.Payment$Builder  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Payment$Builder$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.db.AppDatabase  getAppDB()	com.mobileforming.android.te2.grupo.defaults.LoggerInteractorImpl:  com.mobileforming.te2.core.db.AppDatabase  getAppDb()
com.mobileforming.android.te2.maps.sdk.MapManagerFactory:  rx.Observable  getLocalMapManager(com.mobileforming.android.te2.maps.sdk.MapIdentifier)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapPosition(com.mobileforming.android.te2.maps.sdk.MapDecision,double,double,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.lang.String  getPublishTimestamp()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$2:  void  call(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$2:  void  call(java.lang.Object)
com.mobileforming.android.te2.tracker.TrackerConfig:  java.lang.String  access$1102(com.mobileforming.android.te2.tracker.TrackerConfig,java.lang.String)	com.mobileforming.android.te2.tracker.TrackerConfig$Builder:  com.mobileforming.android.te2.tracker.TrackerConfig$Builder  setVenueId(java.lang.String)
com.mobileforming.android.te2.maps.view.MapView$1:  void  <init>(com.mobileforming.android.te2.maps.view.MapView)	com.mobileforming.android.te2.maps.view.MapView:  void  <init>(android.content.Context,android.util.AttributeSet)
com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  void  <init>(com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl,android.arch.persistence.room.RoomSQLiteQuery)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl:  android.arch.lifecycle.LiveData  getDetail(long)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$000(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,com.mobileforming.android.te2.maps.sdk.LocationConfig)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$1:  void  call(com.mobileforming.android.te2.maps.sdk.LocationConfig)
com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  showHiddenInfo()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.te2.core.db.AppDatabase_Impl:  android.arch.persistence.db.SupportSQLiteDatabase  access$302(com.mobileforming.te2.core.db.AppDatabase_Impl,android.arch.persistence.db.SupportSQLiteDatabase)	com.mobileforming.te2.core.db.AppDatabase_Impl$1:  void  onOpen(android.arch.persistence.db.SupportSQLiteDatabase)
com.mobileforming.android.te2.grupo.RefApplication$1:  void  onChanged(com.mobileforming.android.te2.tracker.multivenue.VenueBoundaryTransition)	com.mobileforming.android.te2.grupo.RefApplication$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.messages.view.BarcodeView:  com.google.zxing.BarcodeFormat  access$000(com.mobileforming.android.te2.messages.view.BarcodeView,com.mobileforming.te2.core.model.Barcode$Type)	com.mobileforming.android.te2.messages.view.BarcodeView$AsyncBarCodeTask:  android.graphics.Bitmap  doInBackground(com.mobileforming.te2.core.model.Barcode[])
com.mobileforming.android.te2.tracker.location.LocationTracker:  void  setHasBluetoothPermission(boolean)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.te2.core.model.Event$1:  com.mobileforming.te2.core.model.Event[]  newArray(int)	com.mobileforming.te2.core.model.Event$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  isHomeFragment()	com.mobileforming.android.te2.grupo.NavigationActivity:  boolean  access$200(com.mobileforming.android.te2.grupo.NavigationActivity)
com.mobileforming.android.te2.grupo.DiningFragment:  void  messageFromPoiChildToParent()	com.mobileforming.android.te2.maps.fragment.PoiListFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.MapsModuleFragment$3$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$3)	com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.model.MapInfo$Version:  java.lang.String  getPublished()	com.mobileforming.android.te2.maps.sdk.MapDataUtils:  com.mobileforming.android.te2.maps.sdk.model.MapData  buildMapData(com.mobileforming.android.te2.maps.sdk.model.MapInfo,com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)
com.mobileforming.android.te2.maps.sdk.LocationEventLoggerDelegate:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  logPlayServicesGeofenceEvent(com.mobileforming.android.te2.maps.sdk.model.Fence,android.location.Location,java.lang.String)
com.mobileforming.te2.core.model.LineItem$1:  com.mobileforming.te2.core.model.LineItem  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.LineItem$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  stopTimer()	com.mobileforming.android.te2.maps.poi.RefreshTimeLiveData:  void  onInactive()
com.mobileforming.te2.core.api.tracker.TrackerRetrofitWebService:  void  fetchConfig(java.lang.String,com.mobileforming.te2.core.api.tracker.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchAppConfig(com.mobileforming.te2.core.DataCallback)
com.mobileforming.te2.core.model.PurchaseDetailLink:  void  <init>(android.os.Parcel)	com.mobileforming.te2.core.model.PurchaseDetailLink$1:  com.mobileforming.te2.core.model.PurchaseDetailLink  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.view.MapView:  android.graphics.Bitmap  getBitmap(int)	com.mobileforming.android.te2.maps.view.MapView:  void  initialize()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$3:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$3:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.android.te2.tracker.system.SystemTracker,com.mobileforming.android.te2.tracker.location.PositionTracker,boolean)
com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  com.mobileforming.te2.core.entity.GeofenceEntity  compute()	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  java.lang.Object  compute()
com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository:  void  access$000(com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueDataRepository$1:  void  onResponse(retrofit2.Call,retrofit2.Response)
com.mobileforming.android.te2.maps.sdk.ServerConfig:  java.lang.String  getPassword()	com.mobileforming.android.te2.maps.sdk.RequestInterceptor:  void  <init>(com.mobileforming.android.te2.maps.sdk.ServerConfig,com.mobileforming.android.te2.maps.sdk.AppConfig)
com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  access$400(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  call(com.mobileforming.android.te2.maps.sdk.model.MapInfo)
com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.lang.String  getExpireTimestamp()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.te2.core.api.app.AppRetrofitWebService$2:  void  <init>(com.mobileforming.te2.core.api.app.AppRetrofitWebService,com.mobileforming.te2.core.RequestDataCallback)	com.mobileforming.te2.core.api.app.AppRetrofitWebService:  void  getDefaultVenueModules(java.lang.String,com.mobileforming.te2.core.RequestDataCallback)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  rememberLastLocation(java.util.Map,java.util.Map)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$2:  void  onMapMoved(boolean,float,android.graphics.PointF)
com.mobileforming.android.te2.events.fragment.EventsListFragment$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsListFragment)	com.mobileforming.android.te2.events.fragment.EventsListFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.venue.VenueDataManager:  int  access$200(com.mobileforming.android.te2.venue.VenueDataManager)	com.mobileforming.android.te2.venue.VenueDataManager$2:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.model.EventAction:  java.lang.String  getKey()	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$4:  void  onClick(android.view.View)
com.mobileforming.te2.core.network.BaseModuleConfig:  void  setUsername(java.lang.String)	com.mobileforming.android.te2.grupo.RefApplication:  com.mobileforming.te2.core.network.BaseModuleConfig  getBaseModuleConfig()
com.mobileforming.te2.core.model.HoursLink$1:  com.mobileforming.te2.core.model.HoursLink[]  newArray(int)	com.mobileforming.te2.core.model.HoursLink$1:  java.lang.Object[]  newArray(int)
com.mobileforming.te2.core.model.openinghours.Override:  com.mobileforming.te2.core.model.openinghours.Day  getDay()	com.mobileforming.android.te2.grupo.util.OpeningHoursUtil:  com.mobileforming.te2.core.model.openinghours.Day  getDay(java.util.List,java.util.Date)
com.mobileforming.te2.core.model.Message:  void  setMessageId(java.lang.String)	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.sdk.RequestExecutor$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.RequestExecutor,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  rx.Observable  execute(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.messages.MessagesDetailFragment$3$1:  void  onData(com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.messages.MessagesDetailFragment$3$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  onData(java.util.List)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6:  void  onData(java.lang.Object)
com.mobileforming.android.te2.venue.VenueWebService:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)	com.mobileforming.android.te2.venue.VenueDataManager:  void  <init>(android.content.Context,com.mobileforming.android.te2.venue.VenueModuleConfig,com.mobileforming.android.te2.venue.VenueCache)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  com.mobileforming.android.te2.maps.sdk.RequestExecutor  getPayloadExecutor()	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executePayloadRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder:  com.mobileforming.android.te2.maps.sdk.model.LocationWrapper$Builder  location(android.location.Location)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.maps.sdk.MapDataManager$8:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,java.lang.String,android.content.Context)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  rx.Observable  getLocalDefaultMapDataPayload(java.lang.String,java.lang.String,android.content.Context)
com.mobileforming.te2.core.model.PathData:  float  getDeviceY()	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackGetWalkingPath(com.mobileforming.te2.core.model.PathData)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  getEventsFromApiAfterStartDate(java.util.Date)	com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  java.util.List  access$200(com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,java.util.Date)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  onConfigDownloadError(java.lang.Throwable)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$100(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl,java.lang.Throwable)
com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  onChanged(java.lang.Boolean)	com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  onChanged(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  com.mobileforming.android.te2.maps.sdk.model.MapData  call(com.mobileforming.android.te2.maps.sdk.model.MapDataPayload)	com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  checkVenuesEnteredFromGeofence(java.util.List,java.util.List)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  void  access$900(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.List,java.util.List)
com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder:  java.lang.String  access$000(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueGeofence:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueGeofence$Builder)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  onLocationTurnedOn()	com.mobileforming.android.te2.grupo.RefApplication:  void  locationAccessChanged(boolean)
com.mobileforming.android.te2.maps.MapsModuleViewModel$3:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.maps.MapsModuleViewModel$3:  void  onData(java.lang.Object)
com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(com.mobileforming.te2.core.model.Link)	com.mobileforming.android.te2.infos.InfoModuleFragment$2:  void  onData(java.lang.Object)
com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$6:  void  <init>(com.mobileforming.android.te2.tracker.SingleVenueTrackerModule)	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  void  init()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$600(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$25:  void  call(com.mobileforming.te2.core.model.Position)
com.mobileforming.te2.core.util.RoundedCornersTransformation:  void  drawRoundRect(android.graphics.Canvas,android.graphics.Paint,float,float)	com.mobileforming.te2.core.util.RoundedCornersTransformation:  android.graphics.Bitmap  transform(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
com.mobileforming.te2.core.view.MenuTileView:  android.widget.PopupWindow  access$200(com.mobileforming.te2.core.view.MenuTileView)	com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.fragment.DiningFragment$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.DiningFragment)	com.mobileforming.android.te2.maps.fragment.DiningFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  void  <init>(android.content.Context)	com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData:  com.mobileforming.android.te2.tracker.system.location.LocationStateLiveData  getInstance(android.content.Context)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.model.Position,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.MapsModuleFragment$7:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  com.mobileforming.android.te2.events.filters.EventFilterConfiguration[]  newArray(int)	com.mobileforming.android.te2.events.filters.EventFilterConfiguration$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.messages.offers.OfferListView:  void  removeOffers()	com.mobileforming.android.te2.messages.OffersListFragment:  void  refreshData()
com.mobileforming.android.te2.maps.sdk.LocationConfig:  com.mobileforming.android.te2.maps.sdk.LocationUpdatesConfig  getDefaultMapModeConfig()	com.mobileforming.android.te2.maps.sdk.LocationConfig:  void  <init>()
com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  onData(java.util.List)	com.mobileforming.android.te2.maps.poi.PoiStatusLiveData$1:  void  onData(java.lang.Object)
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9,java.lang.StringBuilder)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$9:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.android.te2.infos.fragment.InfoListFragment:  com.mobileforming.android.te2.infos.fragment.InfoListFragment  newInstance(java.util.List,com.mobileforming.android.te2.infos.fragment.InfoListFragment$InfoListFragmentListener,com.mobileforming.android.te2.infos.InfoModuleListener,com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider)	com.mobileforming.android.te2.infos.InfoModuleFragment$1:  void  onData(java.util.List)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  deleteVenueData()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  saveVenueInfo(java.util.List)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  java.util.ArrayList  access$302(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,java.util.ArrayList)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.tracker.system.SystemTracker:  boolean  isStarted()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule:  boolean  isStarted()
com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  java.util.List  createWrapperList(java.util.List)	com.mobileforming.android.te2.infos.adapter.HiddenListAdapter:  void  <init>(java.util.List,com.mobileforming.android.te2.infos.adapter.HiddenListAdapter$HiddenListListener)
com.mobileforming.android.te2.tracker.location.PositionTracker:  void  setPositionEventListener(com.mobileforming.android.te2.tracker.location.PositionEventListener)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.events.EventsModuleFragment:  void  setupToolbar()	com.mobileforming.android.te2.events.EventsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Void  doInBackground(java.lang.Void[])	com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.te2.core.view.MenuTileView:  int  access$002(com.mobileforming.te2.core.view.MenuTileView,int)	com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.fragment.PoiListFragment$2$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiListFragment$2)	com.mobileforming.android.te2.maps.fragment.PoiListFragment$2:  void  onChanged(java.util.List)
com.mobileforming.android.te2.messages.MessagesDetailActivity$2:  void  <init>(com.mobileforming.android.te2.messages.MessagesDetailActivity)	com.mobileforming.android.te2.messages.MessagesDetailActivity:  void  onRedeemOptionSelected(int)
com.mobileforming.te2.core.entity.GeofenceEntity:  void  setUid(long)	com.mobileforming.te2.core.logger.dao.GeofenceDAO_Impl$2:  com.mobileforming.te2.core.entity.GeofenceEntity  compute()
com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(com.mobileforming.te2.core.model.Venue,java.util.Map)	com.mobileforming.android.te2.venue.VenueDataManager$1:  void  onSuccess(java.lang.Object,java.util.Map)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  processOnVenueDataReady()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  access$800(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)
com.mobileforming.android.te2.grupo.NavigationActivity$2:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity,java.lang.String)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  showProductView(java.lang.String)
com.mobileforming.te2.core.model.ProductSelection:  boolean  equalsIgnoreLineItemId(java.lang.Object)	com.mobileforming.te2.core.model.ProductSelection:  boolean  equals(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupPoiPeek(android.view.View)	com.mobileforming.android.te2.maps.MapsModuleFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.GraphicalMap:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)	com.mobileforming.android.te2.maps.sdk.MapManager:  com.mobileforming.te2.core.model.Position  getMapPosition(double,double)
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  com.mobileforming.android.te2.maps.sdk.LocationEventManager  access$1100(com.mobileforming.android.te2.maps.sdk.LocationManagerImpl)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl$13:  void  call(android.location.Location)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  java.lang.Long  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$21:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  postWalkingPathCallbackSuccess(com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  access$200(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback,java.util.List)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  com.mobileforming.android.te2.maps.fragment.Te2MapFragment  newInstance(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$Te2MapFragmentListener,java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider,com.mobileforming.android.te2.maps.MapsModuleListener,java.util.Map,java.util.Map,boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  onResume()
com.mobileforming.android.te2.grupo.NavigationActivity$10:  void  <init>(com.mobileforming.android.te2.grupo.NavigationActivity)	com.mobileforming.android.te2.grupo.NavigationActivity:  void  setupHome()
com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder)	com.mobileforming.android.te2.maps.sdk.model.VenueData:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.VenueData$Builder,com.mobileforming.android.te2.maps.sdk.model.VenueData$1)
com.mobileforming.android.te2.messages.offers.OfferListView$DividerDecoration:  void  <init>(com.mobileforming.android.te2.messages.offers.OfferListView,android.graphics.drawable.Drawable,int)	com.mobileforming.android.te2.messages.offers.OfferListView:  void  setupRecyclerView()
com.mobileforming.android.te2.maps.MapsModuleViewModel:  android.arch.lifecycle.LiveData  getVenueTimeZoneLiveData()	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  onActivityCreated(android.os.Bundle)
com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  executeGet()	com.mobileforming.android.te2.maps.sdk.Requests$ExecutorBuilder:  rx.Observable  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.maps.sdk.ResponseCacheImpl:  void  insert(java.lang.String,java.lang.Object,long)	com.mobileforming.android.te2.maps.sdk.CachedRequestExecutor:  void  insertInCache(java.lang.String,long)
com.mobileforming.android.te2.maps.sdk.AppConfig:  void  setPushToken(java.lang.String)	com.mobileforming.android.te2.maps.sdk.ConfigManagerImpl:  void  updatePushToken(java.lang.String)
com.mobileforming.te2.core.model.Info$1:  com.mobileforming.te2.core.model.Info  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Info$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.maps.sdk.model.Event$Builder:  java.lang.String  access$400(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)	com.mobileforming.android.te2.maps.sdk.model.Event:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.Event$Builder)
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  downloadDefaultCategories(com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$300(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$4:  void  onData(com.mobileforming.te2.core.model.Position)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager$4:  void  onData(java.lang.Object)
com.mobileforming.android.te2.infos.logger.LoggerViewModel$ClearLogEvents:  void  <init>(com.mobileforming.te2.core.db.AppDatabase)	com.mobileforming.android.te2.infos.logger.LoggerViewModel:  void  clearLogEvents()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.te2.core.model.EventVenue  access$402(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment,com.mobileforming.te2.core.model.EventVenue)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1:  void  run()
com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Void  doInBackground(com.mobileforming.te2.core.model.BeaconInfo[])	com.mobileforming.android.te2.tracker.logger.beacons.BeaconsRepository$2:  java.lang.Object  doInBackground(java.lang.Object[])
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1$1:  void  <init>(com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$6$1$1:  void  run()
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment$5:  void  run()
com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider:  void  access$400(com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider,com.mobileforming.te2.core.model.Venue,java.lang.String,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.infos.dataprovider.InfoDataProvider$1$1:  void  onData(com.mobileforming.te2.core.model.Venue)
com.mobileforming.te2.core.ModuleConfig$BaseBuilder:  long  access$402(com.mobileforming.te2.core.ModuleConfig$BaseBuilder,long)	com.mobileforming.te2.core.ModuleConfig:  void  copy(com.mobileforming.te2.core.ModuleConfig,com.mobileforming.te2.core.ModuleConfig$BaseBuilder)
com.mobileforming.android.te2.maps.MapsModuleFragment$10$1:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment$10,com.mobileforming.te2.core.model.Poi)	com.mobileforming.android.te2.maps.MapsModuleFragment$10:  void  onClick(android.view.View)
com.mobileforming.android.te2.messages.FeaturedMessageFragment$1:  void  <init>(com.mobileforming.android.te2.messages.FeaturedMessageFragment)	com.mobileforming.android.te2.messages.FeaturedMessageFragment:  void  onFeaturedMessageAvailable(com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider$3:  void  <init>(com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  fetchGeofenceInfo(com.mobileforming.te2.core.DataCallback)
com.mobileforming.android.te2.tracker.location.PositionTracker:  boolean  access$000(com.mobileforming.android.te2.tracker.location.PositionTracker)	com.mobileforming.android.te2.tracker.location.PositionTracker$1:  void  onChanged(java.lang.Boolean)
com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String)	com.mobileforming.te2.core.view.MenuTileView$MenuTileItem:  void  <init>(java.lang.String,com.mobileforming.te2.core.view.MenuTileView$1)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  com.mobileforming.te2.core.model.GeofenceInfo  getGeofenceInfo(com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService:  com.mobileforming.te2.core.model.GeofenceInfo  access$500(com.mobileforming.android.te2.tracker.multivenue.MultiVenueMonitoringJobService,com.mobileforming.android.te2.tracker.multivenue.MultiVenuePlace)
com.mobileforming.te2.core.model.FavoriteEvent:  void  <init>(com.mobileforming.te2.core.model.Event)	com.mobileforming.te2.core.model.EventTriggeredAction:  void  <init>(java.lang.String,java.lang.String,com.mobileforming.te2.core.model.Event)
com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  findPositionUsingMarkers(com.mobileforming.android.te2.maps.sdk.model.LatLon,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker,com.mobileforming.android.te2.maps.sdk.model.PositionMarker)	com.mobileforming.android.te2.maps.sdk.LocalLinearTransformPositionStrategy:  com.mobileforming.te2.core.model.Position  convertLatLonToPosition(com.mobileforming.android.te2.maps.sdk.model.LatLon)
com.mobileforming.android.te2.events.filters.FilterConfig$1:  com.mobileforming.android.te2.events.filters.FilterConfig[]  newArray(int)	com.mobileforming.android.te2.events.filters.FilterConfig$1:  java.lang.Object[]  newArray(int)
com.mobileforming.android.te2.tracker.dataprovider.DefaultTrackerDataProvider:  void  trackDeviceInformation(com.mobileforming.te2.core.model.DeviceInfo)	com.mobileforming.android.te2.tracker.system.SystemTracker:  void  trackSystemState()
com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.Map  extractHeader(okhttp3.Headers)	com.mobileforming.android.te2.maps.dataprovider.MapsDownloadManager:  java.util.List  downloadMenus(java.lang.String,java.lang.String)
com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  checkVenuesEnteredFromGeofence(java.util.List,java.util.List)	com.mobileforming.android.te2.tracker.multivenue.observers.GeofenceEventObserver:  void  onChanged(java.util.List)
com.mobileforming.android.te2.maps.sdk.NetworkRetryService:  void  cancel(android.content.Context,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  stop()
com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  com.mobileforming.android.te2.events.fragment.EventsDetailsFragment  newInstance(java.lang.String,com.mobileforming.android.te2.events.fragment.EventsDetailsFragment$OnFragmentInteractionListener,com.mobileforming.android.te2.events.dataprovider.EventsDataProvider,com.mobileforming.android.te2.events.EventsModuleFragment$EventsModuleListener)	com.mobileforming.android.te2.events.activity.EventsDetailActivity:  void  onCreate(android.os.Bundle)
com.mobileforming.android.te2.tracker.location.BeaconRepository$1:  void  <init>(com.mobileforming.android.te2.tracker.location.BeaconRepository,java.util.List)	com.mobileforming.android.te2.tracker.location.BeaconRepository:  android.arch.lifecycle.LiveData  createBeaconWatcherLiveData(java.util.List)
com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  getEventsByVenueIdAndDateStart(java.lang.String,java.lang.String)	com.mobileforming.te2.core.api.events.EventRetrofitWebService:  com.mobileforming.te2.core.util.WebArrayList  retrieveEventsAfterStartDate(java.lang.String,java.util.Date,boolean,boolean)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  setAppStateSubscription(android.app.Application)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  void  initializeSdk(android.app.Application)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment$3:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  onViewCreated(android.view.View,android.os.Bundle)
com.mobileforming.android.te2.maps.MapsModuleFragment:  boolean  access$100(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  mapIsReady(java.lang.String,java.lang.String)
com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String,okhttp3.Interceptor)	com.mobileforming.te2.core.auth.AuthManager:  void  <init>(android.content.Context,java.lang.String)
com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl)	com.mobileforming.android.te2.maps.sdk.NetworkStateNotifierImpl:  void  registerNetworkCallback()
com.mobileforming.te2.core.auth.AuthManager$4:  void  <init>(com.mobileforming.te2.core.auth.AuthManager)	com.mobileforming.te2.core.auth.AuthManager:  com.mobileforming.te2.core.DataCallback  createDataCallback()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$10:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  addViewBehaviors(android.view.View)
com.mobileforming.android.te2.maps.view.MapView:  void  setOnPoiSelectedListener(com.mobileforming.android.te2.maps.view.MapView$OnPoiSelectedListener)	com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$7:  void  run()
com.mobileforming.te2.core.form.FormEditText$1:  void  <init>(com.mobileforming.te2.core.form.FormEditText)	com.mobileforming.te2.core.form.FormEditText:  void  onAttachedToWindow()
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$12:  com.mobileforming.te2.core.model.Position  call(com.mobileforming.android.te2.maps.sdk.MapManager)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl$12:  java.lang.Object  call(java.lang.Object)
com.mobileforming.android.te2.maps.MapsModuleFragment$3:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment,java.lang.String)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  showTargetCategory(boolean,java.lang.String)
com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition)	com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition)
com.mobileforming.android.te2.maps.sdk.PayloadCachedRequestExecutor:  okhttp3.Request  buildRequest(com.mobileforming.android.te2.maps.sdk.DataRequest$Method)	com.mobileforming.android.te2.maps.sdk.RequestExecutor:  void  execute(rx.Subscriber,com.mobileforming.android.te2.maps.sdk.DataRequest$Method)
com.mobileforming.android.te2.tracker.util.TrackerUtil:  java.lang.String  fetchAppUserId(android.content.Context)	com.mobileforming.android.te2.tracker.lite.TrackerLite:  void  <init>(android.content.Context,com.mobileforming.te2.core.network.BaseModuleConfig)
com.mobileforming.android.te2.maps.sdk.MapDataManager$26:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,com.mobileforming.android.te2.maps.sdk.model.MapInfo)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  notifyLocalMapDataCallback(java.lang.String,java.lang.String,com.mobileforming.android.te2.maps.sdk.model.MapInfo,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.tracker.location.GeofenceTracker:  android.app.PendingIntent  createGeofencePendingIntent()	com.mobileforming.android.te2.tracker.location.GeofenceTracker:  void  <init>(android.content.Context)
com.mobileforming.android.te2.maps.view.CustomTagView:  void  setIcon(java.lang.String)	com.mobileforming.android.te2.maps.view.CustomTagView:  void  setTagContent(com.mobileforming.te2.core.model.Tag)
com.mobileforming.te2.core.entity.LocationHistoryEntity:  void  setUid(long)	com.mobileforming.te2.core.logger.dao.LocationHistoryDAO_Impl$2:  com.mobileforming.te2.core.entity.LocationHistoryEntity  compute()
com.mobileforming.te2.core.model.LocationUpdateConfig:  float  getDistanceFilter()	com.mobileforming.android.te2.tracker.SingleVenueTrackerModule$5:  void  onData(com.mobileforming.te2.core.model.AppConfig)
com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  complete(boolean)	com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService:  void  access$100(com.mobileforming.android.te2.tracker.multivenue.MultiVenueWebJobService,boolean)
com.mobileforming.te2.core.dialog.alert.AlertDialogFragmentViewModel:  void  <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)	com.mobileforming.te2.core.dialog.alert.AlertDialogFragment$Builder:  com.mobileforming.te2.core.dialog.alert.AlertDialogFragment  build()
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider:  int  access$900(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$6:  void  onError(java.lang.Throwable)
com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel$1:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel)	com.mobileforming.android.te2.maps.fragment.PoiDetailViewModel:  android.arch.lifecycle.LiveData  fetchShowsLiveData(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider)
com.mobileforming.android.te2.maps.sdk.MapSessionImpl$4:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapSessionImpl,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapSessionImpl:  void  getMapInfo(com.mobileforming.android.te2.maps.sdk.Callback,android.content.Context)
com.mobileforming.te2.core.view.MenuTileView:  java.util.List  access$400(com.mobileforming.te2.core.view.MenuTileView)	com.mobileforming.te2.core.view.MenuTileView$1:  void  onClick(android.view.View)
com.mobileforming.android.te2.maps.util.ImageUtils$4:  void  <init>(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,com.mobileforming.android.te2.maps.poi.MapPoiWrapper)	com.mobileforming.android.te2.maps.util.ImageUtils:  void  loadPoiImageBitmap(com.mobileforming.android.te2.maps.fragment.Te2MapFragment,com.mobileforming.android.te2.maps.poi.MapPoiWrapper)
com.mobileforming.te2.core.api.messages.model.MessageInfo:  java.lang.String  getSubject()	com.mobileforming.android.te2.messages.dataprovider.MessagesDataProvider:  com.mobileforming.te2.core.model.Message  translateMessage(com.mobileforming.te2.core.api.messages.model.MessageInfo)
com.mobileforming.android.te2.maps.fragment.Te2MapFragment:  void  manageLoader(boolean)	com.mobileforming.android.te2.maps.MapsModuleFragment$1:  void  manageLoader(boolean)
com.mobileforming.android.te2.maps.MapsModuleFragment$6:  void  <init>(com.mobileforming.android.te2.maps.MapsModuleFragment)	com.mobileforming.android.te2.maps.MapsModuleFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.venue.VenueModule$5:  void  onData(com.mobileforming.te2.core.model.Venue)	com.mobileforming.android.te2.venue.VenueModule$5:  void  onData(java.lang.Object)
com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl$1:  void  <init>(com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl,android.location.Location,java.lang.String)	com.mobileforming.android.te2.maps.sdk.LocationEventManagerImpl:  void  sendVenueEntry(android.location.Location,java.lang.String,java.lang.String)
com.mobileforming.android.te2.maps.sdk.MapDataManager$19:  void  <init>(com.mobileforming.android.te2.maps.sdk.MapDataManager,java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)	com.mobileforming.android.te2.maps.sdk.MapDataManager:  void  getLocalDefaultMapData(java.lang.String,android.content.Context,com.mobileforming.android.te2.maps.sdk.Callback)
com.mobileforming.android.te2.maps.sdk.TE2SDKInternal:  java.util.Set  access$000(com.mobileforming.android.te2.maps.sdk.TE2SDKInternal)	com.mobileforming.android.te2.maps.sdk.TE2SDKInternal$2:  void  run()
com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  java.util.List  createFences()	com.mobileforming.android.te2.maps.sdk.LocationManagerImpl:  void  registerGeofences()
com.mobileforming.android.te2.maps.fragment.PoiDetailFragment$5:  void  <init>(com.mobileforming.android.te2.maps.fragment.PoiDetailFragment)	com.mobileforming.android.te2.maps.fragment.PoiDetailFragment:  void  populateUI(android.view.LayoutInflater)
com.mobileforming.android.te2.tracker.location.LocationTracker:  boolean  hasVenueGeofence()	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  onLocationChanged(java.lang.String,double,double,float)
com.mobileforming.te2.core.model.Menu$1:  com.mobileforming.te2.core.model.Menu  createFromParcel(android.os.Parcel)	com.mobileforming.te2.core.model.Menu$1:  java.lang.Object  createFromParcel(android.os.Parcel)
com.mobileforming.android.te2.infos.fragment.InfoListFragment$1:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoListFragment)	com.mobileforming.android.te2.infos.fragment.InfoListFragment:  void  setupUI(android.view.View)
com.mobileforming.android.te2.infos.fragment.InfoDetailFragment$3:  void  <init>(com.mobileforming.android.te2.infos.fragment.InfoDetailFragment,java.lang.String)	com.mobileforming.android.te2.infos.fragment.InfoDetailFragment:  void  populateScrollView(android.view.ViewGroup)
com.mobileforming.android.te2.infos.fragment.LoggerFragment:  android.arch.lifecycle.LiveData  getmUnfilteredObservableEvents()	com.mobileforming.android.te2.infos.logger.LoggerActivity:  void  shareLoggerEvents(java.util.List)
com.mobileforming.android.te2.tracker.location.LocationTracker$3:  void  <init>(com.mobileforming.android.te2.tracker.location.LocationTracker)	com.mobileforming.android.te2.tracker.location.LocationTracker:  void  <init>(android.content.Context,com.mobileforming.android.te2.tracker.dataprovider.TrackerDataProvider,com.mobileforming.android.te2.tracker.TrackerConfig,com.mobileforming.android.te2.tracker.location.PositionTracker)
com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder:  java.lang.String  access$1600(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)	com.mobileforming.android.te2.maps.sdk.model.LogEntry:  void  <init>(com.mobileforming.android.te2.maps.sdk.model.LogEntry$Builder)
com.mobileforming.android.te2.events.dataprovider.EventsDataProvider:  void  fetchWalkingTime(com.mobileforming.te2.core.model.Position,com.mobileforming.te2.core.DataCallback)	com.mobileforming.android.te2.events.fragment.EventsDetailsFragment:  void  fetchWalkingTime(java.util.List)
com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$3:  void  <init>(com.mobileforming.android.te2.messages.adapter.MessagesListAdapter,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,int,android.content.Context)	com.mobileforming.android.te2.messages.adapter.MessagesListAdapter:  void  loadProductImage(android.content.Context,com.mobileforming.android.te2.messages.adapter.MessagesListAdapter$ViewHolder,com.mobileforming.te2.core.model.Message)
com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1$2:  void  <init>(com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1)	com.mobileforming.android.te2.maps.dataprovider.MapsDataProvider$7$1:  void  run()
