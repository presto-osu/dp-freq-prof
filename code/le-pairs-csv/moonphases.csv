com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  double  getIlluminatedFraction2()
com.sajmons.moonphases.core.TimeSpanFormat$1:  void  <clinit>()	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption:  com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption[]  values()
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setTitle(java.lang.String)
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)	com.sajmons.moonphases.ExposureCalc:  java.lang.String  calculateExposure(com.sajmons.moonphases.CameraSettings)
com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context,java.lang.String)	com.sajmons.moonphases.Settings$SingletonHelper:  com.sajmons.moonphases.Settings  access$000()
com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)	com.sajmons.moonphases.NotifText:  java.lang.String  getNotifText(android.content.Context,com.sajmons.moonphases.MoonPhasesMain)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  create(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  onResume()	com.sajmons.moonphases.activities.MainActivity:  void  processAppShortCuts()
com.sajmons.moonphases.PreferenceHelper$1:  void  <clinit>()	com.sajmons.moonphases.MarketType:  com.sajmons.moonphases.MarketType[]  values()
com.sajmons.moonphases.activities.MainActivity:  void  showNextFullMoon()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  create(android.content.Context)
com.sajmons.ads.Settings:  void  <init>()	com.sajmons.common.BaseSettings:  void  <init>()
com.sajmons.evaluator.Evaluator:  double  eval()	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.widgets.WidgetCurrentPhase:  void  onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])	com.sajmons.moonphases.widgets.WidgetCurrentPhaseUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MonthViewFragment:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  <init>(android.content.Context,int,java.util.Calendar)
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption:  void  <clinit>()	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption:  com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption[]  values()
com.sajmons.moonphases.activities.MainActivity:  void  access$500(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showNextNewMoon()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatIllumFract(android.content.Context,boolean)
com.sajmons.evaluator.Evaluator$Tree:  void  <init>(com.sajmons.evaluator.Evaluator)	com.sajmons.evaluator.Evaluator$TreeRec:  void  <init>(com.sajmons.evaluator.Evaluator)
com.sajmons.moonphases.activities.MainActivity:  void  access$400(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showNextFullMoon()
com.sajmons.moonphases.core.SunBase:  void  <init>(android.location.Location)	com.sajmons.moonphases.core.SunBase:  void  <init>(double,double)
com.sajmons.moonphases.activities.MainActivity:  void  gotoTodayNoAd()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.core.MoonPhasesBase:  java.lang.String  getSetTime()	com.sajmons.moonphases.core.RiseSetFormat:  java.lang.String  getUndefinedSetFormat()
com.sajmons.moonphases.activities.MainActivity:  void  refreshRiseSetIlum()	com.sajmons.moonphases.core.MoonPhasesBase:  java.lang.String  getRiseTime()
com.sajmons.moonphases.Prefs:  void  addVersionInfo(android.content.Context,android.preference.PreferenceScreen)	com.sajmons.common.AppUtils:  java.lang.String  getVersionName(android.content.Context)
com.sajmons.mylocation.LocationResolver$3:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  java.util.Timer  access$700(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initAppShortcuts()
com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.Prefs:  void  addVersionInfo(android.content.Context,android.preference.PreferenceScreen)
com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String,double)	com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatExposure(android.content.Context,boolean)	com.sajmons.moonphases.ExposureCalc:  java.lang.String  calculateExposure(com.sajmons.moonphases.CameraSettings)
com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.ZodiacSignType  getZodiacSign()	com.sajmons.moonphases.core.ZodiacSignType:  float  Value()
com.sajmons.moonphases.core.ZodiacTypes:  void  <clinit>()	com.sajmons.moonphases.core.ZodiacTypes:  void  <init>(java.lang.String,int)
com.sajmons.moonphases.core.PlantType:  void  <clinit>()	com.sajmons.moonphases.core.PlantType:  void  <init>(java.lang.String,int)
com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  updateAllWidgets(android.content.Context)	com.sajmons.moonphases.widgets.WidgetCurrentPhaseUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  buildArray(long)	com.sajmons.moonphases.core.TimeSpanFormat$Countdown:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDaysToNextFullMoon(android.content.Context,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()
com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isCrescent()	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isGibbous()
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  initialize(android.content.Context,int)	com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  calcPhases(android.content.Context)
com.sajmons.moonphases.core.LunarEclipse:  void  <init>(java.lang.String)	com.sajmons.moonphases.core.LunarEclipse$LunarEclipseType:  com.sajmons.moonphases.core.LunarEclipse$LunarEclipseType  valueOf(java.lang.String)
com.sajmons.moonphases.DetailsDialog$1:  void  onPageFinished(android.webkit.WebView,java.lang.String)	com.sajmons.moonphases.DetailsDialog:  android.webkit.WebView  access$000(com.sajmons.moonphases.DetailsDialog)
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setPositiveButton(java.lang.String)
com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  double  getIlluminatedFraction2()
com.sajmons.moonphases.GATracker:  void  initializeGa(android.content.Context)	com.sajmons.moonphases.GATracker$1:  void  <init>(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainActivity$9:  void  onClick(android.view.View)	com.sajmons.moonphases.activities.MainActivity:  void  access$400(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isFullMoon()
com.sajmons.moonphases.widgets.WidgetFullMoon:  void  onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])	com.sajmons.moonphases.widgets.WidgetFullMoonUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  checkIfRestarted()
com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String,boolean)	com.sajmons.dialogs.SimpleFragmentDialog:  void  initMessage(android.text.SpannableString)
com.sajmons.moonphases.widgets.WidgetLargeNoText:  void  onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])	com.sajmons.moonphases.widgets.WidgetLargeNoTextUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity$6:  void  onClick(android.view.View)	com.sajmons.moonphases.activities.MainActivity:  void  access$200(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.common.AccelerometerManager$1:  void  onSensorChanged(android.hardware.SensorEvent)	com.sajmons.common.AccelerometerManager:  com.sajmons.common.AccelerometerListener  access$200()
com.sajmons.common.AppType$VersionType:  void  <clinit>()	com.sajmons.common.AppType$VersionType:  void  <init>(java.lang.String,int,int)
com.sajmons.moonphases.MoonPhaseNotifications:  void  ShowNotification(java.lang.Class,android.content.Context,android.graphics.Bitmap,java.lang.String,java.lang.String)	com.sajmons.moonphases.MoonPhaseNotifications:  android.graphics.Bitmap  getResizedBitmap(android.graphics.Bitmap,int,int)
com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  run()	com.sajmons.mylocation.LocationResolver:  android.os.Handler  access$900(com.sajmons.mylocation.LocationResolver)
com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String)	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String,boolean)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.activities.MainActivity:  void  refreshNextNewFull()	com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  int  compare(java.lang.Object,java.lang.Object)	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  int  compare(com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption,com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption)
com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  updateAllWidgets(android.content.Context)	com.sajmons.moonphases.widgets.WidgetSmallNoTextUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption:  void  <clinit>()	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption:  void  <init>(java.lang.String,int,long,java.lang.String,java.lang.String)
com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()	com.sajmons.mylocation.LocationResolver:  android.location.LocationListener  access$200(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiacDesc(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.ZodiacSignType  getZodiacSign()
com.sajmons.mylocation.LocationResolver$2:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  com.sajmons.mylocation.LocationResolver$LocationResult  access$600(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity$8:  void  onClick(android.content.DialogInterface,int)	com.sajmons.moonphases.Market:  java.lang.String  getMarketAppUrl(android.content.Context,com.sajmons.moonphases.MarketType,boolean)
com.sajmons.moonphases.activities.AppPreferencesActivity:  void  <init>()	com.sajmons.moonphases.activities.AppPreferencesActivity$1:  void  <init>(com.sajmons.moonphases.activities.AppPreferencesActivity)
com.sajmons.moonphases.core.ZodiacSignType:  void  <clinit>()	com.sajmons.moonphases.core.ZodiacSignType:  void  <init>(java.lang.String,int,float)
com.sajmons.moonphases.activities.MainActivity:  void  checkIfLunchedFromWidget()	com.sajmons.moonphases.core.MoonPhasesBase:  void  today()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatAge(android.content.Context,boolean)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiac(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.ZodiacSignType  getZodiacSign()
com.sajmons.moonphases.activities.MainActivity:  void  setDay(java.util.Calendar)	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.widgets.WidgetLargeUpdateService:  void  onCreate()	com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  startService(android.app.Service)
com.sajmons.moonphases.core.MoonPhasesBase:  void  goToNextFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()
com.sajmons.moonphases.widgets.WidgetFullMoonUpdateService:  void  onCreate()	com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  startService(android.app.Service)
com.sajmons.moonphases.widgets.WidgetLargeNoTextUpdateService:  void  onCreate()	com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  startService(android.app.Service)
com.sajmons.moonphases.activities.MainActivity$1:  void  onDateSet(android.widget.DatePicker,int,int,int)	com.sajmons.moonphases.activities.MainActivity:  void  setDay(java.util.Calendar)
com.sajmons.moonphases.MoonPhasesMain:  int  getPlantRes(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign()
com.sajmons.moonphases.activities.MainActivity:  void  showNextNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  void  goToNextNewMoon()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDaysToNextNewMoon(android.content.Context,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()
com.sajmons.moonphases.Ads:  java.util.ArrayList  getDrawerItems(android.content.Context)	com.sajmons.moonphases.Ads$2:  void  <init>(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  refreshZodiacPlant()	com.sajmons.moonphases.MoonPhasesMain:  int  getPlantRes(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.Ads:  void  showBanner(android.app.Activity)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isNewMoon()
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  void  <init>()
com.sajmons.moonphases.core.SunBase:  java.lang.String  getSetTime()	com.sajmons.moonphases.core.RiseSetFormat:  java.lang.String  getUndefinedSetFormat()
com.sajmons.moonphases.activities.MainActivity:  void  onDoubleTap()	com.sajmons.moonphases.activities.MainActivity:  void  gotoToday()
com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  <init>(com.sajmons.moonphases.activities.MainActivity,com.sajmons.moonphases.activities.MainActivity$1)	com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.activities.DrawerAdapter$ViewHolder:  void  <init>(com.sajmons.moonphases.activities.DrawerAdapter,com.sajmons.moonphases.activities.DrawerAdapter$1)	com.sajmons.moonphases.activities.DrawerAdapter$ViewHolder:  void  <init>(com.sajmons.moonphases.activities.DrawerAdapter)
com.sajmons.moonphases.ExposureCalc:  java.lang.String  calculateExposure(com.sajmons.moonphases.CameraSettings)	com.sajmons.moonphases.core.MoonPhasesBase:  double  getLatitude()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  buildExprTree(java.lang.String)	com.sajmons.evaluator.Evaluator:  void  matchToken(int)
com.sajmons.moonphases.core.PhaseType:  void  <clinit>()	com.sajmons.moonphases.core.PhaseType:  void  <init>(java.lang.String,int)
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap)	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isCrescent()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatAge(android.content.Context,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  double  getAge()
com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()	com.sajmons.moonphases.Ads:  java.util.ArrayList  getDrawerItems(android.content.Context)
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.CameraSettings  getCS()
com.sajmons.moonphases.MainApplication:  void  onCreate()	com.sajmons.moonphases.GATracker:  void  initializeGa(android.content.Context)
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  powerSign()	com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  factor()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  buildExprTree(java.lang.String)	com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  exprTree()
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setPositiveButton(java.lang.String)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatExposure(android.content.Context,boolean)
com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context)	com.sajmons.moonphases.Settings$SingletonHelper:  com.sajmons.moonphases.Settings  access$000()
com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  void  <init>()
com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  <init>(com.sajmons.mylocation.LocationResolver,com.sajmons.mylocation.LocationResolver$1)	com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  <init>(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.MarketType:  void  <clinit>()	com.sajmons.moonphases.MarketType:  void  <init>(java.lang.String,int,java.lang.String)
com.sajmons.mylocation.LocationResolver$3:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  android.location.LocationManager  access$100(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setIcon(int)
com.sajmons.moonphases.activities.MainActivity:  void  refreshDateAge()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDate(android.content.Context)
com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener,int)	com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener,int,int,int,int)
com.sajmons.moonphases.Ads$2:  void  <init>(android.content.Context)	com.sajmons.moonphases.activities.DrawerAdapterItem:  void  <init>(java.lang.String,int)
com.sajmons.moonphases.activities.MainActivity$2:  void  onGranted()	com.sajmons.moonphases.activities.MainActivity:  com.sajmons.moonphases.MoonPhasesMain  access$000(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setTitle(java.lang.String)
com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()	com.sajmons.mylocation.LocationResolver:  android.location.LocationManager  access$100(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.ExposureCalc:  java.lang.String  calculateExposure(com.sajmons.moonphases.CameraSettings)	com.sajmons.moonphases.ExposureCalc:  int  getLocation(double)
com.sajmons.evaluator.Evaluator:  double  eval(double,double)	com.sajmons.evaluator.Evaluator:  double  eval(double)
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  create(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  initializeZodiacPlantButtons()	com.sajmons.moonphases.activities.MainActivity$7:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.widgets.WidgetSmallNoTextUpdateService:  void  onCreate()	com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  startService(android.app.Service)
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  exprTree()	com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  term()
com.sajmons.mylocation.LocationGetter$2:  void  run()	com.sajmons.mylocation.LocationGetter:  android.content.Context  access$200(com.sajmons.mylocation.LocationGetter)
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isGibbous()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPhaseString(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PhaseType  getPhase()
com.sajmons.moonphases.activities.MainActivity:  void  showNextFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  void  goToNextFullMoon()
com.sajmons.moonphases.Market$1:  void  <clinit>()	com.sajmons.moonphases.MarketType:  com.sajmons.moonphases.MarketType[]  values()
com.sajmons.moonphases.activities.MainActivity:  void  refreshRiseSetIlum()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatIllumFract(android.content.Context,boolean)
com.sajmons.moonphases.core.MoonPhasesBase:  void  <init>()	com.sajmons.moonphases.core.MoonPhasesBase:  void  setLocation(android.location.Location)
com.sajmons.moonphases.Settings$SingletonHelper:  void  <clinit>()	com.sajmons.moonphases.Settings:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()
com.sajmons.moonphases.widgets.WidgetSmallNoText:  void  onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])	com.sajmons.moonphases.widgets.WidgetSmallNoTextUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity$2:  void  onGranted()	com.sajmons.common.AppUtils:  android.location.Location  getLastKnownLocation(android.content.Context)
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  initializeDialog(android.view.View)	com.sajmons.moonphases.CameraSettings:  java.lang.String  getWeatherText(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  initNextFullNextNew()	com.sajmons.moonphases.activities.MainActivity$10:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.DetailsDialog:  void  setupWebView()	com.sajmons.moonphases.DetailsDialog$1:  void  <init>(com.sajmons.moonphases.DetailsDialog,java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  boolean  onCreateOptionsMenu(android.view.Menu)	com.sajmons.moonphases.MainApplication:  android.content.Intent  getShareIntent(android.app.Activity)
com.sajmons.moonphases.activities.MainActivity:  void  showNextNewMoon()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  initializeDialog(android.view.View)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.CameraSettings  getCS()
com.sajmons.moonphases.activities.AppPreferencesActivity$1:  void  run()	com.sajmons.moonphases.activities.AppPreferencesActivity:  android.os.Handler  access$000(com.sajmons.moonphases.activities.AppPreferencesActivity)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  void  <init>()
com.sajmons.moonphases.MainApplication:  void  restartApp(android.content.Context)	com.sajmons.moonphases.MainApplication$1:  void  <init>(android.content.Context)
com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.Ads:  void  showBanner(android.app.Activity)
com.sajmons.moonphases.MoonPhasesMain:  void  <init>()	com.sajmons.moonphases.CameraSettings:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.moonphases.MoonPhasesMain:  int  getPlantRes(android.content.Context)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  void  setDay(java.util.Date)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setTitle(java.lang.String)
com.sajmons.moonphases.core.MoonPhasesBase:  void  refresh()	com.sajmons.moonphases.core.MoonPhasesBase:  void  computePhase(java.util.Calendar)
com.sajmons.moonphases.activities.MainActivity:  void  gotoTodayNoAd()	com.sajmons.moonphases.MoonPhasesMain:  void  setDay(java.util.Calendar)
com.sajmons.mylocation.LocationGetter$1:  void  <init>(com.sajmons.mylocation.LocationGetter)	com.sajmons.mylocation.LocationResolver$LocationResult:  void  <init>()
com.sajmons.moonphases.core.LunarEclipses:  void  <clinit>()	com.sajmons.moonphases.core.LunarEclipse:  void  <init>(java.lang.String)
com.sajmons.moonphases.Ads:  void  showBanner(android.app.Activity)	com.sajmons.moonphases.Ads:  void  initializeBanner(android.app.Activity,int,java.lang.String)
com.sajmons.moonphases.MoonPhasesMain$SingletonHelper:  void  <clinit>()	com.sajmons.moonphases.MoonPhasesMain:  void  <init>()
com.sajmons.moonphases.core.MoonPhasesBase:  double  calcAge(java.util.Calendar)	com.sajmons.moonphases.core.MoonPhasesBase:  double  Normalize(double)
com.sajmons.moonphases.PreferenceHelper:  boolean  isMarketAppInstalled(android.content.Context,com.sajmons.moonphases.MarketType)	com.sajmons.common.AppUtils:  boolean  packageExists(android.content.Context,java.lang.String)
com.sajmons.moonphases.activities.MainViewFragment:  void  prepareBitmap(android.widget.ImageView)	com.sajmons.moonphases.Settings:  boolean  getAllowParallacticRotaton()
com.sajmons.common.AppUtils:  android.content.Intent  getLaunchIntent(android.content.Context,java.lang.String)	com.sajmons.common.AppUtils:  android.content.Intent  getLaunchIntentForPackage(android.content.Context,java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  refreshZodiacPlant()	com.sajmons.moonphases.MoonPhasesMain:  int  getZodiacRes(android.content.Context)
com.sajmons.moonphases.core.MoonPhasesBase:  void  computePhase(java.util.Calendar)	com.sajmons.moonphases.core.MoonPhasesBase:  double  getLongitude()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatRiseTime(android.content.Context,boolean)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.moonphases.activities.MainActivity:  void  refreshNextNewFull()	com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()
com.sajmons.moonphases.Ads:  void  showInterstitial(android.app.Activity)	com.sajmons.moonphases.Ads$1:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  access$200(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()
com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)	com.sajmons.moonphases.MoonPhaseNotifications:  void  ShowNotification(java.lang.Class,android.content.Context,android.graphics.Bitmap,java.lang.String,java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  initNextFullNextNew()	com.sajmons.moonphases.activities.MainActivity$9:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlantDesc(android.content.Context)	com.sajmons.common.Res:  java.lang.String  getString(android.content.Context,java.lang.String)
com.sajmons.moonphases.core.MoonPhasesBase:  java.lang.String  getRiseTime()	com.sajmons.moonphases.core.RiseSetFormat:  java.lang.String  getUndefinedRiseFormat()
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat,com.sajmons.moonphases.core.TimeSpanFormat$1)	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDaysToNextFullMoon(android.content.Context,boolean)
com.sajmons.moonphases.activities.MainViewFragment:  void  prepareBitmap(android.widget.ImageView)	com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context)
com.sajmons.mylocation.LocationResolver$2:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationGetter$1:  void  gotLocation(android.location.Location)
com.sajmons.mylocation.LocationGetter$1:  void  gotLocation(android.location.Location)	com.sajmons.mylocation.LocationGetter:  java.lang.Object  access$000(com.sajmons.mylocation.LocationGetter)
com.sajmons.moonphases.MoonPhasesMain:  int  getZodiacRes(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.ZodiacSignType  getZodiacSign()
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initNextFullNextNew()
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiacDesc(android.content.Context)
com.sajmons.evaluator.Evaluator:  void  <init>(double)	com.sajmons.evaluator.Evaluator:  void  <init>()
com.sajmons.moonphases.GATracker:  void  initializeGa(android.content.Context)	com.sajmons.moonphases.MainApplication:  com.google.android.gms.analytics.Tracker  getDefaultTracker()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatAge(android.content.Context,boolean)	com.sajmons.common.TimeUtils:  java.lang.String  getDaysAndHours(double,java.lang.String,java.lang.String)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextFullMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  void  <init>()
com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  formatObject(java.util.Date,java.util.Date)	com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  formatObject(long,long)
com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)	com.sajmons.mylocation.LocationResolver$2:  void  <init>(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  calcPhases(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  create(android.content.Context)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDate(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.Prefs:  void  addTranslators(android.content.Context,android.preference.PreferenceScreen)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlantDesc(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String)
com.sajmons.moonphases.ExposureCalc:  java.lang.String  calculateExposure(com.sajmons.moonphases.CameraSettings)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.MoonPhasesMain:  int  getPlantRes(android.content.Context)	com.sajmons.common.Res:  int  getDrawable(android.content.Context,java.lang.String)
com.sajmons.mylocation.LocationResolver$3:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  android.location.LocationListener  access$000(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.Prefs$1:  boolean  onPreferenceClick(android.preference.Preference)	com.sajmons.moonphases.Prefs:  void  sendEmail(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.sajmons.moonphases.activities.MonthViewFragment:  void  initializeGridView(android.view.View)	com.sajmons.moonphases.activities.MonthViewFragment$1:  void  <init>(com.sajmons.moonphases.activities.MonthViewFragment)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setPositiveButton(java.lang.String,android.content.DialogInterface$OnClickListener)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPhaseString(android.content.Context)	com.sajmons.common.Res:  java.lang.String  getString(android.content.Context,java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  access$800(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showBuyDialog()
com.sajmons.moonphases.activities.MainActivity$7:  void  onClick(android.view.View)	com.sajmons.moonphases.activities.MainActivity:  void  access$300(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  create(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setIcon(int)
com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener)	com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener,int)
com.sajmons.moonphases.activities.MonthViewFragment:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.moonphases.Settings:  void  <init>()	com.sajmons.common.BaseSettings:  void  <init>()
com.sajmons.moonphases.MainApplication:  void  onCreate()	com.sajmons.common.BaseSettings:  boolean  getFirstTimeRun()
com.sajmons.moonphases.activities.MainActivity:  java.util.Calendar  getCal()	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.moonphases.NotifTextTitle:  java.lang.String  getNotifTitle(android.content.Context,com.sajmons.moonphases.MoonPhasesMain)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPhaseString(android.content.Context)
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isWaxing()
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.moonphases.MoonPhasesMain:  int  getZodiacRes(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setPositiveButton(java.lang.String)
com.sajmons.mylocation.LocationGetter:  void  <init>(android.content.Context)	com.sajmons.mylocation.LocationGetter$1:  void  <init>(com.sajmons.mylocation.LocationGetter)
com.sajmons.moonphases.activities.MainActivity:  void  refreshRiseSetIlum()	com.sajmons.moonphases.core.MoonPhasesBase:  java.lang.String  getSetTime()
com.sajmons.moonphases.Ads:  void  initializeBanner(android.app.Activity,int,java.lang.String)	com.sajmons.common.AppUtils:  boolean  isOnline(android.content.Context)
com.sajmons.moonphases.Ads:  void  showAppWall(android.app.Activity)	com.sajmons.moonphases.Ads:  void  showInterstitial(android.app.Activity)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiac(android.content.Context)
com.sajmons.evaluator.Evaluator:  void  <init>(double,double)	com.sajmons.evaluator.Evaluator:  void  <init>(double)
com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String,double,double)	com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String,double)
com.sajmons.moonphases.widgets.WidgetProviderHelper:  int  getThemeColor(android.content.Context)	com.sajmons.moonphases.Settings:  java.lang.String  getAppTheme()
com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()	com.sajmons.moonphases.activities.DrawerAdapter:  void  <init>(android.content.Context,java.util.ArrayList)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiac(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  gotoToday()	com.sajmons.moonphases.activities.MainActivity:  void  gotoTodayNoAd()
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  <init>(android.content.Context,int,java.util.Calendar)	com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  initialize(android.content.Context,int)
com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign()	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign(com.sajmons.moonphases.core.ZodiacTypes)
com.sajmons.mylocation.LocationResolver$1:  boolean  handleMessage(android.os.Message)	com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String,boolean)
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  void  <init>()
com.sajmons.moonphases.MoonPhasesMain:  void  <init>()	com.sajmons.moonphases.core.MoonPhasesBase:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  initDateAgeZodiacPlant()	com.sajmons.moonphases.activities.MainActivity$3:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()	com.sajmons.moonphases.MoonPhasesMain$SingletonHelper:  com.sajmons.moonphases.MoonPhasesMain  access$000()
com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)	com.sajmons.moonphases.NotifTextTitle:  java.lang.String  getNotifTitle(android.content.Context,com.sajmons.moonphases.MoonPhasesMain)
com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign(com.sajmons.moonphases.core.ZodiacTypes)	com.sajmons.moonphases.core.ZodiacSignType:  float  Value()
com.sajmons.moonphases.activities.ExposureCalcDialog:  android.app.Dialog  onCreateDialog(android.os.Bundle)	com.sajmons.moonphases.activities.ExposureCalcDialog:  void  initializeDialog(android.view.View)
com.sajmons.moonphases.activities.MainActivity:  void  access$300(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()
com.sajmons.moonphases.Prefs:  void  addVersionInfo(android.content.Context,android.preference.PreferenceScreen)	com.sajmons.moonphases.Prefs$1:  void  <init>(android.content.Context)
com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String)	com.sajmons.evaluator.Evaluator:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  gotoToday()	com.sajmons.moonphases.Ads:  void  showInterstitial(android.app.Activity)
com.sajmons.mylocation.LocationResolver$2:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  android.location.LocationManager  access$100(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.core.TimeSpanFormat:  java.lang.String  format(java.util.Calendar,java.util.Calendar)	com.sajmons.moonphases.core.TimeSpanFormat:  java.lang.String  format(long,long)
com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isWaning()	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isWaxing()
com.sajmons.moonphases.activities.MainActivity:  void  showExposureDialog()	com.sajmons.moonphases.activities.ExposureCalcDialog:  void  <init>()
com.sajmons.mylocation.LocationGetter$2:  void  run()	com.sajmons.mylocation.LocationGetter:  com.sajmons.mylocation.LocationResolver$LocationResult  access$300(com.sajmons.mylocation.LocationGetter)
com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)	com.sajmons.mylocation.LocationResolver$3:  void  <init>(com.sajmons.mylocation.LocationResolver)
com.sajmons.evaluator.MathPlus:  double  acot2(double,double)	com.sajmons.evaluator.MathPlus:  int  signum(double)
com.sajmons.moonphases.widgets.WidgetNewMoonUpdateService:  void  onCreate()	com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  startService(android.app.Service)
com.sajmons.moonphases.activities.MainActivity:  void  initializeZodiacPlantButtons()	com.sajmons.moonphases.activities.MainActivity$6:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.MoonPhasesMain:  void  setDay(java.util.Calendar)	com.sajmons.moonphases.core.MoonPhasesBase:  void  setDay(java.util.Calendar)
com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  void  setDay(java.util.Date)
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  calcPhases(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  void  setDay(java.util.Calendar)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setNegativeButton(java.lang.String)
com.sajmons.moonphases.activities.MonthViewFragment:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.MainApplication:  void  setAppTheme(android.app.Activity)
com.sajmons.moonphases.MainApplication:  void  setAppTheme(android.app.Activity)	com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showPreferences()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.MainApplication:  void  onCreate()	com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiacDesc(android.content.Context)	com.sajmons.common.Res:  java.lang.String  getString(android.content.Context,java.lang.String)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDistance(android.content.Context,boolean)
com.sajmons.moonphases.activities.MainActivity:  void  refreshDateAge()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatAge(android.content.Context,boolean)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setTitle(java.lang.String)
com.sajmons.moonphases.DetailsDialog:  void  <init>(android.content.Context,int)	com.sajmons.moonphases.DetailsDialog$3:  void  <init>(com.sajmons.moonphases.DetailsDialog)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  void  <init>()
com.sajmons.moonphases.NotifTextTitle:  java.lang.String  getNotifTitle(android.content.Context,com.sajmons.moonphases.MoonPhasesMain)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatIllumFract(android.content.Context,boolean)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initializeZodiacPlantButtons()
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainViewFragment:  void  phaseRiseSetIllum(android.view.View)	com.sajmons.moonphases.activities.MainViewFragment:  void  prepareBitmap(android.widget.ImageView)
com.sajmons.moonphases.DetailsDialog:  void  nextEclipseCountdown()	com.sajmons.moonphases.DetailsDialog$2:  void  <init>(com.sajmons.moonphases.DetailsDialog)
com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()	com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  <init>(com.sajmons.moonphases.activities.MainActivity,com.sajmons.moonphases.activities.MainActivity$1)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatMonthYear()	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.mylocation.LocationResolver$2:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  android.location.LocationListener  access$200(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initDateAgeZodiacPlant()
com.sajmons.moonphases.activities.MainActivity:  void  setDay(java.util.Calendar)	com.sajmons.moonphases.MoonPhasesMain:  void  setDay(java.util.Calendar)
com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  updateAllWidgets(android.content.Context)	com.sajmons.moonphases.widgets.WidgetNewMoonUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.DrawerAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.sajmons.moonphases.activities.DrawerAdapterItem:  java.lang.String  getDescription()
com.sajmons.moonphases.activities.MainActivity:  void  refreshZodiacPlant()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiac(android.content.Context)
com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isGibbous()	com.sajmons.moonphases.core.MoonPhasesBase:  double  getPhaseAngle()
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setIcon(int)
com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onResume()	com.sajmons.moonphases.Ads:  void  showBanner(android.app.Activity)
com.sajmons.moonphases.activities.MainViewFragment:  void  prepareBitmap(android.widget.ImageView)	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  updateAllWidgets(android.content.Context)	com.sajmons.moonphases.widgets.WidgetFullMoonUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String)
com.sajmons.common.AccelerometerManager:  void  startListening(com.sajmons.common.AccelerometerListener,android.content.Context,int,int)	com.sajmons.common.AccelerometerManager:  void  startListening(com.sajmons.common.AccelerometerListener,android.content.Context)
com.sajmons.moonphases.MainApplication:  void  setAppTheme(android.app.Activity)	com.sajmons.moonphases.Settings:  java.lang.String  getAppTheme()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlant(android.content.Context)	com.sajmons.common.Res:  java.lang.String  getString(android.content.Context,java.lang.String)
com.sajmons.moonphases.Ads$1:  void  onAdLoaded()	com.sajmons.moonphases.Ads:  com.google.android.gms.ads.InterstitialAd  access$000()
com.sajmons.moonphases.widgets.WidgetProviderHelper:  int  getThemeColor(android.content.Context)	com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context)
com.sajmons.moonphases.core.MoonPhasesBase:  void  setDay(java.util.Calendar)	com.sajmons.moonphases.core.MoonPhasesBase:  void  computePhase(java.util.Calendar)
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setIcon(int)
com.sajmons.moonphases.activities.MainActivity:  void  refreshZodiacPlant()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlant(android.content.Context)
com.sajmons.evaluator.Evaluator:  double  eval(double)	com.sajmons.evaluator.Evaluator:  double  eval()
com.sajmons.moonphases.core.LunarEclipse$LunarEclipseType:  void  <clinit>()	com.sajmons.moonphases.core.LunarEclipse$LunarEclipseType:  void  <init>(java.lang.String,int)
com.sajmons.common.BaseSettings:  int  getVersion()	com.sajmons.common.AppType$VersionType:  int  Value()
com.sajmons.moonphases.activities.MainActivity$2:  void  onGranted()	com.sajmons.moonphases.core.MoonPhasesBase:  void  setLocation(android.location.Location)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLatitude(android.content.Context,boolean)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLongitude(android.content.Context,boolean)
com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()	com.sajmons.mylocation.LocationResolver:  android.location.LocationListener  access$000(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatSetTime(android.content.Context,boolean)
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  initialize(android.content.Context,int)	com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context)
com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String,double,double)	com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String,double)
com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  updateAllWidgets(android.content.Context)	com.sajmons.moonphases.widgets.WidgetLargeNoTextUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setImage(int)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiac(android.content.Context)	com.sajmons.common.Res:  java.lang.String  getString(android.content.Context,java.lang.String)
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  calcPhases(android.content.Context)	com.sajmons.moonphases.Settings:  boolean  getAllowParallacticRotaton()
com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String)	com.sajmons.evaluator.Evaluator:  boolean  setExpression(java.lang.String)
com.sajmons.moonphases.widgets.WidgetNewMoon:  void  onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])	com.sajmons.moonphases.widgets.WidgetNewMoonUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.moonphases.activities.MainActivity$8:  void  <init>(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlant(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign()
com.sajmons.moonphases.core.TimeSpanFormat:  java.lang.String  format(java.util.Date,java.util.Date)	com.sajmons.moonphases.core.TimeSpanFormat:  java.lang.String  format(long,long)
com.sajmons.moonphases.core.MoonPhasesBase:  void  goToNextNewMoon()	com.sajmons.moonphases.core.MoonPhasesBase:  int  getDaysToNextNewMoon()
com.sajmons.moonphases.DetailsDialog:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.DetailsDialog:  void  nextEclipseCountdown()
com.sajmons.moonphases.core.SunBase:  void  <clinit>()	com.sajmons.common.AppUtils:  int  getTimeZoneOffsetInHours()
com.sajmons.moonphases.DetailsDialog:  void  access$100(com.sajmons.moonphases.DetailsDialog)	com.sajmons.moonphases.DetailsDialog:  void  refershDetails()
com.sajmons.mylocation.LocationResolver$3:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationGetter$1:  void  gotLocation(android.location.Location)
com.sajmons.common.AccelerometerManager:  void  startListening(com.sajmons.common.AccelerometerListener,android.content.Context,int,int)	com.sajmons.common.AccelerometerManager:  void  configure(int,int)
com.sajmons.moonphases.MainApplication:  void  setAppTheme(android.app.Activity)	com.sajmons.common.Res:  int  getStyle(android.content.Context,java.lang.String)
com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.moonphases.activities.MainActivity$10:  void  onClick(android.view.View)	com.sajmons.moonphases.activities.MainActivity:  void  access$500(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.common.Request:  java.lang.String  DownloadText(java.lang.String)	com.sajmons.common.Request:  java.lang.String  DownloadText(java.lang.String,int)
com.sajmons.moonphases.activities.MainViewFragment:  void  prepareBitmap(android.widget.ImageView)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()	com.sajmons.mylocation.LocationResolver:  android.content.Context  access$300(com.sajmons.mylocation.LocationResolver)
com.sajmons.mylocation.LocationResolver$2:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  java.util.Timer  access$700(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.DrawerAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)	com.sajmons.moonphases.activities.DrawerAdapterItem:  int  getIconResId()
com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context,java.lang.String)
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  initializeDialog(android.view.View)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  term()	com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  signedFactor()
com.sajmons.moonphases.activities.MainActivity:  void  access$600(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  gotoToday()
com.sajmons.moonphases.activities.MainActivity:  void  showExposureDialog()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.MoonPhasesMain:  int  getZodiacRes(android.content.Context)	com.sajmons.common.Res:  int  getDrawable(android.content.Context,java.lang.String)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDaysToNextNewMoon(android.content.Context,boolean)
com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String)	com.sajmons.evaluator.Evaluator:  boolean  setExpression(java.lang.String)
com.sajmons.mylocation.LocationResolver$3:  void  onLocationChanged(android.location.Location)	com.sajmons.mylocation.LocationResolver:  com.sajmons.mylocation.LocationResolver$LocationResult  access$600(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  showNextFullMoon()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.activities.MainActivity:  void  access$700(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()
com.sajmons.mylocation.LocationGetter$2:  void  run()	com.sajmons.mylocation.LocationResolver:  boolean  getLocation(android.content.Context,com.sajmons.mylocation.LocationResolver$LocationResult,int)
com.sajmons.moonphases.activities.MonthViewFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.sajmons.moonphases.activities.MonthViewFragment:  void  initializeGridView(android.view.View)
com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.activities.MainActivity:  void  requestPermissions()
com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)	com.sajmons.mylocation.LocationResolver$1:  void  <init>(com.sajmons.mylocation.LocationResolver)
com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setTitle(java.lang.String)
com.sajmons.mylocation.LocationGetter$2:  void  run()	com.sajmons.mylocation.LocationResolver:  void  prepare()
com.sajmons.moonphases.MainApplication:  android.content.Intent  getShareIntent(android.app.Activity)	com.sajmons.common.AppUtils:  java.lang.String  getAndridMarketUrl(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initialisePaging()
com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  updateAllWidgets(android.content.Context)	com.sajmons.moonphases.widgets.WidgetLargeUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  onSwipe(int)	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  checkIfLunchedFromWidget()
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.GATracker:  void  screenView(java.lang.String)
com.sajmons.moonphases.widgets.WidgetProviderHelper:  int[]  getWidgetIds(java.lang.Class,android.content.Context)	com.sajmons.moonphases.widgets.WidgetProviderHelper:  android.appwidget.AppWidgetManager  getMgr(android.content.Context)
com.sajmons.common.AccelerometerManager:  void  <clinit>()	com.sajmons.common.AccelerometerManager$1:  void  <init>()
com.sajmons.moonphases.activities.MainActivity:  void  showNextNewMoon()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.core.MoonPhasesBase:  void  <init>()	com.sajmons.moonphases.core.MoonPhasesBase:  void  today()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  createNode(int,com.sajmons.evaluator.Evaluator$Tree,com.sajmons.evaluator.Evaluator$Tree)	com.sajmons.evaluator.Evaluator$Tree:  void  <init>(com.sajmons.evaluator.Evaluator)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  gotoDateFromIntent()
com.sajmons.mylocation.LocationGetter$2:  void  run()	com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPhaseString(android.content.Context)
com.sajmons.moonphases.DetailsDialog:  void  onCreate(android.os.Bundle)	com.sajmons.moonphases.DetailsDialog:  void  setupWebView()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  buildExprTree(java.lang.String)	com.sajmons.evaluator.Evaluator:  void  parseExpr()
com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String,double)	com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String)
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  calcPhases(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  java.util.Calendar  getCal()
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  initRiseSetIllum()
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  double  getIlluminatedFraction2()
com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)	com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isSouthernHemisphere()
com.sajmons.common.SimpleGestureFilter:  boolean  onDoubleTap(android.view.MotionEvent)	com.sajmons.moonphases.activities.MainActivity:  void  onDoubleTap()
com.sajmons.moonphases.activities.MainActivity:  void  initialisePaging()	com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener,int)
com.sajmons.moonphases.activities.MainActivity:  void  refreshNextNewFull()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPhaseString(android.content.Context)
com.sajmons.moonphases.activities.MainViewFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)	com.sajmons.moonphases.activities.MainViewFragment:  void  phaseRiseSetIllum(android.view.View)
com.sajmons.evaluator.MathPlus:  double  acsch(double)	com.sajmons.evaluator.MathPlus:  int  signum(double)
com.sajmons.moonphases.activities.MainActivity$3:  void  onClick(android.view.View)	com.sajmons.moonphases.activities.MainActivity:  void  showDatePickerDialog(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.core.MoonPhasesBase:  void  computePhase(java.util.Calendar)	com.sajmons.moonphases.core.MoonPhasesBase:  double  calcAge(java.util.Calendar)
com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setImage(int)	com.sajmons.dialogs.SimpleFragmentDialog:  void  initImage(int)
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  createConstNode(double)	com.sajmons.evaluator.Evaluator$Tree:  void  <init>(com.sajmons.evaluator.Evaluator)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlant(android.content.Context)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlantDesc(android.content.Context)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign()
com.sajmons.moonphases.widgets.WidgetProviderHelper:  int  getThemeColor(android.content.Context)	com.sajmons.common.Res:  int  getColor(android.content.Context,java.lang.String)
com.sajmons.moonphases.widgets.WidgetLarge:  void  onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])	com.sajmons.moonphases.widgets.WidgetLargeUpdateService:  void  startWidgetUpdateService(android.content.Context)
com.sajmons.moonphases.widgets.WidgetCurrentPhaseUpdateService:  void  onCreate()	com.sajmons.moonphases.widgets.WidgetProviderHelper:  void  startService(android.app.Service)
com.sajmons.moonphases.activities.MainActivity:  java.lang.String  getAboutTitle()	com.sajmons.common.AppUtils:  java.lang.String  getVersionName(android.content.Context)
com.sajmons.moonphases.core.SunBase:  java.lang.String  getRiseTime()	com.sajmons.moonphases.core.RiseSetFormat:  java.lang.String  getUndefinedRiseFormat()
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setPositiveButton(java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  onResume()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.common.AppUtils:  android.content.Intent  getLaunchIntentForAndroidMarket(android.content.Context,java.lang.String)	com.sajmons.common.AppUtils:  android.content.Intent  getLaunchIntent(android.content.Context,java.lang.String)
com.sajmons.moonphases.Prefs:  void  addTranslators(android.content.Context,android.preference.PreferenceScreen)	com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onCreate(android.os.Bundle)
com.sajmons.moonphases.MainApplication:  void  restartApp(android.content.Context)	com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPlantDesc(android.content.Context)	com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()
com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isCrescent()	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.common.AppType$VersionType:  int  Value()	com.sajmons.common.BaseSettings:  int  getVersion()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLatitude(android.content.Context,boolean)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()	com.sajmons.moonphases.activities.MainActivity:  boolean  onOptionsItemSelected(android.view.MenuItem)
com.sajmons.moonphases.Ads:  java.util.ArrayList  getDrawerItems(android.content.Context)	com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()
com.sajmons.moonphases.Ads:  void  showAppWall(android.app.Activity)	com.sajmons.moonphases.activities.MainActivity:  void  checkIfLunchedFromWidget()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLongitude(android.content.Context,boolean)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)
com.sajmons.moonphases.activities.MainActivity$4:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()
com.sajmons.moonphases.Prefs:  void  sendEmail(android.content.Context,java.lang.String,java.lang.String,java.lang.String)	com.sajmons.moonphases.Prefs$1:  boolean  onPreferenceClick(android.preference.Preference)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatSetTime(android.content.Context,boolean)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)
com.sajmons.moonphases.NotifText:  java.lang.String  getNotifText(android.content.Context,com.sajmons.moonphases.MoonPhasesMain)	com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)
com.sajmons.common.BaseSettings:  void  setFirstTimeRun(boolean)	com.sajmons.moonphases.MainApplication:  void  onCreate()
com.sajmons.moonphases.GATracker:  void  initializeGa(android.content.Context)	com.sajmons.moonphases.MainApplication:  void  onCreate()
com.sajmons.moonphases.activities.MonthViewFragment$1:  void  <init>(com.sajmons.moonphases.activities.MonthViewFragment)	com.sajmons.moonphases.activities.MonthViewFragment:  void  initializeGridView(android.view.View)
com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setPositiveButton(java.lang.String,android.content.DialogInterface$OnClickListener)	com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()
com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String,double)	com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String,double,double)
com.sajmons.moonphases.activities.MainActivity:  void  processAppShortCuts()	com.sajmons.moonphases.activities.MainActivity:  void  onResume()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  factor()	com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  powerSign()
com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setImage(int)	com.sajmons.moonphases.activities.MainActivity:  void  showHelpDialog()
com.sajmons.moonphases.core.MoonPhasesBase:  void  nextWeek()	com.sajmons.moonphases.activities.MainActivity:  void  onSwipe(int)
com.sajmons.moonphases.Settings:  boolean  getShowMonthViewPlantIcon()	com.sajmons.moonphases.activities.MonthViewImageAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatExposure(android.content.Context,boolean)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)
com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  <init>(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  <init>(com.sajmons.mylocation.LocationResolver,com.sajmons.mylocation.LocationResolver$1)
com.sajmons.common.BaseSettings:  boolean  getFirstTimeRun()	com.sajmons.moonphases.MainApplication:  void  onCreate()
com.sajmons.moonphases.activities.MainActivity:  java.util.Date  parseDate(java.lang.String,java.lang.String)	com.sajmons.moonphases.activities.MainActivity:  void  gotoDateFromIntent()
com.sajmons.moonphases.activities.MainActivity:  void  initializeFragments(boolean)	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.activities.MainActivity$8:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()
com.sajmons.moonphases.core.SunBase:  void  <init>(double,double)	com.sajmons.moonphases.core.SunBase:  void  <init>(android.location.Location)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDate(android.content.Context)	com.sajmons.moonphases.activities.MainActivity:  void  refreshDateAge()
com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener,int,int,int,int)	com.sajmons.common.SimpleGestureFilter:  void  <init>(android.app.Activity,com.sajmons.common.SimpleGestureFilter$SimpleGestureListener,int)
com.sajmons.mylocation.LocationGetter$2:  void  <init>(com.sajmons.mylocation.LocationGetter,int)	com.sajmons.mylocation.LocationGetter:  android.location.Location  getLocation(int,int)
com.sajmons.moonphases.activities.MainActivity:  com.sajmons.moonphases.MoonPhasesMain  access$000(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity$2:  void  onGranted()
com.sajmons.moonphases.DetailsDialog:  void  nextEclipseCountdown()	com.sajmons.moonphases.DetailsDialog:  void  onCreate(android.os.Bundle)
com.sajmons.moonphases.activities.MainActivity:  void  showExposureDialog()	com.sajmons.moonphases.activities.MainActivity:  boolean  onOptionsItemSelected(android.view.MenuItem)
com.sajmons.moonphases.ExposureCalc:  int  getLocation(double)	com.sajmons.moonphases.ExposureCalc:  java.lang.String  calculateExposure(com.sajmons.moonphases.CameraSettings)
com.sajmons.evaluator.Evaluator:  double  eval(double)	com.sajmons.evaluator.Evaluator:  double  eval(double,double)
com.sajmons.common.AppUtils:  int  getTimeZoneOffsetInHours()	com.sajmons.moonphases.core.SunBase:  void  <clinit>()
com.sajmons.mylocation.LocationGetter$1:  void  <init>(com.sajmons.mylocation.LocationGetter)	com.sajmons.mylocation.LocationGetter:  void  <init>(android.content.Context)
com.sajmons.moonphases.activities.MainActivity$7:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  initializeZodiacPlantButtons()
com.sajmons.common.AppUtils:  boolean  isOnline(android.content.Context)	com.sajmons.moonphases.Ads:  void  initializeBanner(android.app.Activity,int,java.lang.String)
com.sajmons.moonphases.DetailsDialog:  void  refershDetails()	com.sajmons.moonphases.DetailsDialog:  void  access$100(com.sajmons.moonphases.DetailsDialog)
com.sajmons.common.AccelerometerManager:  void  configure(int,int)	com.sajmons.common.AccelerometerManager:  void  startListening(com.sajmons.common.AccelerometerListener,android.content.Context,int,int)
com.sajmons.common.Res:  int  getStyle(android.content.Context,java.lang.String)	com.sajmons.moonphases.MainApplication:  void  setAppTheme(android.app.Activity)
com.sajmons.common.Request:  java.lang.String  DownloadText(java.lang.String,int)	com.sajmons.common.Request:  java.lang.String  DownloadText(java.lang.String)
com.sajmons.moonphases.activities.MainActivity$1:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  showDatePickerDialog(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.activities.MainActivity:  void  initAppShortcuts()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  createConstNode(double)	com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  factor()
com.sajmons.mylocation.LocationResolver:  android.content.Context  access$300(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()
com.sajmons.moonphases.Prefs:  void  addVersionInfo(android.content.Context,android.preference.PreferenceScreen)	com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onCreate(android.os.Bundle)
com.sajmons.evaluator.MathPlus:  double  acoth(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String)	com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String,double)
com.sajmons.evaluator.MathPlus:  double  atanh(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.evaluator.Evaluator:  void  <init>(double)	com.sajmons.evaluator.Evaluator:  void  <init>(double,double)
com.sajmons.moonphases.activities.MainActivity:  void  access$700(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PhaseType  getPhase()	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getPhaseString(android.content.Context)
com.sajmons.moonphases.activities.DrawerAdapterItem:  int  getIconResId()	com.sajmons.moonphases.activities.DrawerAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)
com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String,double)	com.sajmons.evaluator.Evaluator:  void  <init>(java.lang.String,double,double)
com.sajmons.mylocation.LocationGetter:  android.location.Location  access$102(com.sajmons.mylocation.LocationGetter,android.location.Location)	com.sajmons.mylocation.LocationGetter$1:  void  gotLocation(android.location.Location)
com.sajmons.evaluator.MathPlus:  double  asec(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.common.BaseSettings:  void  setAllowNotificationAds(boolean)	com.sajmons.moonphases.MainApplication:  void  onCreate()
com.sajmons.moonphases.activities.MainActivity:  void  refreshZodiacPlant()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.Settings:  com.sajmons.moonphases.Settings  getInstance(android.content.Context,java.lang.String)	com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)
com.sajmons.moonphases.GATracker:  java.lang.String  access$000()	com.sajmons.moonphases.GATracker$1:  void  onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  <init>(com.sajmons.mylocation.LocationResolver,com.sajmons.mylocation.LocationResolver$1)	com.sajmons.mylocation.LocationResolver:  boolean  getLocation(android.content.Context,com.sajmons.mylocation.LocationResolver$LocationResult,int)
com.sajmons.moonphases.activities.DrawerAdapter:  void  <init>(android.content.Context,java.util.ArrayList)	com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  initialize(android.content.Context,int)	com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  <init>(android.content.Context,int,java.util.Calendar)
com.sajmons.moonphases.core.MoonPhasesBase:  void  previousWeek()	com.sajmons.moonphases.activities.MainActivity:  void  onSwipe(int)
com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign(com.sajmons.moonphases.core.ZodiacTypes)	com.sajmons.moonphases.core.MoonPhasesBase:  com.sajmons.moonphases.core.PlantType  getPlantSign()
com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()	com.sajmons.mylocation.LocationResolver$1:  boolean  handleMessage(android.os.Message)
com.sajmons.moonphases.core.TimeSpanFormat:  java.lang.String  buildFormattedString(long)	com.sajmons.moonphases.core.TimeSpanFormat:  java.lang.String  format(long,long)
com.sajmons.moonphases.core.TimeSpanFormat$Countdown:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat)	com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  buildArray(long)
com.sajmons.common.TimeUtils:  double  getDecimalHours(java.util.Calendar)	com.sajmons.moonphases.core.SunBase:  boolean  isDayTime()
com.sajmons.common.AccelerometerManager:  int  access$100()	com.sajmons.common.AccelerometerManager$1:  void  onSensorChanged(android.hardware.SensorEvent)
com.sajmons.evaluator.MathPlus:  double  log10(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.activities.MainActivity$3:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  initDateAgeZodiacPlant()
com.sajmons.moonphases.DetailsDialog:  void  access$100(com.sajmons.moonphases.DetailsDialog)	com.sajmons.moonphases.DetailsDialog$3:  void  handleMessage(android.os.Message)
com.sajmons.moonphases.MoonPhasesMain$SingletonHelper:  com.sajmons.moonphases.MoonPhasesMain  access$000()	com.sajmons.moonphases.MoonPhasesMain:  com.sajmons.moonphases.MoonPhasesMain  getInstance()
com.sajmons.moonphases.NotifTextTitle:  java.lang.String  getNotifTitle(android.content.Context,com.sajmons.moonphases.MoonPhasesMain)	com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.activities.ExposureCalcDialog:  void  initializeDialog(android.view.View)	com.sajmons.moonphases.activities.ExposureCalcDialog:  android.app.Dialog  onCreateDialog(android.os.Bundle)
com.sajmons.moonphases.activities.MainActivity:  void  showPlantDialog()	com.sajmons.moonphases.activities.MainActivity:  void  access$300(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.Prefs$1:  void  <init>(android.content.Context)	com.sajmons.moonphases.Prefs:  void  addVersionInfo(android.content.Context,android.preference.PreferenceScreen)
com.sajmons.mylocation.LocationResolver:  boolean  getLocation(android.content.Context,com.sajmons.mylocation.LocationResolver$LocationResult,int)	com.sajmons.mylocation.LocationGetter$2:  void  run()
com.sajmons.moonphases.activities.MainActivity:  void  access$800(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.sajmons.evaluator.MathPlus:  double  acsc(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.activities.MonthViewFragment:  void  initializeGridView(android.view.View)	com.sajmons.moonphases.activities.MonthViewFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.sajmons.moonphases.CameraSettings:  java.lang.String  getWeatherText(android.content.Context)	com.sajmons.moonphases.activities.ExposureCalcDialog:  void  initializeDialog(android.view.View)
com.sajmons.moonphases.activities.MainActivity:  void  showPreferences()	com.sajmons.moonphases.activities.MainActivity:  boolean  onOptionsItemSelected(android.view.MenuItem)
com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  calcPhases(android.content.Context)	com.sajmons.moonphases.activities.MonthViewImageAdapter:  void  initialize(android.content.Context,int)
com.sajmons.moonphases.activities.MainActivity:  void  requestPermissions()	com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)
com.sajmons.moonphases.core.LunarEclipse$LunarEclipseType:  com.sajmons.moonphases.core.LunarEclipse$LunarEclipseType  valueOf(java.lang.String)	com.sajmons.moonphases.core.LunarEclipse:  void  <init>(java.lang.String)
com.sajmons.mylocation.LocationResolver$1:  void  <init>(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)
com.sajmons.mylocation.LocationGetter:  com.sajmons.mylocation.LocationResolver$LocationResult  access$300(com.sajmons.mylocation.LocationGetter)	com.sajmons.mylocation.LocationGetter$2:  void  run()
com.sajmons.moonphases.DetailsDialog$1:  void  <init>(com.sajmons.moonphases.DetailsDialog,java.lang.String)	com.sajmons.moonphases.DetailsDialog:  void  setupWebView()
com.sajmons.moonphases.activities.MainActivity$10:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  initNextFullNextNew()
com.sajmons.mylocation.LocationResolver:  void  prepare()	com.sajmons.mylocation.LocationGetter$2:  void  run()
com.sajmons.moonphases.DetailsDialog:  android.webkit.WebView  access$000(com.sajmons.moonphases.DetailsDialog)	com.sajmons.moonphases.DetailsDialog$1:  void  onPageFinished(android.webkit.WebView,java.lang.String)
com.sajmons.mylocation.LocationResolver$3:  void  <init>(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)
com.sajmons.mylocation.LocationResolver:  boolean  access$500(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()
com.sajmons.common.AppUtils:  java.lang.String  getAndridMarketUrl(android.content.Context)	com.sajmons.moonphases.MainApplication:  android.content.Intent  getShareIntent(android.app.Activity)
com.sajmons.moonphases.CameraSettings:  void  setWeather(java.lang.String,android.content.Context)	com.sajmons.moonphases.activities.ExposureCalcDialog:  void  onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.sajmons.moonphases.Settings:  void  setLastNotificationShowTime(long)	com.sajmons.moonphases.receivers.CommonReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.sajmons.moonphases.MainApplication:  android.content.Intent  getShareIntent(android.app.Activity)	com.sajmons.moonphases.activities.MainActivity:  boolean  onCreateOptionsMenu(android.view.Menu)
com.sajmons.common.AccelerometerManager:  float  access$000()	com.sajmons.common.AccelerometerManager$1:  void  onSensorChanged(android.hardware.SensorEvent)
com.sajmons.moonphases.GATracker$1:  void  <init>(android.content.Context)	com.sajmons.moonphases.GATracker:  void  initializeGa(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  refreshRiseSetIlum()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.activities.AppPreferencesActivity:  android.os.Handler  access$000(com.sajmons.moonphases.activities.AppPreferencesActivity)	com.sajmons.moonphases.activities.AppPreferencesActivity$1:  void  run()
com.sajmons.evaluator.MathPlus:  double  acot(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.evaluator.MathPlus:  double  coth(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.MainApplication$1:  void  <init>(android.content.Context)	com.sajmons.moonphases.MainApplication:  void  restartApp(android.content.Context)
com.sajmons.moonphases.activities.MainActivity:  void  initialisePaging()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.activities.MainActivity$6:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  initializeZodiacPlantButtons()
com.sajmons.moonphases.activities.MainActivity:  void  checkIfLunchedFromWidget()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.activities.MainActivity$5:  void  <init>(com.sajmons.moonphases.activities.MainActivity,android.app.Activity,android.support.v4.widget.DrawerLayout,int,int)	com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()
com.sajmons.moonphases.activities.MainActivity:  void  checkIfRestarted()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.common.Request:  java.io.InputStream  OpenHttpConnection(java.lang.String,int)	com.sajmons.common.Request:  java.lang.String  DownloadText(java.lang.String,int)
com.sajmons.dialogs.SimpleFragmentDialog:  void  initMessage(android.text.SpannableString)	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setMessage(java.lang.String,boolean)
com.sajmons.moonphases.core.LunarEclipse:  java.lang.String  DateString()	com.sajmons.moonphases.DetailsDialog:  void  refershDetails()
com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setNegativeButton(java.lang.String)	com.sajmons.moonphases.activities.MainActivity:  void  showRateDialog()
com.sajmons.common.Ln:  void  i(java.lang.String,java.lang.String)	com.sajmons.moonphases.GATracker$1:  void  onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
com.sajmons.moonphases.MainApplication:  void  setAppTheme(android.app.Activity)	com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)
com.sajmons.evaluator.MathPlus:  double  asech(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDistance(android.content.Context,boolean)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatDetails(android.content.Context)
com.sajmons.moonphases.core.MoonPhasesBase:  void  previousDay()	com.sajmons.moonphases.activities.MainActivity:  void  onSwipe(int)
com.sajmons.evaluator.MathPlus:  double  sec(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.activities.MainActivity:  void  gotoDateFromIntent()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)	com.sajmons.mylocation.LocationGetter$2:  void  run()
com.sajmons.moonphases.core.MoonPhasesBase:  void  refresh()	com.sajmons.moonphases.activities.AppPreferencesActivity:  void  onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
com.sajmons.moonphases.core.MoonPhasesBase:  double  getParallacticAngle()	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.moonphases.DetailsDialog:  void  setupWebView()	com.sajmons.moonphases.DetailsDialog:  void  onCreate(android.os.Bundle)
com.sajmons.common.BaseSettings:  void  setAppTheme(java.lang.String)	com.sajmons.moonphases.MainApplication:  void  onCreate()
com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String)	com.sajmons.evaluator.Evaluator:  double  eval(java.lang.String,double)
com.sajmons.moonphases.Ads:  void  initializeBanner(android.app.Activity,int,java.lang.String)	com.sajmons.moonphases.Ads:  void  showBanner(android.app.Activity)
com.sajmons.moonphases.DetailsDialog$3:  void  <init>(com.sajmons.moonphases.DetailsDialog)	com.sajmons.moonphases.DetailsDialog:  void  <init>(android.content.Context,int)
com.sajmons.moonphases.activities.MainActivity:  void  initRiseSetIllum()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.core.MoonPhasesBase:  double  Normalize(double)	com.sajmons.moonphases.core.MoonPhasesBase:  double  calcAge(java.util.Calendar)
com.sajmons.evaluator.MathPlus:  double  lambertw(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.common.AppUtils:  boolean  packageExists(android.content.Context,java.lang.String)	com.sajmons.moonphases.PreferenceHelper:  boolean  isMarketAppInstalled(android.content.Context,com.sajmons.moonphases.MarketType)
com.sajmons.moonphases.activities.MainActivity:  void  refreshNextNewFull()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.MoonPhaseNotifications:  android.graphics.Bitmap  getResizedBitmap(android.graphics.Bitmap,int,int)	com.sajmons.moonphases.MoonPhaseNotifications:  void  ShowNotification(java.lang.Class,android.content.Context,android.graphics.Bitmap,java.lang.String,java.lang.String)
com.sajmons.moonphases.activities.MainActivity:  void  initializeZodiacPlantButtons()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.common.AppUtils:  android.content.Intent  getLaunchIntentForPackage(android.content.Context,java.lang.String)	com.sajmons.common.AppUtils:  android.content.Intent  getLaunchIntent(android.content.Context,java.lang.String)
com.sajmons.mylocation.LocationResolver:  android.os.Handler  access$900(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver$GetLastLocationTask:  void  run()
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatRiseTime(android.content.Context,boolean)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatLargeWidgetText(android.content.Context)
com.sajmons.moonphases.DetailsDialog$2:  void  <init>(com.sajmons.moonphases.DetailsDialog)	com.sajmons.moonphases.DetailsDialog:  void  nextEclipseCountdown()
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  int  compare(com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption,com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOption)	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  int  compare(java.lang.Object,java.lang.Object)
com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  <init>(com.sajmons.moonphases.activities.MainActivity,com.sajmons.moonphases.activities.MainActivity$1)	com.sajmons.moonphases.activities.MainActivity:  void  initializeDrawer()
com.sajmons.moonphases.core.MoonPhasesBase:  boolean  isSouthernHemisphere()	com.sajmons.moonphases.core.MoonPhasesBase:  android.graphics.Bitmap  drawPhase(android.graphics.Bitmap,int,boolean)
com.sajmons.evaluator.MathPlus:  double  acot2(double,double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.activities.MainActivity:  void  onDoubleTap()	com.sajmons.common.SimpleGestureFilter:  boolean  onDoubleTap(android.view.MotionEvent)
com.sajmons.moonphases.activities.MainActivity:  void  initDateAgeZodiacPlant()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.core.TimeSpanFormat:  void  processFormat()	com.sajmons.moonphases.core.TimeSpanFormat:  void  <init>(java.lang.String)
com.sajmons.evaluator.MathPlus:  double  cot(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat,com.sajmons.moonphases.core.TimeSpanFormat$1)	com.sajmons.moonphases.core.TimeSpanFormat:  void  processFormat()
com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()	com.sajmons.moonphases.activities.MainActivity:  void  access$200(com.sajmons.moonphases.activities.MainActivity)
com.sajmons.moonphases.MoonPhaseNotifications:  void  ShowNotification(java.lang.Class,android.content.Context,android.graphics.Bitmap,java.lang.String,java.lang.String)	com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)
com.sajmons.moonphases.activities.MainActivity$9:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  initNextFullNextNew()
com.sajmons.moonphases.activities.MonthViewFragment:  void  refresh(java.util.Calendar)	com.sajmons.moonphases.activities.MainActivity:  void  initializeFragments(boolean)
com.sajmons.evaluator.MathPlus:  double  sech(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.GATracker:  void  event(java.lang.String,java.lang.String,java.lang.String)	com.sajmons.moonphases.activities.MainActivity:  void  gotoDateFromIntent()
com.sajmons.moonphases.activities.MainActivity$2:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity:  void  requestPermissions()
com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat)	com.sajmons.moonphases.core.TimeSpanFormat$TimeSpanFormatOptionComparator:  void  <init>(com.sajmons.moonphases.core.TimeSpanFormat,com.sajmons.moonphases.core.TimeSpanFormat$1)
com.sajmons.moonphases.activities.MainViewFragment:  void  phaseRiseSetIllum(android.view.View)	com.sajmons.moonphases.activities.MainViewFragment:  android.view.View  onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
com.sajmons.mylocation.LocationResolver:  boolean  access$400(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver$1:  void  locationTimeoutFunc()
com.sajmons.moonphases.activities.MainActivity:  void  refreshDateAge()	com.sajmons.moonphases.activities.MainActivity:  void  refresh(boolean)
com.sajmons.moonphases.activities.DrawerAdapterItem:  java.lang.String  getDescription()	com.sajmons.moonphases.activities.DrawerAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)
com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  buildArray(long)	com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  formatObject(long,long)
com.sajmons.moonphases.activities.AppPreferencesActivity$1:  void  <init>(com.sajmons.moonphases.activities.AppPreferencesActivity)	com.sajmons.moonphases.activities.AppPreferencesActivity:  void  <init>()
com.sajmons.moonphases.core.MoonPhasesBase:  double  calcAge(java.util.Calendar)	com.sajmons.moonphases.core.MoonPhasesBase:  void  computePhase(java.util.Calendar)
com.sajmons.dialogs.SimpleFragmentDialog:  void  initImage(int)	com.sajmons.dialogs.SimpleFragmentDialog:  com.sajmons.dialogs.SimpleFragmentDialog  setImage(int)
com.sajmons.evaluator.MathPlus:  double  log(double,double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.receivers.CommonReceiver:  void  ShowNotification(android.content.Context)	com.sajmons.moonphases.receivers.CommonReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.sajmons.moonphases.activities.DrawerAdapter$ViewHolder:  void  <init>(com.sajmons.moonphases.activities.DrawerAdapter,com.sajmons.moonphases.activities.DrawerAdapter$1)	com.sajmons.moonphases.activities.DrawerAdapter:  android.view.View  getView(int,android.view.View,android.view.ViewGroup)
com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  getZodiacDesc(android.content.Context)	com.sajmons.moonphases.activities.MainActivity:  void  showZodiacDialog()
com.sajmons.common.Res:  int  getColor(android.content.Context,java.lang.String)	com.sajmons.moonphases.widgets.WidgetProviderHelper:  int  getThemeColor(android.content.Context)
com.sajmons.evaluator.MathPlus:  double  root(double,double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.activities.MainActivity:  void  initNextFullNextNew()	com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()
com.sajmons.moonphases.MainApplication:  com.google.android.gms.analytics.Tracker  getDefaultTracker()	com.sajmons.moonphases.GATracker:  void  initializeGa(android.content.Context)
com.sajmons.moonphases.activities.MainViewFragment:  void  refresh()	com.sajmons.moonphases.activities.MainActivity:  void  initializeFragments(boolean)
com.sajmons.common.AccelerometerManager:  void  startListening(com.sajmons.common.AccelerometerListener,android.content.Context)	com.sajmons.common.AccelerometerManager:  void  startListening(com.sajmons.common.AccelerometerListener,android.content.Context,int,int)
com.sajmons.moonphases.Ads:  com.google.android.gms.ads.InterstitialAd  access$000()	com.sajmons.moonphases.Ads$1:  void  onAdLoaded()
com.sajmons.common.TimeUtils:  java.lang.String  getDaysAndHours(double,java.lang.String,java.lang.String)	com.sajmons.moonphases.MoonPhasesMain:  java.lang.String  formatAge(android.content.Context,boolean)
com.sajmons.evaluator.Evaluator:  com.sajmons.evaluator.Evaluator$Tree  buildExprTree(java.lang.String)	com.sajmons.evaluator.Evaluator:  boolean  setExpression(java.lang.String)
com.sajmons.moonphases.Ads$2:  void  <init>(android.content.Context)	com.sajmons.moonphases.Ads:  java.util.ArrayList  getDrawerItems(android.content.Context)
com.sajmons.moonphases.Settings:  long  getLastNotificationShowTime()	com.sajmons.moonphases.receivers.CommonReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.sajmons.common.BaseSettings:  boolean  getAllowNotificationMessages()	com.sajmons.moonphases.receivers.CommonReceiver:  void  onReceive(android.content.Context,android.content.Intent)
com.sajmons.evaluator.MathPlus:  double  csch(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.evaluator.MathPlus:  double  acsch(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  formatObject(long,long)	com.sajmons.moonphases.core.TimeSpanFormat:  com.sajmons.moonphases.core.TimeSpanFormat$Countdown  formatObject(java.util.Date,java.util.Date)
com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  <init>(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  <init>(com.sajmons.moonphases.activities.MainActivity,com.sajmons.moonphases.activities.MainActivity$1)
com.sajmons.moonphases.activities.MainActivity:  void  initializeApp()	com.sajmons.moonphases.activities.MainActivity:  void  onCreate(android.os.Bundle)
com.sajmons.mylocation.LocationResolver$2:  void  <init>(com.sajmons.mylocation.LocationResolver)	com.sajmons.mylocation.LocationResolver:  void  <init>(android.content.Context)
com.sajmons.moonphases.activities.DrawerAdapter$ViewHolder:  void  <init>(com.sajmons.moonphases.activities.DrawerAdapter)	com.sajmons.moonphases.activities.DrawerAdapter$ViewHolder:  void  <init>(com.sajmons.moonphases.activities.DrawerAdapter,com.sajmons.moonphases.activities.DrawerAdapter$1)
com.sajmons.moonphases.activities.MainActivity:  void  access$600(com.sajmons.moonphases.activities.MainActivity)	com.sajmons.moonphases.activities.MainActivity$DrawerItemClickListener:  void  onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.sajmons.evaluator.Evaluator:  double  eval()	com.sajmons.evaluator.Evaluator:  double  eval(double)
com.sajmons.evaluator.MathPlus:  double  csc(double)	com.sajmons.evaluator.Evaluator:  double  evalTree(com.sajmons.evaluator.Evaluator$Tree)
